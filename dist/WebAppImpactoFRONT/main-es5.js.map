{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/componentes/adicionales/buscador/buscador.component.ts","webpack:///src/app/componentes/adicionales/buscador/buscador.component.html","webpack:///src/app/componentes/adicionales/mensaje-confirmar/mensaje-confirmar.component.ts","webpack:///src/app/componentes/adicionales/mensaje-confirmar/mensaje-confirmar.component.html","webpack:///src/app/componentes/adicionales/util-calendario/util-calendario-cabecera/util-calendario-cabecera.component.ts","webpack:///src/app/componentes/adicionales/util-calendario/util-calendario-cabecera/util-calendario-cabecera.component.html","webpack:///src/app/componentes/adicionales/util-calendario/util-calendario-customEventTitleFormatter/custom-event-title-formatter.provider.ts","webpack:///src/app/componentes/clases/administrar-clases/administrar-clases.component.ts","webpack:///src/app/componentes/clases/administrar-clases/administrar-clases.component.html","webpack:///src/app/componentes/clases/clases.component.ts","webpack:///src/app/componentes/clases/clases.component.html","webpack:///src/app/componentes/dietas/crear-dietas/crear-dietas.component.ts","webpack:///src/app/componentes/dietas/crear-dietas/crear-dietas.component.html","webpack:///src/app/componentes/dietas/dietas.component.ts","webpack:///src/app/componentes/dietas/dietas.component.html","webpack:///src/app/componentes/dietas/visualizar-dietas/visualizar-dietas.component.ts","webpack:///src/app/componentes/dietas/visualizar-dietas/visualizar-dietas.component.html","webpack:///src/app/componentes/ejercicios/crear-ejercicios/crear-ejercicios.component.ts","webpack:///src/app/componentes/ejercicios/crear-ejercicios/crear-ejercicios.component.html","webpack:///src/app/componentes/ejercicios/ejercicios.component.ts","webpack:///src/app/componentes/ejercicios/ejercicios.component.html","webpack:///src/app/componentes/ejercicios/visualizar-ejercicios/detalles-ejercicio/detalles-ejercicio.component.ts","webpack:///src/app/componentes/ejercicios/visualizar-ejercicios/detalles-ejercicio/detalles-ejercicio.component.html","webpack:///src/app/componentes/ejercicios/visualizar-ejercicios/visualizar-ejercicios.component.ts","webpack:///src/app/componentes/ejercicios/visualizar-ejercicios/visualizar-ejercicios.component.html","webpack:///src/app/componentes/footer/footer.component.ts","webpack:///src/app/componentes/footer/footer.component.html","webpack:///src/app/componentes/login/login.component.ts","webpack:///src/app/componentes/login/login.component.html","webpack:///src/app/componentes/menu/menu.component.ts","webpack:///src/app/componentes/menu/menu.component.html","webpack:///src/app/componentes/navbar/navbar.component.ts","webpack:///src/app/componentes/navbar/navbar.component.html","webpack:///src/app/componentes/seguimiento/seguimiento.component.ts","webpack:///src/app/componentes/seguimiento/seguimiento.component.html","webpack:///src/app/componentes/tablas/crear-tablas/crear-tablas.component.ts","webpack:///src/app/componentes/tablas/crear-tablas/crear-tablas.component.html","webpack:///src/app/componentes/tablas/tablas.component.ts","webpack:///src/app/componentes/tablas/tablas.component.html","webpack:///src/app/componentes/tablas/visualizar-tablas/visualizar-tablas.component.ts","webpack:///src/app/componentes/tablas/visualizar-tablas/visualizar-tablas.component.html","webpack:///src/app/componentes/usuarios/crear-usuario/crear-usuario.component.ts","webpack:///src/app/componentes/usuarios/crear-usuario/crear-usuario.component.html","webpack:///src/app/componentes/usuarios/datos-usuario/datos-usuario.component.ts","webpack:///src/app/componentes/usuarios/datos-usuario/datos-usuario.component.html","webpack:///src/app/componentes/usuarios/usuarios.component.ts","webpack:///src/app/componentes/usuarios/usuarios.component.html","webpack:///src/app/servicios/AuthInteceptor.ts","webpack:///src/app/servicios/clasesService.ts","webpack:///src/app/servicios/dietasService.ts","webpack:///src/app/servicios/ejerciciosService.ts","webpack:///src/app/servicios/localService.ts","webpack:///src/app/servicios/mensajeConfirmarService.ts","webpack:///src/app/servicios/seguimientosService.ts","webpack:///src/app/servicios/tablasService.ts","webpack:///src/app/servicios/usuariosService.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","path","component","children","AppRoutingModule","forRoot","scrollPositionRestoration","imports","AppComponent","localService","comprobarAutentificacion","cerrarSesion","selector","templateUrl","styleUrls","momentAdapterFactory","AppModule","provide","useClass","multi","useValue","useFactory","declarations","providers","bootstrap","BuscadorComponent","fb","zone","selected","openModal","dirtyInput","inputLoader","listLoader","listObjects","setForm","config","form","controls","input","setValue","getFilterValue","setFormListeners","group","valueChanges","subscribe","data","filterObjects","item","property","filter","call","search","values","object","name","toLowerCase","replace","includes","toLocaleLowerCase","length","autocompleteList","nativeElement","style","height","value","emitEvent","markAsDirty","emit","clearInput","isNew","markAsPristine","showAutocomplete","selectObject","MensajeConfirmarComponent","activeModal","close","dismiss","decline","accept","UtilCalendarioCabeceraComponent","locale","viewDateChange","CalendarView","viewDate","CustomEventTitleFormatter","event","horaInicio","transform","start","horaFin","end","title","AdministrarClasesComponent","formBuilder","router","clasesService","toastr","mensajeConfirmarService","clases","pipe","acceso","getAccesoUsuario","error","navigate","setformNuevaClase","listarClases","clase","inicio","fin","formNuevaClase","tipo","required","dia","maxAlumnos","primary","secondary","fecha","hinicio","hfin","Date","year","month","day","hour","minute","color","cargarColor","nuevaClase","crearClase","res","success","timeOut","ngOnInit","err","idClase","eliminarClase","claseId","confirm","confirmed","borrarClase","console","log","ClasesComponent","view","Month","excludeDays","refresh","actionsAsistir","label","cssClass","onClick","apuntarseClase","actionsNoAsistir","desapuntarseClase","actionsClaseLlena","warning","events","cargarEventosCalendario","cambioMes","usuarioLoge","getTokenData","usuario","_id","nombre","listarClasesAsiste","next","clasesAsiste","push","actions","listarClasesNoAsiste","clasesNoLlenas","clasesLlenas","anadirAlumnoClase","eliminarAlumnoClase","mesSeleccionado","charAt","toUpperCase","slice","date","activeDayIsOpen","dayClicked","changeDetection","OnPush","encapsulation","None","CrearDietasComponent","rutaActiva","dietasService","alimentosComida1","alimentosComida2","alimentosComida3","alimentosComida4","alimentosComida5","comidas","kcalTotal","setformNuevaDieta","params","idUsuario","usuarioLogeado","formNuevaDieta","nombreDieta","alimentoComida1","cantidadComida1","kcalComida1","alimentoComida2","cantidadComida2","kcalComida2","alimentoComida3","cantidadComida3","kcalComida3","alimentoComida4","cantidadComida4","kcalComida4","alimentoComida5","cantidadComida5","kcalComida5","comida","inputAlim","inputCant","inputKcal","alimento","get","cantidad","kcal","i","splice","dieta","crearDieta","anadirAlimento","guardarDieta","DietasComponent","usuariosService","dietasUsuario","configBuscador","placeholder","empty","fontSize","fontColor","render","getIdUsuario","cargarDietasUsuario","usuariosNivelAcceso","usuarios","$event","listarDietasUsuario","dietas","VisualizarDietasComponent","checkActivado","idDieta","buscarDieta","eliminarDieta","CrearEjerciciosComponent","httpClient","ejerciciosService","imagenFormateada","FormData","setformNuevaTabla","formNuevoEjercicio","zona","explicacion","consejos","imagen","video","element","nombreImagen","target","files","append","ejercicio","crearEjercicio","fileChange","guardarEjercicio","EjerciciosComponent","tablasUsuario","DetallesEjercicioComponent","_sanitizer","idEjercicio","buscarEjercicio","url","results","match","bypassSecurityTrustResourceUrl","eliminarEjercicio","VisualizarEjerciciosComponent","ejerciciosZona","listarEjerciciosZona","FooterComponent","LoginComponent","setFormLogin","formLogin","dni","password","loginUsuario","updateUserStatus","status","accederApp","MenuComponent","nivelAcceso","NavbarComponent","navExpandida","actualizarUsuarioLogeado","screen","width","removeClass","addClass","attr","SeguimientoComponent","seguimientosService","cargarSeguimientoUsuario","seguimiento","buscarSeguimiento","indice","medida","now","fechaHoy","formNuevoIndice","fechaIndice","peso","altura","imc","grasa","formNuevaMedidas","fechaMedidas","biceps","hombros","pecho","cintura","gluteo","muslo","IMC","toFixed","split","diaIndice","mesIndice","anoIndice","seguimientoNuevo","guardarIndice","diaMedida","mesMedida","anoMedida","fechaMedida","guardarMedidas","idIndice","eliminarIndice","idMedida","eliminarMedidas","indiceId","medidaId","eliminarMedida","CrearTablasComponent","tablasService","ejerciciosDia1","ejerciciosDia2","ejerciciosDia3","ejerciciosDia4","ejerciciosDia5","dias","formNuevaTabla","nombreTabla","ejercicioDia1","repeticionesDia1","ejercicioDia2","repeticionesDia2","ejercicioDia3","repeticionesDia3","ejercicioDia4","repeticionesDia4","ejercicioDia5","repeticionesDia5","inputEjer","inputRep","repeticiones","pesoMax","tabla","crearTabla","anadirEjercicio","guardarTabla","TablasComponent","cargarTablasUsuario","listarTablasUsuario","tablas","VisualizarTablasComponent","cambiosPesoMax","setformPesoMax","idTabla","buscarTabla","formPesoMax","idDia","pesoMaxActualizado","actualizarPesoMax","eliminarTabla","CrearUsuarioComponent","setformNuevoUsuario","formNuevoUsuario","dniUsuario","nombreUsuario","accesoUsuario","domicilioUsuario","telefonoUsuario","nuevoUsuario","domicilio","telefono","registrarUsuario","crearSeguimiento","crearUsuario","DatosUsuarioComponent","actualizandoDatos","cambiosFormDatosComp","buscarUsuario","datosDeUsuarioAlFormulario","setformActualizarDatosUsuario","setformCambiarContrasena","formActualizarDatosUsuario","formCambiarContrasena","passwordVieja","passwordNueva","passwordNuevaConfirmacion","usuarioActualizado","modificarDatosUsuario","contraVieja","contraNueva","contranNuevaConf","cambiarContraseña","eliminarUsuario","cambiarContrasena","UsuariosComponent","usuariosRegistrados","find","x","selectUsuario","refrescarUsuarios","AuthInterceptor","token","localStorage","getItem","handle","req1","clone","headers","set","ClasesService","local","heroku","ServidorBACKEND","authSubject","post","DietasService","EjerciciosService","localFrontApi","herokuFrontApi","ServidorGuardarEjer","guardarImagen","LocalService","jwtHelper","removeItem","t","getToken","decodeToken","MensajeConfirmarService","modalService","message","btnOkText","btnCancelText","dialogSize","modalRef","open","size","componentInstance","result","SeguimientosService","idSeguimiento","TablasService","UsuariosService","guardarToken","accessToken","user","setItem","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './componentes/login/login.component';\r\nimport { MenuComponent } from './componentes/menu/menu.component';\r\nimport { TablasComponent } from './componentes/tablas/tablas.component';\r\nimport { CrearTablasComponent } from './componentes/tablas/crear-tablas/crear-tablas.component';\r\nimport { VisualizarTablasComponent } from './componentes/tablas/visualizar-tablas/visualizar-tablas.component';\r\nimport { UsuariosComponent } from './componentes/usuarios/usuarios.component';\r\nimport { CrearUsuarioComponent } from './componentes/usuarios/crear-usuario/crear-usuario.component';\r\nimport { DatosUsuarioComponent } from './componentes/usuarios/datos-usuario/datos-usuario.component';\r\nimport { EjerciciosComponent } from './componentes/ejercicios/ejercicios.component';\r\nimport { DietasComponent } from './componentes/dietas/dietas.component';\r\nimport { SeguimientoComponent } from './componentes/seguimiento/seguimiento.component';\r\nimport { ClasesComponent } from './componentes/clases/clases.component';\r\nimport { VisualizarEjerciciosComponent } from './componentes/ejercicios/visualizar-ejercicios/visualizar-ejercicios.component';\r\nimport { DetallesEjercicioComponent } from './componentes/ejercicios/visualizar-ejercicios/detalles-ejercicio/detalles-ejercicio.component';\r\nimport { CrearEjerciciosComponent } from './componentes/ejercicios/crear-ejercicios/crear-ejercicios.component';\r\nimport { CrearDietasComponent } from './componentes/dietas/crear-dietas/crear-dietas.component';\r\nimport { VisualizarDietasComponent } from './componentes/dietas/visualizar-dietas/visualizar-dietas.component';\r\nimport { AdministrarClasesComponent } from './componentes/clases/administrar-clases/administrar-clases.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'menu',\r\n    component: MenuComponent,\r\n  },\r\n  {\r\n    path: 'tablas',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: TablasComponent,\r\n      },\r\n      {\r\n        path: 'crear/:idUsuario',\r\n        component: CrearTablasComponent,\r\n      },\r\n      {\r\n        path: 'visualizar/:idTabla',\r\n        component: VisualizarTablasComponent,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'ejercicios',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: EjerciciosComponent,\r\n      },\r\n      {\r\n        path: 'crear',\r\n        component: CrearEjerciciosComponent,\r\n      },\r\n      {\r\n        path: 'visualizar-ejercicios/:zona',\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: VisualizarEjerciciosComponent,\r\n          },\r\n          {\r\n            path: 'detalles-ejercicio/:idEjercicio',\r\n            component: DetallesEjercicioComponent,\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'dietas',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: DietasComponent,\r\n      },\r\n      {\r\n        path: 'crear/:idUsuario',\r\n        component: CrearDietasComponent,\r\n      },\r\n      {\r\n        path: 'visualizar/:idDieta',\r\n        component: VisualizarDietasComponent,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'seguimiento',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: SeguimientoComponent,\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'clases',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ClasesComponent,\r\n      },\r\n      {\r\n        path: 'administrar-clases',\r\n        component: AdministrarClasesComponent,\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'usuarios',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: UsuariosComponent,\r\n      },\r\n      {\r\n        path: 'crearUsuario',\r\n        component: CrearUsuarioComponent,\r\n      },\r\n      {\r\n        path: 'datosUsuario/:idUsuario',\r\n        component: DatosUsuarioComponent,\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    scrollPositionRestoration: 'enabled'\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { LocalService } from './servicios/localService';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(\r\n    private localService: LocalService // Servicio para recuperar datos del localstorage\r\n  ) {\r\n\r\n  }\r\n\r\n  // tslint:disable-next-line: use-lifecycle-interface\r\n  ngOnInit(): void {\r\n    // Si no hay token cerramos sesion para que lo genere al logearse\r\n    if (!this.localService.comprobarAutentificacion()) {\r\n      this.localService.cerrarSesion();\r\n    }\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"content\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './componentes/login/login.component';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UsuariosService } from './servicios/usuariosService';\r\nimport { MenuComponent } from './componentes/menu/menu.component';\r\nimport { FooterComponent } from './componentes/footer/footer.component';\r\nimport { NavbarComponent } from './componentes/navbar/navbar.component';\r\nimport { TablasComponent } from './componentes/tablas/tablas.component';\r\nimport { BuscadorComponent } from './componentes/adicionales/buscador/buscador.component';\r\nimport { CrearTablasComponent } from './componentes/tablas/crear-tablas/crear-tablas.component';\r\nimport { VisualizarTablasComponent } from './componentes/tablas/visualizar-tablas/visualizar-tablas.component';\r\nimport { LocalService } from './servicios/localService';\r\nimport { TablasService } from './servicios/tablasService';\r\nimport { AuthInterceptor } from './servicios/AuthInteceptor';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { UsuariosComponent } from './componentes/usuarios/usuarios.component';\r\nimport { CrearUsuarioComponent } from './componentes/usuarios/crear-usuario/crear-usuario.component';\r\nimport { DatosUsuarioComponent } from './componentes/usuarios/datos-usuario/datos-usuario.component';\r\nimport { EjerciciosComponent } from './componentes/ejercicios/ejercicios.component';\r\nimport { DietasComponent } from './componentes/dietas/dietas.component';\r\nimport { SeguimientoComponent } from './componentes/seguimiento/seguimiento.component';\r\nimport { ClasesComponent } from './componentes/clases/clases.component';\r\nimport { VisualizarEjerciciosComponent } from './componentes/ejercicios/visualizar-ejercicios/visualizar-ejercicios.component';\r\nimport { DetallesEjercicioComponent } from './componentes/ejercicios/visualizar-ejercicios/detalles-ejercicio/detalles-ejercicio.component';\r\nimport { EjerciciosService } from './servicios/ejerciciosService';\r\nimport { CrearEjerciciosComponent } from './componentes/ejercicios/crear-ejercicios/crear-ejercicios.component';\r\nimport { DietasService } from './servicios/dietasService';\r\nimport { CrearDietasComponent } from './componentes/dietas/crear-dietas/crear-dietas.component';\r\nimport { VisualizarDietasComponent } from './componentes/dietas/visualizar-dietas/visualizar-dietas.component';\r\nimport { SeguimientosService } from './servicios/seguimientosService';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { ClasesService } from './servicios/clasesService';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/moment';\r\nimport * as moment from 'moment';\r\nimport { UtilCalendarioCabeceraComponent } from './componentes/adicionales/util-calendario/util-calendario-cabecera/util-calendario-cabecera.component';\r\nimport { AdministrarClasesComponent } from './componentes/clases/administrar-clases/administrar-clases.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MensajeConfirmarComponent } from './componentes/adicionales/mensaje-confirmar/mensaje-confirmar.component';\r\nimport { MensajeConfirmarService } from './servicios/mensajeConfirmarService';\r\n\r\nexport function momentAdapterFactory() {\r\n  return adapterFactory(moment);\r\n}\r\n\r\nregisterLocaleData(localeEs, 'es');\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    MenuComponent,\r\n    FooterComponent,\r\n    NavbarComponent,\r\n    TablasComponent,\r\n    BuscadorComponent,\r\n    CrearTablasComponent,\r\n    VisualizarTablasComponent,\r\n    UsuariosComponent,\r\n    CrearUsuarioComponent,\r\n    DatosUsuarioComponent,\r\n    EjerciciosComponent,\r\n    DietasComponent,\r\n    SeguimientoComponent,\r\n    ClasesComponent,\r\n    VisualizarEjerciciosComponent,\r\n    DetallesEjercicioComponent,\r\n    CrearEjerciciosComponent,\r\n    CrearDietasComponent,\r\n    VisualizarDietasComponent,\r\n    UtilCalendarioCabeceraComponent,\r\n    AdministrarClasesComponent,\r\n    MensajeConfirmarComponent,\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(),\r\n    CalendarModule.forRoot({ provide: DateAdapter, useFactory: momentAdapterFactory }),\r\n    NgbModule,\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: LOCALE_ID, useValue: 'es' },\r\n    UsuariosService,\r\n    LocalService,\r\n    TablasService,\r\n    EjerciciosService,\r\n    DietasService,\r\n    SeguimientosService,\r\n    ClasesService,\r\n    MensajeConfirmarService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","\nimport { Component, OnInit, EventEmitter, ElementRef, ViewChild, Output, Input, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\nexport interface ConfiguracionBuscador {\n  values: any[];\n  selected: any;\n  filter: string;\n  placeholder: string;\n  empty: string;\n  fontSize: string;\n  fontColor: string;\n  inputClass?: string;\n  render: (object) => string;\n}\n\n// tslint:disable no-input-rename no-output-rename component-selector\n\n@Component({\n\n  selector: 'buscador-component',\n  templateUrl: './buscador.component.html',\n  styleUrls: ['./buscador.component.scss']\n})\nexport class BuscadorComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Config que recibimos del padre para la configuracion del componente\n  @Input('config') config: ConfiguracionBuscador;\n\n  // Valor que emitimos al padre (objeto seleccionado de la lista)\n  @Output('selected') selected: EventEmitter<object> = new EventEmitter();\n\n  // Modal en el que mostramos la lista\n  @ViewChild('autocompleteList') autocompleteList: ElementRef;\n\n  // openModal = controla el abrir y cerrar el modal\n  openModal = false;\n\n  // dirtyInput = controla si escribo en el input (si escribo y al seleccionar selecciono fuera borro el input y emito un null)\n  dirtyInput = false;\n\n  // inputLoader = no se esta usando, era para mostrar simbolo de \"cargando\" en input, se añade al listado, con la variable listLoader\n  inputLoader = false;\n\n  // listLoader = muestra el simbolo de \"cargando\" en el listado\n  listLoader = false;\n\n  form: FormGroup;\n  listObjects: any[] = [];\n\n  //#endregion\n\n  constructor(\n    private fb: FormBuilder,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n    this.setForm();\n\n    if (this.config.selected) {\n      this.form.controls.input.setValue(this.getFilterValue(this.config.selected));\n    }\n    this.setFormListeners();\n  }\n  private setForm() {\n    this.form = this.fb.group({\n      input: new FormControl(''),\n    });\n\n  }\n\n  //#region FUNCIONES\n  private setFormListeners() {\n    if (this.form) {\n      this.form.controls.input.valueChanges.subscribe(() => {\n        this.listLoader = true;\n        this.dirtyInput = true;\n        this.openModal = true;\n      });\n      this.form.controls.input.valueChanges.subscribe(data => {\n        this.filterObjects(data);\n      });\n    }\n  }\n\n\n  // Metodos para filtrar las palabras y que no haya problemas al realizar la busqueda\n  private getFilterValue(item: object): string {\n    const property = item[this.config.filter];\n    if (typeof (property) === 'function') {\n      return property.call(item);\n    }\n    return property;\n  }\n\n  private filterObjects(search: string) {\n    this.listObjects = this.config.values.filter(object => {\n      if (this.getFilterValue(object) && typeof search === 'string') {\n        const name = this.getFilterValue(object)\n          .toLowerCase()\n          .replace('á', 'a').replace('é', 'e')\n          .replace('ì', 'i').replace('ó', 'o')\n          .replace('ú', 'u');\n        return name.includes(\n          search.toLocaleLowerCase()\n            .replace('á', 'a').replace('é', 'e')\n            .replace('ì', 'i').replace('ó', 'o')\n            .replace('ú', 'u')\n        );\n      }\n    });\n\n    this.listLoader = false;\n    if (this.listObjects.length > 10) {\n      this.autocompleteList.nativeElement.style.height = '200px';\n    } else if (this.listObjects.length === 0) {\n      this.autocompleteList.nativeElement.style.height = '28px';\n    } else {\n      this.autocompleteList.nativeElement.style.height = (this.listObjects.length * 28) + 'px';\n    }\n  }\n\n  showAutocomplete() {\n    this.filterObjects(this.form.controls.input.value);\n    this.openModal = true;\n  }\n\n  // Este metodo cierra el modal\n  // Si selecciono un elemento (evento click): relleno el valor y lo emito\n  // Si no selecciono un elemento (evento blur, hago click fuera de la lista) y el input ha sido editado: limpio el campo y emito un null\n  selectObject(object) {\n    if (this.openModal) {\n      if (object) {\n        this.form.controls.input.setValue(this.getFilterValue(object), { emitEvent: false });\n        this.form.controls.input.markAsDirty();\n        this.dirtyInput = false;\n        this.selected.emit(object);\n      } else if (this.dirtyInput) {\n        this.clearInput(false);\n        this.dirtyInput = false;\n        this.selected.emit(object);\n      }\n      this.openModal = false;\n    }\n  }\n\n  // Limpiamos el input\n  clearInput(isNew) {\n    this.form.controls.input.setValue('', { emitEvent: false });\n    if (isNew) {\n      this.form.controls.input.markAsPristine();\n    }\n  }\n  //#endregion\n}\n","<div [formGroup]=\"form\" [class.has-error]=\"form.controls['input'].invalid && form.controls['input'].dirty\"\n    [class.has-success]=\"form.controls['input'].valid && form.controls['input'].dirty\">\n    <label class=\"formBuscar col-md-12\">\n        <span class=\"icon\"><i class=\"fa fa-search\"></i></span>\n        <input class=\"form-control col-md-11\" type=\"search\" placeholder=\"Buscar usuario\" id=\"buscarUsuario\" autocomplete=\"off\"\n            formControlName=\"input\" (mousedown)=\"showAutocomplete()\" (blur)=\"selectObject(null)\" type=\"text\"\n            [attr.placeholder]=\"inputLoader ? '' : config.placeholder\" class=\"form-control {{config.inputClass}}\">\n    </label>\n    <div #autocompleteList class=\"form-control autocomplete \" [class.hide]=\"!openModal\">\n        <ng-container *ngIf=\"!listLoader\">\n            <p *ngFor=\"let object of listObjects\" (mousedown)=\"selectObject(object)\">\n                {{config.render(object)}}\n            </p>\n            <p *ngIf=\"listObjects.length == 0\"><strong>{{config.empty}}</strong></p>\n        </ng-container>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-mensaje-confirmar',\n  templateUrl: './mensaje-confirmar.component.html',\n  styleUrls: ['./mensaje-confirmar.component.scss']\n})\nexport class MensajeConfirmarComponent implements OnInit {\n\n\n  @Input() title: string;\n  @Input() message: string;\n  @Input() btnOkText: string;\n  @Input() btnCancelText: string;\n\n  constructor(private activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n  public decline() {\n    this.activeModal.close(false);\n  }\n\n  public accept() {\n    this.activeModal.close(true);\n  }\n\n  public dismiss() {\n    this.activeModal.dismiss();\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">{{ title }}</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    {{ message }}\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn  botonCancelar\" (click)=\"decline()\">{{ btnCancelText }}</button>\n    <button type=\"button\" class=\"btn  botonSi\" (click)=\"accept()\">{{ btnOkText }}</button>\n</div>","import { Output, EventEmitter, Component, OnInit, Input } from '@angular/core';\nimport { CalendarView } from 'angular-calendar';\n\n@Component({\n  selector: 'app-util-calendario-cabecera',\n  templateUrl: './util-calendario-cabecera.component.html',\n  styleUrls: ['./util-calendario-cabecera.component.scss']\n})\nexport class UtilCalendarioCabeceraComponent {\n  @Input() view: CalendarView;\n\n  @Input() viewDate: Date;\n\n  @Input() locale = 'es-ES';\n\n  @Output() viewDateChange = new EventEmitter<Date>();\n\n  CalendarView = CalendarView;\n}\n","<div class=\"row text-center\">\n    <div class=\"col-md-12\">\n        <div class=\"btn-group\">\n            <div class=\"btn boton\" mwlCalendarPreviousView [view]=\"view\" [(viewDate)]=\"viewDate\"\n                (viewDateChange)=\"viewDateChange.next(viewDate)\">\n                Anterior\n            </div>\n            <div class=\"btn btn-outline-secondary\" mwlCalendarToday [(viewDate)]=\"viewDate\"\n                (viewDateChange)=\"viewDateChange.next(viewDate)\">\n                Hoy\n            </div>\n            <div class=\"btn boton\" mwlCalendarNextView [view]=\"view\" [(viewDate)]=\"viewDate\"\n                (viewDateChange)=\"viewDateChange.next(viewDate)\">\n                Siguiente\n            </div>\n        </div>\n    </div>\n\n</div>","import { LOCALE_ID, Inject, Injectable } from '@angular/core';\r\nimport { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\r\n    constructor(@Inject(LOCALE_ID) private locale: string) {\r\n        super();\r\n    }\r\n\r\n    month(event: CalendarEvent): string {\r\n        const horaInicio = new DatePipe(this.locale).transform(event.start, 'HH:mm', this.locale);\r\n        const horaFin = new DatePipe(this.locale).transform(event.end, 'HH:mm', this.locale);\r\n\r\n        return `<b>${event.title}</b>    ${horaInicio} a ${horaFin}`;\r\n    }\r\n\r\n}\r\n","import { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Component, OnInit } from '@angular/core';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Clase } from 'src/app/modelos/clase';\nimport { ClasesService } from 'src/app/servicios/clasesService';\nimport { DatePipe } from '@angular/common';\nimport { MensajeConfirmarService } from 'src/app/servicios/mensajeConfirmarService';\n\n@Component({\n  selector: 'app-administrar-clases',\n  templateUrl: './administrar-clases.component.html',\n  styleUrls: ['./administrar-clases.component.scss']\n})\nexport class AdministrarClasesComponent implements OnInit {\n\n\n\n  constructor(\n    private localService: LocalService, // Servicio para comprobar acceso de persona logeada\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private clasesService: ClasesService, // Servicio para gestionar clases con api\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private mensajeConfirmarService: MensajeConfirmarService // Servicio para confirmar eliminar\n  ) { }\n\n\n  //#region VARIABLES\n\n  // Formulario\n  formNuevaClase: FormGroup;\n\n  // Variable donde guardaremos nueva clase que creamos\n  nuevaClase: Clase;\n\n  // Array donde guardamos clases de listado\n  clases: Clase[] = [];\n  // Pipe para transformar fecha\n  pipe = new DatePipe('es-ES'); // Use your own locale\n\n  //#endregion\n\n  ngOnInit(): void {\n    const acceso = this.localService.getAccesoUsuario();\n    if (acceso !== '1') {\n      this.toastr.error('Falta de permisos para esta accion');\n      this.router.navigate(['/clases']);\n    }\n    this.setformNuevaClase();\n    this.clasesService.listarClases().subscribe(data => {\n      const clases = data;\n      // Formateamos todas las fechas ya que nos las devuelve en formato Date y se verian mal en la tabla\n      for (const clase of clases) {\n        clase.inicio = this.pipe.transform(clase.inicio, 'dd/MM/yy HH:mm');\n      }\n      for (const clase of clases) {\n        clase.fin = this.pipe.transform(clase.fin, 'dd/MM/yy HH:mm');\n      }\n      this.clases = clases;\n      this.clases = data;\n    });\n  }\n\n  //#region FUNCIONES\n\n  private setformNuevaClase() {\n    this.formNuevaClase = this.formBuilder.group({\n      tipo: new FormControl(null, Validators.required),\n      dia: new FormControl(null, Validators.required),\n      inicio: new FormControl(null, Validators.required),\n      fin: new FormControl(null, Validators.required),\n      maxAlumnos: new FormControl(null, Validators.required),\n    });\n  }\n  cargarColor(tipo) {\n    if (tipo === 'Body Impacto') {\n      return { primary: '#ad2121', secondary: '#ad2121' };\n    }\n    if (tipo === 'Zumba') {\n      return { primary: '#5E8700', secondary: '#ad2121' };\n    }\n    if (tipo === 'Pilates') {\n      return { primary: '#30FF62', secondary: '#ad2121' };\n    }\n    if (tipo === 'Flamenco') {\n      return { primary: '#30B1FF', secondary: '#ad2121' };\n    }\n    if (tipo === 'Rumba') {\n      return { primary: '#E9FF30', secondary: '#ad2121' };\n    }\n    if (tipo === 'Hipopresivos') {\n      return { primary: '#AA30FF', secondary: '#ad2121' };\n    }\n    if (tipo === 'Cycle') {\n      return { primary: '#FF8230', secondary: '#ad2121' };\n    }\n    if (tipo === 'GAP') {\n      return { primary: '#FF30DC', secondary: '#ad2121' };\n    }\n  }\n  crearClase() {\n    // Cogemos fecha y hras de string y la pasamos a variables number para crear luego un date\n    const fecha = (this.formNuevaClase.controls.dia.value);\n    const hinicio = (this.formNuevaClase.controls.inicio.value);\n    const hfin = (this.formNuevaClase.controls.fin.value);\n\n    const inicio = new Date(fecha.year, fecha.month - 1, fecha.day, hinicio.hour, hinicio.minute);\n    const fin = new Date(fecha.year, fecha.month - 1, fecha.day, hfin.hour, hfin.minute);\n\n    const tipo = this.formNuevaClase.controls.tipo.value;\n    const color = this.cargarColor(tipo);\n\n    this.nuevaClase = ({\n      tipo,\n      inicio,\n      fin,\n      color,\n      maxAlumnos: this.formNuevaClase.controls.maxAlumnos.value,\n    });\n    //  Mandamos tabla con api a la bbdd\n    this.clasesService.crearClase(this.nuevaClase).subscribe(res => {\n      // Si se crea correctamente mandamos mensaje y redirigimos a clases\n      this.toastr.success('', 'Clase creada correctamente', {\n        timeOut: 3000,\n      });\n      this.ngOnInit();\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al crear clase');\n    });\n  }\n\n  // Funcion para borrar clase\n  borrarClase(idClase) {\n    //  Mandamos tabla con api a la bbdd\n    this.clasesService.eliminarClase(idClase).subscribe(res => {\n      // Si se crea correctamente mandamos mensaje y redirigimos a clases\n      this.toastr.success('', 'Clase eliminada correctamente', {\n        timeOut: 3000,\n      });\n      this.ngOnInit();\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al eliminar clase');\n    });\n  }\n\n  confirmarEliminacionClase(claseId){\n    this.mensajeConfirmarService.confirm('Por favor confirme..', '¿Estas seguro de eliminar la clase?')\n    .then((confirmed) => { if (confirmed) { this.borrarClase(claseId); } })\n    .catch(() => console.log('No eliminar'));\n  }\n}\n","<section class=\"container pt-4\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12 \">\n            <h2 class=\"text-center\"> Creacion de nueva clase</h2>\n        </div>\n        <div class=\"col-sm-10 pt-4\" [formGroup]=\"formNuevaClase\">\n            <label class=\"col-sm-12 col-md-4 control-label \">\n                Tipo de clase\n                <select class=\"form-control\" formControlName=\"tipo\">\n                    <option value=\"Body Impacto\">Body Impacto</option>\n                    <option value=\"Zumba\">Zumba</option>\n                    <option value=\"Pilates\">Pilates</option>\n                    <option value=\"Flamenco\">Flamenco</option>\n                    <option value=\"Rumba\">Rumba</option>\n                    <option value=\"Hipopresivos\">Hipopresivos</option>\n                    <option value=\"GAP\">GAP</option>\n                    <option value=\"Cycle\">Cycle</option>\n\n                </select>\n            </label>\n\n            <label class=\"col-sm-12 col-md-4 control-label \">\n                Nº alumnos maximo\n                <input type=\"number\" class=\"form-control\" formControlName=\"maxAlumnos\">\n            </label>\n            <label class=\"col-sm-12 col-md-4 control-label mx-auto \">\n                Dia\n                <input class=\"form-control\" name=\"dp\" formControlName=\"dia\" ngbDatepicker #d=\"ngbDatepicker\">\n                <button class=\"btn botonCalendario \" (click)=\"d.toggle()\" type=\"button\"><i\n                        class=\"fas fa-calendar-alt\"></i></button>\n            </label>\n            <label class=\"col-sm-12 col-md-4 control-label  ml-auto\">\n                Inicio de clase\n                <ngb-timepicker formControlName=\"inicio\" class=\" \"></ngb-timepicker>\n            </label>\n            <label class=\"col-sm-12 col-md-4 control-label mr-auto\">\n                Fin de clase\n                <ngb-timepicker formControlName=\"fin\"></ngb-timepicker>\n\n            </label>\n\n\n            <div class=\"d-flex justify-content-center p-3\">\n                <button type=\"submit\" class=\"btn botonCrearClase col-sm-12\" (click)=\"crearClase()\"\n                    [disabled]=\"!formNuevaClase.valid\">\n                    <i class=\"fas fa-save\"></i> Crear clase\n                </button>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"table-responsive tablaAlimentos col-sm-12 \">\n        <table class=\"table table-dark  text-center \">\n            <thead class=\"thead-dark\">\n                <tr class=\"d-flex \">\n                    <th class=\"col\">Tipo</th>\n                    <th class=\"col\">Inicio</th>\n                    <th class=\"col\">Fin</th>\n                    <th class=\"col\">Alumnos</th>\n                    <th class=\"col\">Borrar</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let clase of clases\" class=\"d-flex\">\n                    <td class=\"col\"> {{clase.tipo}}</td>\n                    <td class=\"col\"> {{clase.inicio}}</td>\n                    <td class=\"col\"> {{clase.fin}}</td>\n                    <td class=\"col\"> {{clase.alumnos.length}} / {{clase.maxAlumnos}}</td>\n\n                    <td class=\"col text-center\">\n                        <button class=\"btn botonCrearClase mx-auto\"   (click)=\"confirmarEliminacionClase(clase._id)\">\n                            <i class=\"fas fa-trash-alt\"></i>\n                        </button>\n                    </td>\n            </tbody>\n        </table>\n\n    </div>\n\n</section>","import { Component, OnInit, Inject, ChangeDetectionStrategy, OnDestroy, ViewEncapsulation, EventEmitter, Output, Input, } from '@angular/core';\nimport { CalendarEvent, CalendarView, CalendarEventAction, CalendarEventTitleFormatter } from 'angular-calendar';\nimport { isSameDay, isSameMonth } from 'date-fns';\nimport { DOCUMENT, DatePipe } from '@angular/common';\nimport * as moment from 'moment';\nimport { CustomEventTitleFormatter } from '../adicionales/util-calendario/util-calendario-customEventTitleFormatter/custom-event-title-formatter.provider';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { Clase } from 'src/app/modelos/clase';\nimport { ClasesService } from 'src/app/servicios/clasesService';\nimport { Usuario } from 'src/app/modelos/usuario';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-clases',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './clases.component.html',\n  styleUrls: ['./clases.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: CalendarEventTitleFormatter,\n      useClass: CustomEventTitleFormatter,\n    },\n  ],\n})\nexport class ClasesComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Variable comprobar acceso de usuario logeado\n  acceso = this.localService.getAccesoUsuario();\n  // Usuario logeado\n  usuario: Usuario;\n\n  // Variables para manejar el CALENDARIO\n\n  // Indicamos mes que visualizar\n  view: CalendarView = CalendarView.Month;\n\n  // Inficamos fecha de hoy\n  viewDate = new Date();\n\n  // Quitamos fines de semana del caledario ya que no hay clases\n  excludeDays: number[] = [0, 6];\n\n  // Eventos (clases) que apareceran en el calendario\n  events: CalendarEvent[];\n\n  // Comprobar abrir dia seleccionado\n  activeDayIsOpen: boolean;\n\n  // Mes seleccionado en calendario para formatearlo y poner letra mayuscula mas adelante\n  pipe = new DatePipe('es-ES'); // Use your own locale\n  mesSeleccionado;\n\n  // Variable que usamos para indicar al calendario que refresque cuando cargamos clases\n  refresh: Subject<any> = new Subject();\n\n  // Variable que usamos para crear la accion de apuntarse a clase en el calendario\n  actionsAsistir: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fas fa-pencil-alt\"> <span class=\"labelBoton\"> Asistir a la clase </span></i>',\n      cssClass: 'botonAsistir',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.apuntarseClase(event.id);\n      },\n    },\n  ];\n\n  // Variable que usamos para crear la accion de salirte de la clase en el calendario\n  actionsNoAsistir: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fas fa-trash-alt\"><span class=\"labelBoton\">Salir de la clase</span></i>',\n      cssClass: 'botonNoAsistir',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.desapuntarseClase(event.id);\n      },\n    },\n  ];\n\n  // Variable que usamos para crear accion de clase completa\n  actionsClaseLlena: CalendarEventAction[] = [\n    {\n      label: '<span class=\"labelBoton\">Clase llena</span>',\n      cssClass: 'claseLlena',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.toastr.warning('', 'Clase completa', {\n          timeOut: 3000,\n        });\n      },\n    },\n  ];\n\n  //#endregion\n\n  constructor(\n    private localService: LocalService, // Servicio para comprobar acceso de persona logeada\n    private clasesService: ClasesService, // Servicio con el que gestionamos las clases\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n  ) { }\n\n  ngOnInit(): void {\n    this.events = [];\n    // Cargamos eventos al calendario\n    this.cargarEventosCalendario();\n    // Funcion que añadira el mes al componente con mayuscula primera\n    this.cambioMes();\n  }\n\n  //#region FUNCIONES\n\n  cargarEventosCalendario() {\n    // Usuario logeado\n    const usuarioLoge = this.localService.getTokenData();\n    this.usuario = ({\n      _id: usuarioLoge.id,\n      nombre: usuarioLoge.nombre\n    });\n    // Pedimos a la api las clases a las que asiste el usuario y las añadimos al calendario\n    this.clasesService.listarClasesAsiste(this.usuario).subscribe(data => {\n      this.refresh.next();\n      for (const clase of data.clasesAsiste) {\n        this.events.push({\n          id: clase._id,\n          title: clase.tipo,\n          start: new Date(clase.inicio),\n          end: new Date(clase.fin),\n          color: clase.color,\n          actions: this.actionsNoAsistir,\n          cssClass: 'clase '\n        });\n      }\n    });\n    // Pedimos a la api las clases a las que NO asiste el usuario y las añadimos al calendario separando completas de las que hay hueco\n    this.clasesService.listarClasesNoAsiste(this.usuario).subscribe(data => {\n      if (data.clasesNoLlenas) {\n        this.refresh.next();\n        for (const clase of data.clasesNoLlenas) {\n          this.events.push({\n            id: clase._id,\n            title: clase.tipo,\n            start: new Date(clase.inicio),\n            end: new Date(clase.fin),\n            color: clase.color,\n            actions: this.actionsAsistir,\n            cssClass: 'clase '\n          });\n        }\n      }\n      if (data.clasesLlenas) {\n        this.refresh.next();\n        for (const clase of data.clasesLlenas) {\n          this.events.push({\n            id: clase._id,\n            title: clase.tipo,\n            start: new Date(clase.inicio),\n            end: new Date(clase.fin),\n            color: clase.color,\n            actions: this.actionsClaseLlena,\n            cssClass: 'clase '\n          });\n        }\n      }\n    });\n  }\n\n  // Funcion para apuntarse a la clase\n  apuntarseClase(idClase) {\n    //  Mandamos orden de apuntar al usuario de la clase\n    this.clasesService.anadirAlumnoClase(idClase, this.usuario).subscribe(res => {\n      // Si se apunta correctamente mandamos mensaje\n      this.toastr.success('', 'Usuario apuntado a la clase', {\n        timeOut: 3000,\n      });\n      // Recargamos componente para ver datos añadidos y vaciar campos\n      // this.router.navigate(['/menu']);\n      this.ngOnInit();\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al apuntarse a la clase');\n    });\n\n  }\n\n  // Funcion para desapuntarse de la clase\n  desapuntarseClase(idClase) {\n    //  Mandamos orden de desapuntar al usuario de la clase\n    this.clasesService.eliminarAlumnoClase(idClase, this.usuario).subscribe(res => {\n      // Si se desapunta correctamente mandamos mensaje\n      this.toastr.success('', 'Usuario desapuntado de la clase', {\n        timeOut: 3000,\n      });\n      // Recargamos componente para ver datos añadidos y vaciar campos\n      this.ngOnInit();\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al eliminar usuario de la clase');\n    });\n  }\n\n  // Funcion con la que añadiremos al componente el titulo del mes del calendario con 1 letra mayus\n  cambioMes() {\n    const mesSeleccionado = this.pipe.transform(this.viewDate, 'MMMM yyyy');\n    this.mesSeleccionado = mesSeleccionado.charAt(0).toUpperCase() + mesSeleccionado.slice(1);\n  }\n\n  // Funcion que nos despliega las clases del dia al seleccionarlo\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n        this.viewDate = date;\n      }\n    }\n  }\n  //#endregion\n\n}\n","<section class=\"col-sm-12 pt-4 \">\n    <div class=\"row d-flex justify-content-center\" >\n        <h3 class=\"col-md-10 text-center\">{{mesSeleccionado}}</h3>\n        <div class=\"col-md-10 d-flex justify-content-center pb-4\">\n            <app-util-calendario-cabecera [(view)]=\"view\" [(viewDate)]=\"viewDate\" (click)=\"cambioMes()\">\n            </app-util-calendario-cabecera>\n        </div>\n        <div class=\"col-md-10 dark-theme\"  >\n            <mwl-calendar-month-view [viewDate]=\"viewDate\" [events]=\"events\"  [refresh]=\"refresh\"\n                [excludeDays]=\"excludeDays\" [activeDayIsOpen]=\"activeDayIsOpen\" (dayClicked)=\"dayClicked($event.day)\">\n            </mwl-calendar-month-view>\n        </div>\n    </div>\n    <div class=\"row d-flex justify-content-center col-sm-12 col-md-12 pt-4 m-0\" *ngIf=\"acceso == '1'\">\n        <button type=\"submit\" class=\"btn botonAnadirClase col-sm-6 mx-auto \" [routerLink]=\"['administrar-clases']\">\n            <i class=\"fas fa-plus-circle\"></i> Administrar clases\n        </button>\n    </div>\n</section>","import {LocalService} from '../../../servicios/localService';\nimport { Component, OnInit } from '@angular/core';\nimport { Dieta, Alimento, Comida } from 'src/app/modelos/dieta';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { DietasService } from 'src/app/servicios/dietasService';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-crear-dietas',\n  templateUrl: './crear-dietas.component.html',\n  styleUrls: ['./crear-dietas.component.scss']\n})\nexport class CrearDietasComponent implements OnInit {\n  //#region VARIABLES\n\n  // Formulario\n  formNuevaDieta: FormGroup;\n\n  // idUsuario que nos mandamos desde dietas para crear la dieta al usuario\n  idUsuario;\n\n  // Arrays donde guardaremos los ejercicios de cada dia\n  alimentosComida1: Array<Alimento> = [];\n  alimentosComida2: Array<Alimento> = [];\n  alimentosComida3: Array<Alimento> = [];\n  alimentosComida4: Array<Alimento> = [];\n  alimentosComida5: Array<Alimento> = [];\n\n  // Array donde guardaremos las comidas de la dieta con sus alimentos\n  comidas: Array<Comida> = [];\n\n  // Dieta que mandaremos con la api a la bbdd\n  dieta: Dieta;\n\n  // Kcal totales de todos los alimentos\n  kcalTotal = 0;\n\n  //#endregion\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor idUsuario que nos manda el componente tablas\n    private dietasService: DietasService, // Servicio para interactuar con API con TABLAS\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private localService: LocalService // Servicio para comprobar usuario logeado\n\n  ) {\n    this.setformNuevaDieta();\n  }\n\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idUsuario = params.idUsuario;\n      }\n    );\n\n    // Comprobamos que el usuario logeado es admin, y si no lo es e intenta entrar en el perfil de otro usuario le rederigimos a menu\n    const usuarioLogeado = this.localService.getTokenData();\n    if (usuarioLogeado.acceso !== '1') {\n      if (usuarioLogeado.id !== this.idUsuario) {\n        this.toastr.error('Falta de permisos para esta accion');\n        this.router.navigate(['/menu']);\n      }\n    }\n\n  }\n\n  //#region FUNCIONES\n\n  private setformNuevaDieta() {\n    this.formNuevaDieta = this.formBuilder.group({\n      nombreDieta: new FormControl(null, Validators.required),\n\n      alimentoComida1: new FormControl(null, Validators.required),\n      cantidadComida1: new FormControl(null, Validators.required),\n      kcalComida1: new FormControl(null, Validators.required),\n\n      alimentoComida2: new FormControl(null, Validators.required),\n      cantidadComida2: new FormControl(null, Validators.required),\n      kcalComida2: new FormControl(null, Validators.required),\n\n      alimentoComida3: new FormControl(null, Validators.required),\n      cantidadComida3: new FormControl(null, Validators.required),\n      kcalComida3: new FormControl(null, Validators.required),\n\n      alimentoComida4: new FormControl(null, Validators.required),\n      cantidadComida4: new FormControl(null, Validators.required),\n      kcalComida4: new FormControl(null, Validators.required),\n\n      alimentoComida5: new FormControl(null, Validators.required),\n      cantidadComida5: new FormControl(null, Validators.required),\n      kcalComida5: new FormControl(null, Validators.required),\n    });\n  }\n\n  // Funcion que usamos para añadir los alimentos a cada comida en su correspondiente array\n  anadirAlimento(comida, inputAlim, inputCant, inputKcal) {\n    const alimento = ({\n      nombre: this.formNuevaDieta.get(inputAlim).value,\n      cantidad: this.formNuevaDieta.get(inputCant).value,\n      kcal: this.formNuevaDieta.get(inputKcal).value,\n    });\n    comida.push(alimento);\n    // Añadimos kcal de alimento al total\n    this.kcalTotal += this.formNuevaDieta.get(inputKcal).value;\n    // Borramos inputs para añadir otro alimento\n    this.formNuevaDieta.get(inputAlim).setValue(null);\n    this.formNuevaDieta.get(inputCant).setValue(null);\n    this.formNuevaDieta.get(inputKcal).setValue(null);\n  }\n\n  // Funcion para borrar alimento del array si se quiere al dar al boton\n  borrarAlimento(comida, i) {\n    // Borramos primero kcal del alimento a borrar del total y luego el alimento del array\n    this.kcalTotal -= comida[i].kcal;\n    comida.splice(i, 1);\n  }\n\n\n  // Funcion guardamos dieta y mandamos con servicio a la api para guardar en BBDD\n  guardarDieta() {\n    // Comporbamos si la comida tiene alimentos y si es asi la añadimos a las comidas\n    if (this.alimentosComida1.length > 0) {\n      this.comidas.push(({\n        alimento: this.alimentosComida1\n      }));\n    }\n    if (this.alimentosComida2.length > 0) {\n      this.comidas.push(({\n        alimento: this.alimentosComida2\n      }));\n    }\n    if (this.alimentosComida3.length > 0) {\n      this.comidas.push(({\n        alimento: this.alimentosComida3\n      }));\n    }\n    if (this.alimentosComida4.length > 0) {\n      this.comidas.push(({\n        alimento: this.alimentosComida4\n      }));\n    }\n    if (this.alimentosComida5.length > 0) {\n      this.comidas.push(({\n        alimento: this.alimentosComida5\n      }));\n    }\n\n    // Si hay comidas rellenados creamos la dieta y la mandamos a la api\n    if (this.comidas.length > 0) {\n      this.dieta = ({\n        usuario: this.idUsuario,\n        nombre: this.formNuevaDieta.controls.nombreDieta.value,\n        comida: this.comidas,\n        kcalTotal: this.kcalTotal\n      });\n      // Mandamos dieta con api a la bbdd\n      this.dietasService.crearDieta(this.dieta).subscribe(res => {\n        // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n        this.toastr.success('', 'Dieta creada correctamente', {\n          timeOut: 3000,\n        });\n        this.router.navigate(['/dietas']);\n      }, err => {\n        // Si da error lo mostramos\n        this.toastr.error('Error al crear dieta');\n      });\n    } else {\n      // Si no hay alimentos en dieta mostramos notificacion\n      this.toastr.warning('', 'No hay ningun alimento en la dieta', {\n        timeOut: 3000,\n      });\n    }\n  }\n\n  //#endregion\n\n}\n","<section class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12\">\n            <h2 class=\"\"> Creacion de nueva dieta</h2>\n        </div>\n\n\n        <div class=\"col-sm-12 \" [formGroup]=\"formNuevaDieta\">\n            <label class=\"col-sm-12 control-label text-left labelNombreDieta\">\n                Nombre de la dieta\n                <input type=\"text\" class=\"form-control\" formControlName=\"nombreDieta\">\n            </label>\n            <div class=\"comida\">\n                <h4 class=\"col-sm-12 pl-0\">Comida 1 - Desayuno</h4>\n                <label class=\"control-label text-left col-md-6 col-sm-12 pl-0  pl-0  \"> Alimento\n                    <input type=\"text\" class=\"form-control\" formControlName=\"alimentoComida1\">\n                </label>\n                <label class=\"control-label text-left col-md-2 col-sm-12 pl-0 pl-0\"> Cantidad\n                    <input type=\"text\" class=\"form-control\" formControlName=\"cantidadComida1\">\n                </label>\n                <label class=\"control-label text-left col-md-2 col-sm-12 pl-0 pl-0\"> Kcal\n                    <input type=\"number\" class=\"form-control\" formControlName=\"kcalComida1\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirAlim col-md-2 mx-auto\"\n                    (click)=\"anadirAlimento(alimentosComida1,'alimentoComida1','cantidadComida1','kcalComida1')\"\n                    [disabled]=\"(!formNuevaDieta.controls.alimentoComida1.valid || !formNuevaDieta.controls.cantidadComida1.valid )\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir alimento\n                </button>\n                <div class=\"table-responsive tablaAlimentos col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-6\">Alimento</th>\n                                <th class=\"col-5 col-md-2\">Cantidad</th>\n                                <th class=\"col-5 col-md-2\">Kcal</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let alimento of alimentosComida1; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-6\"> {{alimento.nombre}}</td>\n                                <td class=\"col-5 col-md-2\"> {{alimento.cantidad}}</td>\n                                <td class=\"col-5 col-md-2\"> {{alimento.kcal}}</td>\n                                <td class=\"col-3 col-md-2 text-center\">\n                                    <button class=\"btn botonBorrarAli mx-auto\"\n                                        (click)=\"borrarAlimento(alimentosComida1,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i>\n                                    </button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n\n\n\n\n            <div class=\"comida\">\n                <h4 class=\"col-sm-12 pl-0\">Comida 2 - Almuerzo</h4>\n                <label class=\"control-label text-left col-md-6 col-sm-12 pl-0  pl-0  \"> Alimento\n                    <input type=\"text\" class=\"form-control\" formControlName=\"alimentoComida2\">\n                </label>\n                <label class=\"control-label text-left col-md-2 col-sm-12 pl-0 pl-0\"> Cantidad\n                    <input type=\"text\" class=\"form-control\" formControlName=\"cantidadComida2\">\n                </label>\n                <label class=\"control-label text-left col-md-2 col-sm-12 pl-0 pl-0\"> Kcal\n                    <input type=\"number\" class=\"form-control\" formControlName=\"kcalComida2\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirAlim col-md-2 mx-auto\"\n                    (click)=\"anadirAlimento(alimentosComida2,'alimentoComida2','cantidadComida2','kcalComida2')\"\n                    [disabled]=\"(!formNuevaDieta.controls.alimentoComida2.valid || !formNuevaDieta.controls.cantidadComida2.valid )\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir alimento\n                </button>\n                <div class=\"table-responsive tablaAlimentos col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-6\">Alimento</th>\n                                <th class=\"col-5 col-md-2\">Cantidad</th>\n                                <th class=\"col-5 col-md-2\">Kcal</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let alimento of alimentosComida2; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-6\"> {{alimento.nombre}}</td>\n                                <td class=\"col-5 col-md-2\"> {{alimento.cantidad}}</td>\n                                <td class=\"col-5 col-md-2\"> {{alimento.kcal}}</td>\n                                <td class=\"col-3 col-md-2 text-center\">\n                                    <button class=\"btn botonBorrarAli mx-auto\"\n                                        (click)=\"borrarAlimento(alimentosComida2,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i>\n                                    </button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n\n\n\n\n\n            <div class=\"comida\">\n                <h4 class=\"col-sm-12 pl-0\">Comida 3 - Comida</h4>\n                <label class=\"control-label text-left col-md-6 col-sm-12 pl-0  pl-0  \"> Alimento\n                    <input type=\"text\" class=\"form-control\" formControlName=\"alimentoComida3\">\n                </label>\n                <label class=\"control-label text-left col-md-2 col-sm-12 pl-0 pl-0\"> Cantidad\n                    <input type=\"text\" class=\"form-control\" formControlName=\"cantidadComida3\">\n                </label>\n                <label class=\"control-label text-left col-md-2 col-sm-12 pl-0 pl-0\"> Kcal\n                    <input type=\"number\" class=\"form-control\" formControlName=\"kcalComida3\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirAlim col-md-2 mx-auto\"\n                    (click)=\"anadirAlimento(alimentosComida3,'alimentoComida3','cantidadComida3','kcalComida3')\"\n                    [disabled]=\"(!formNuevaDieta.controls.alimentoComida3.valid || !formNuevaDieta.controls.cantidadComida3.valid )\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir alimento\n                </button>\n                <div class=\"table-responsive tablaAlimentos col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-6\">Alimento</th>\n                                <th class=\"col-5 col-md-2\">Cantidad</th>\n                                <th class=\"col-5 col-md-2\">Kcal</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let alimento of alimentosComida3; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-6\"> {{alimento.nombre}}</td>\n                                <td class=\"col-5 col-md-2\"> {{alimento.cantidad}}</td>\n                                <td class=\"col-5 col-md-2\"> {{alimento.kcal}}</td>\n                                <td class=\"col-3 col-md-2 text-center\">\n                                    <button class=\"btn botonBorrarAli mx-auto\"\n                                        (click)=\"borrarAlimento(alimentosComida3,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i>\n                                    </button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n\n\n\n\n            <div class=\"comida\">\n                <h4 class=\"col-sm-12 pl-0\">Comida 4 - Merienda</h4>\n                <label class=\"control-label text-left col-md-6 col-sm-12 pl-0  pl-0  \"> Alimento\n                    <input type=\"text\" class=\"form-control\" formControlName=\"alimentoComida4\">\n                </label>\n                <label class=\"control-label text-left col-md-2 col-sm-12 pl-0 pl-0\"> Cantidad\n                    <input type=\"text\" class=\"form-control\" formControlName=\"cantidadComida4\">\n                </label>\n                <label class=\"control-label text-left col-md-2 col-sm-12 pl-0 pl-0\"> Kcal\n                    <input type=\"number\" class=\"form-control\" formControlName=\"kcalComida4\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirAlim col-md-2 mx-auto\"\n                    (click)=\"anadirAlimento(alimentosComida4,'alimentoComida4','cantidadComida4','kcalComida4')\"\n                    [disabled]=\"(!formNuevaDieta.controls.alimentoComida4.valid || !formNuevaDieta.controls.cantidadComida4.valid )\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir alimento\n                </button>\n                <div class=\"table-responsive tablaAlimentos col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-6\">Alimento</th>\n                                <th class=\"col-5 col-md-2\">Cantidad</th>\n                                <th class=\"col-5 col-md-2\">Kcal</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let alimento of alimentosComida4; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-6\"> {{alimento.nombre}}</td>\n                                <td class=\"col-5 col-md-2\"> {{alimento.cantidad}}</td>\n                                <td class=\"col-5 col-md-2\"> {{alimento.kcal}}</td>\n                                <td class=\"col-3 col-md-2 text-center\">\n                                    <button class=\"btn botonBorrarAli mx-auto\"\n                                        (click)=\"borrarAlimento(alimentosComida4,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i>\n                                    </button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n\n            <div class=\"comida\">\n                <h4 class=\"col-sm-12 pl-0\">Comida 5 - Cena</h4>\n                <label class=\"control-label text-left col-md-6 col-sm-12 pl-0  pl-0  \"> Alimento\n                    <input type=\"text\" class=\"form-control\" formControlName=\"alimentoComida5\">\n                </label>\n                <label class=\"control-label text-left col-md-2 col-sm-12 pl-0 pl-0\"> Cantidad\n                    <input type=\"text\" class=\"form-control\" formControlName=\"cantidadComida5\">\n                </label>\n                <label class=\"control-label text-left col-md-2 col-sm-12 pl-0 pl-0\"> Kcal\n                    <input type=\"number\" class=\"form-control\" formControlName=\"kcalComida5\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirAlim col-md-2 mx-auto\"\n                    (click)=\"anadirAlimento(alimentosComida5,'alimentoComida5','cantidadComida5','kcalComida5')\"\n                    [disabled]=\"(!formNuevaDieta.controls.alimentoComida5.valid || !formNuevaDieta.controls.cantidadComida5.valid )\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir alimento\n                </button>\n                <div class=\"table-responsive tablaAlimentos col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-6\">Alimento</th>\n                                <th class=\"col-5 col-md-2\">Cantidad</th>\n                                <th class=\"col-5 col-md-2\">Kcal</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let alimento of alimentosComida5; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-6\"> {{alimento.nombre}}</td>\n                                <td class=\"col-5 col-md-2\"> {{alimento.cantidad}}</td>\n                                <td class=\"col-5 col-md-2\"> {{alimento.kcal}}</td>\n                                <td class=\"col-3 col-md-2 text-center\">\n                                    <button class=\"btn botonBorrarAli mx-auto\"\n                                        (click)=\"borrarAlimento(alimentosComida5,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i>\n                                    </button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-end \">\n                <h5 class=\"kcalTotales\">La dieta tiene <strong>{{kcalTotal}} kcal </strong></h5>\n            </div>\n\n\n            <div class=\"d-flex justify-content-center p-3\">\n                <button type=\"submit\" class=\"btn botonGuardarDieta col-sm-12\" (click)=\"guardarDieta()\" [disabled]=\"!formNuevaDieta.controls.nombreDieta.valid\">\n                    <i class=\"fas fa-save pr-1\"></i>Guardar dieta\n                </button>\n            </div>\n\n        </div>\n\n    </div>\n\n\n</section>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { ConfiguracionBuscador } from '../adicionales/buscador/buscador.component';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { Dieta } from 'src/app/modelos/dieta';\nimport { DietasService } from 'src/app/servicios/dietasService';\n\n// tslint:disable: member-ordering\n\n@Component({\n  selector: 'app-dietas',\n  templateUrl: './dietas.component.html',\n  styleUrls: ['./dietas.component.scss']\n})\nexport class DietasComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Array donde almacenamos las tablas que nos devuelve la api para el usuario seleccionado o logeado\n  dietasUsuario: Dieta[] = [];\n\n  // Nivel de acceso de usuario logeado\n  acceso = this.localService.getAccesoUsuario();\n\n  // Id de usuario logeado\n  idUsuario = null;\n\n  //#endregion\n\n  constructor(\n    private usuariosService: UsuariosService, // Servicio para interactuar con API\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private dietasService: DietasService // Servicio para interactuar con API con DIETAS\n  ) {\n  }\n\n  ngOnInit(): void {\n    // Si accceso es 1 seria admin por lo que usaria el buscador para cargar tablas de usuario\n    // si es otro nivel es un usuario, cargamos sus tablas\n    if (this.acceso !== '1') {\n      this.idUsuario = this.localService.getIdUsuario();\n      this.cargarDietasUsuario(this.idUsuario);\n    } else {\n      // Cargamos los nombres de usuarios de BD en el componente de buscador\n      this.usuariosService.usuariosNivelAcceso([3, 5, 7, 8]).subscribe(data => (\n        this.configBuscador.values = data.usuarios\n      ));\n    }\n  }\n\n  //#region COMPONENTES\n\n  // Buscador de usuarios\n  configBuscador: ConfiguracionBuscador = {\n    values: [],\n    selected: null,\n    filter: 'nombre',\n    placeholder: 'Seleccione un Usuario',\n    empty: 'No hay usuarios con ese nombre',\n    fontSize: '14px',\n    fontColor: '#000000',\n    render: (value) => value.nombre\n  };\n\n  // Funcion utilizada pada cuando se selecciona usuario del autocomplete en la version admin\n  selectUsuario($event) {\n    if ($event != null) {\n      this.idUsuario = $event._id;\n      this.cargarDietasUsuario(this.idUsuario);\n    } else {\n      this.dietasUsuario = []; // Si selecciona fuera vaciamos las dietas por si se cargaron antes\n      this.idUsuario = null; // Tambien vaciamos el usuario ya que no habria ninguno seleccionado\n    }\n  }\n\n  // Buscamos con api las dietas del usuario seleccionado y las cargamos\n  cargarDietasUsuario(idUsuario) {\n    this.dietasService.listarDietasUsuario(idUsuario).subscribe(data => {\n      this.dietasUsuario = data.dietas;\n    });\n  }\n  //#endregion\n\n}\n","<section class=\"col-sm-12 pt-4\">\n    <div class=\"row\" *ngIf=\"acceso == '1'\">  \n        <div class=\"col-sm-12 d-flex justify-content-center\">\n            <div class=\"col-md-4 pt-5\">\n                <buscador-component (selected)=\"selectUsuario($event)\" [config]=\"configBuscador\">\n                </buscador-component>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row d-flex justify-content-center \">\n        <div class=\"col-sm-12 col-md-2 tarjeta row \"  [routerLink]=\"['/dietas/crear',idUsuario]\" *ngIf=\"(acceso !='1') || (acceso == '1' && idUsuario != null)\">\n            <i class=\"fas fa-plus-square fa-4x\"></i>\n            <h4 class=\"col-sm-12\">Añadir dieta</h4>\n        </div>\n        <div class=\"col-sm-12 col-md-2 tarjeta row \" *ngFor=\"let dieta of dietasUsuario\"   [routerLink]=\"['/dietas/visualizar',dieta._id]\">\n            <i class=\"fas fa-calendar-alt fa-4x\"></i>\n            \n            <h4 class=\"col-sm-12\">{{dieta.nombre}}</h4>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Dieta, Alimento, Comida } from 'src/app/modelos/dieta';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { TablasService } from 'src/app/servicios/tablasService';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { DietasService } from 'src/app/servicios/dietasService';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { MensajeConfirmarService } from 'src/app/servicios/mensajeConfirmarService';\n\n@Component({\n  selector: 'app-visualizar-dietas',\n  templateUrl: './visualizar-dietas.component.html',\n  styleUrls: ['./visualizar-dietas.component.scss']\n})\nexport class VisualizarDietasComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // id de la dieta seleccionada que nos mandamos desde el menu de dietas\n  idDieta;\n\n  // dieta correspondiente al idDieta que nos devuelve la API\n  dieta: Dieta;\n\n  // acceso del usuario para ver si es admin\n  acceso = this.localService.getAccesoUsuario();\n\n  // Variable para verificar estar seguro de borrar o no\n  checkActivado = false;\n\n  //#endregion\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor idTabla que nos manda el componente tablas\n    private dietasService: DietasService, // Servicio para interactuar con API con DIETAS\n    private router: Router,\n    private localService: LocalService, // Servicio para buscar acceso usuario logeado en token\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private mensajeConfirmarService: MensajeConfirmarService // Servicio para confirmar eliminar\n  ) {\n  }\n\n  ngOnInit(): void {\n    // Comprobamos que el usuario logeado es admin, y si no lo es e intenta entrar en el perfil de otro usuario le rederigimos a menu\n    const usuarioLogeado = this.localService.getTokenData();\n\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idDieta = params.idDieta;\n      }\n    );\n\n    this.dietasService.buscarDieta(this.idDieta).subscribe(data => {\n      // La api nos devuelve array de dietas por lo que cogemos el primero ya que solo hay 1\n      this.dieta = ({\n        _id: data.dieta[0]._id,\n        usuario: data.dieta[0].usuario,\n        nombre: data.dieta[0].nombre,\n        comida: data.dieta[0].comida,\n        kcalTotal: data.dieta[0].kcalTotal\n      });\n      if (usuarioLogeado.acceso !== '1') {\n        if (this.dieta) {\n          if (usuarioLogeado.id !== this.dieta.usuario) {\n            this.toastr.error('Falta de permisos para esta accion');\n            this.router.navigate(['/menu']);\n          }\n        }\n      }\n    });\n  }\n\n\n  //#region FUNCIONES\n\n  checkEliminar() {\n    if (!this.checkActivado) {\n      this.checkActivado = true;\n    } else {\n      this.checkActivado = false;\n\n    }\n  }\n  eliminarDieta() {\n    this.dietasService.eliminarDieta(this.idDieta).subscribe(res => {\n      // Si se elimina corectamente\n      this.toastr.success('', 'Dieta eliminada correctamente', {\n        timeOut: 3000,\n      });\n      this.router.navigate(['/dietas']);\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al eliminar la dieta');\n    });\n  }\n\n  // Confirmar eliminacion con alert\n  public confirmarEliminacion() {\n    this.mensajeConfirmarService.confirm('Por favor confirme..', '¿Estas seguro de eliminar la dieta?')\n      .then((confirmed) => { if (confirmed) { this.eliminarDieta(); } })\n      .catch(() => console.log('No eliminar'));\n  }\n  //#endregion\n}\n\n\n\n\n","<section class=\"col-sm-12 \">\n    <div class=\"row d-flex justify-content-center\" *ngIf=\"dieta\">\n        <h2 class=\"col-sm-12 text-center\"> {{dieta.nombre}}</h2>\n        <div class=\"col-md-8 comida\" *ngFor=\"let comida of dieta.comida;index as i\">\n            <div *ngIf=\"dieta.comida.length == 5\">\n                <h4 *ngIf=\"i==0\">Comida {{i+1}} - Desayuno</h4>\n                <h4 *ngIf=\"i==1\">Comida {{i+1}} - Almuerzo</h4>\n                <h4 *ngIf=\"i==2\">Comida {{i+1}} - Comida</h4>\n                <h4 *ngIf=\"i==3\">Comida {{i+1}} - Merienda</h4>\n                <h4 *ngIf=\"i==4\">Comida {{i+1}} - Cena</h4>\n            </div>\n            <div *ngIf=\"dieta.comida.length<5\">\n                <h3>Comida {{i+1}} </h3>\n            </div>\n            <div class=\"table-responsive\">\n                <table class=\"table table-dark  \">\n                    <thead class=\"thead-dark\">\n                        <tr class=\"d-flex\">\n                            <th class=\"col-4 col-md-6\">Alimento</th>\n                            <th class=\"col-5 col-md-3\">Cantidad</th>\n                            <th class=\"col-5 col-md-3\">Kcal</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let alimento of comida.alimento\" class=\"d-flex\">\n                            <td class=\"col-4 col-md-6\">{{alimento.nombre}}</td>\n                            <td class=\"col-5 col-md-3\">{{alimento.cantidad}}</td>\n                            <td class=\"col-5 col-md-3\">{{alimento.kcal}}</td>\n\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class=\"col-sm-8 d-flex justify-content-end pr-0\">\n            <h5 class=\"kcalTotales \">La dieta tiene <strong>{{dieta.kcalTotal}} kcal </strong></h5>\n        </div>\n\n        <div class=\"col-sm-12 p-2 divEliminar\" >\n            <button type=\"submit\" class=\"btn botonEliminarDieta col-sm-12 col-md-2 \" (click)=\"confirmarEliminacion()\">\n                <i class=\"fas fa-trash-alt pr-1\"></i> Eliminar dieta\n            </button>\n        </div>\n    </div>\n</section>","import { HttpClient } from '@angular/common/http';\nimport { FormControl, Validators } from '@angular/forms/';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { EjercicioEjemplo } from 'src/app/modelos/ejercicioEjemplo';\nimport { EjerciciosService } from 'src/app/servicios/ejerciciosService';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-crear-ejercicios',\n  templateUrl: './crear-ejercicios.component.html',\n  styleUrls: ['./crear-ejercicios.component.scss']\n})\nexport class CrearEjerciciosComponent implements OnInit {\n  //#region VARIABLES\n\n  // Formulario\n  formNuevoEjercicio: FormGroup;\n\n  // Ejercicio nuevo que mandaremos a guardar con api\n  ejercicio: EjercicioEjemplo;\n\n  // Variable donde guardamos URL de la imagen que subimos\n  nombreImagen;\n\n  // Variable donde guardamos imagen que subimos al file\n  imagen: File;\n\n  // Variable formateada para mandarla a la api\n  imagenFormateada = new FormData();\n\n  //#endregion\n\n  constructor(\n    private localService: LocalService, // Servicio para comprobar acceso\n    private formBuilder: FormBuilder,\n    private httpClient: HttpClient,\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private ejerciciosService: EjerciciosService // Servicio con el que mandamos a api el ejercicio nuevo\n  ) {\n    this.setformNuevaTabla();\n  }\n\n\n  ngOnInit(): void {\n    // En este componente solo puede entrar un administrador, comprobamos y si no lo es lo echamos\n    const acceso = this.localService.getAccesoUsuario();\n    if (acceso !== '1') {\n      this.toastr.error('Falta de permisos para esta accion');\n      this.router.navigate(['/menu']);\n    }\n  }\n\n  //#region FUNCIONES\n\n  private setformNuevaTabla() {\n    this.formNuevoEjercicio = this.formBuilder.group({\n      nombre: new FormControl(null, Validators.required),\n      zona: new FormControl(null, Validators.required),\n      explicacion: new FormControl(null, Validators.required),\n      consejos: new FormControl(null),\n      imagen: new FormControl(null, Validators.required),\n      video: new FormControl(null),\n    });\n  }\n\n  // Funcion con la que cogemos nombre de imagen del file y añadimos la ruta donde la guardaremos para mandar a api\n  fileChange(element) {\n    this.nombreImagen = element.target.files[0].name;\n    this.imagenFormateada.append('file', element.target.files[0]);\n  }\n\n\n  // Funcion guardamos ejercicio y mandamos con servicio a la api para guardar en BBDD\n  guardarEjercicio() {\n    this.ejercicio = ({\n      nombre: this.formNuevoEjercicio.controls.nombre.value,\n      zona: this.formNuevoEjercicio.controls.zona.value,\n      explicacion: this.formNuevoEjercicio.controls.explicacion.value,\n      consejos: this.formNuevoEjercicio.controls.consejos.value,\n      imagen: this.nombreImagen,\n      video: this.formNuevoEjercicio.controls.video.value,\n    });\n    // Mandamos tabla con api a la bbdd\n    this.ejerciciosService.crearEjercicio(this.ejercicio, this.imagenFormateada).subscribe(res => {\n      // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n      this.toastr.success('', 'Ejercicio creado correctamente', {\n        timeOut: 3000,\n      });\n      this.router.navigate(['/ejercicios']);\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al crear ejercicio');\n    });\n  }\n\n  //#endregion\n\n}\n","<section class=\"container pt-4\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12 \">\n            <h2 class=\"text-center\"> Creacion de nuevo ejercicio</h2>\n        </div>\n        <div class=\"col-sm-10 pt-4\" [formGroup]=\"formNuevoEjercicio\" enctype=\"multipart/form-data\">\n            <label class=\"col-sm-12 col-md-6 control-label text-left \">\n                Nombre del ejercicio\n                <input type=\"text\" class=\"form-control\" formControlName=\"nombre\">\n            </label>\n            <label class=\"col-sm-12 col-md-6 control-label text-left \">\n                Zona del cuerpo al que pertenece\n                <select class=\"form-control\" formControlName=\"zona\">\n                    <option value=\"1\">Pecho</option>\n                    <option value=\"2\">Espalda</option>\n                    <option value=\"3\">Pierna</option>\n                    <option value=\"4\">Hombro</option>\n                    <option value=\"5\">Brazo</option>\n                    <option value=\"6\">Abdomen</option>\n                  </select>\n            </label>\n            <label class=\"col-sm-12 col-md-6 control-label text-left \">\n                Imagen ejemplo del ejercicio\n                <input type=\"file\" class=\"custom-file-input\" id=\"inputImagen\"  lang=\"es\" formControlName=\"imagen\" (change)=\"fileChange($event)\">\n                <label class=\"custom-file-label subirImagen\" >{{nombreImagen}}</label>\n            </label>\n            <label class=\"col-sm-12 col-md-6 control-label text-left video\">\n                URL Video Youtube \n                <input type=\"text\" class=\"form-control\" formControlName=\"video\">\n            </label>\n            <label class=\"col-sm-12 ontrol-label text-left \">\n                Explicacion\n                <textarea class=\"form-control\" formControlName=\"explicacion\" rows=\"3\"></textarea>\n            </label>\n            <label class=\"col-sm-12  control-label text-left \">\n                Consejos\n                <textarea class=\"form-control\" formControlName=\"consejos\" rows=\"3\"></textarea>\n            </label>\n\n            <div class=\"d-flex justify-content-center p-3\">\n                <button type=\"submit\" class=\"btn botonGuardarEjercicio col-sm-12\" (click)=\"guardarEjercicio()\"[disabled]='!formNuevoEjercicio.valid'>\n                    <i class=\"fas fa-save\"></i>Guardar ejercicio\n                </button>\n            </div>\n\n        </div>\n    </div>\n\n\n\n</section>","import { Component, OnInit } from '@angular/core';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-ejercicios',\n  templateUrl: './ejercicios.component.html',\n  styleUrls: ['./ejercicios.component.scss']\n})\nexport class EjerciciosComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Array donde almacenamos las tablas que nos devuelve la api para el usuario seleccionado o logeado\n  tablasUsuario: [] = [];\n\n  // Nivel de acceso de usuario logeado\n  acceso = this.localService.getAccesoUsuario();\n\n  // Id de usuario logeado\n  idUsuario = null;\n\n  //#endregion\n\n  constructor(\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"col-sm-12 pt-4\">\n    <div class=\"row\" *ngIf=\"acceso == '1'\">\n        <div class=\"col-sm-12 d-flex justify-content-center\">\n            <div class=\"col-md-4 pt-5\">\n\n            </div>\n        </div>\n    </div>\n    <div class=\"row d-flex justify-content-center \">\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','1']\">\n            <h4 class=\"col-sm-12\"> Pecho</h4>\n            <img src=\"/assets/imagenes/ejerciciosPecho.png\" class=\"img-fluid p-4\">\n\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','2']\">\n            <h4 class=\"col-sm-12\"> Espalda</h4>\n            <img src=\"/assets/imagenes/ejerciciosEspalda.png\" class=\"img-fluid p-4\">\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','3']\">\n            <h4 class=\"col-sm-12\"> Pierna</h4>\n            <img src=\"/assets/imagenes/ejerciciosPierna.png\" class=\"img-fluid p-4\">\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','4']\">\n            <h4 class=\"col-sm-12\"> Hombro</h4>\n            <img src=\"/assets/imagenes/ejerciciosHombro.png\" class=\"img-fluid p-4\">\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','5']\">\n            <h4 class=\"col-sm-12\"> Brazo</h4>\n            <img src=\"/assets/imagenes/ejerciciosBrazo.png\" class=\"img-fluid p-4\">\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','6']\">\n            <h4 class=\"col-sm-12\"> Abdomen</h4>\n            <img src=\"/assets/imagenes/ejerciciosAbdomen.png\" class=\"img-fluid p-4\">\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row pb-5 \" [routerLink]=\"['/ejercicios/crear']\" *ngIf=\"acceso == '1'\">\n            <h4 class=\"col-sm-12\">Añadir ejercicio</h4>\n            <i class=\"fas fa-plus-square fa-4x\"></i>\n        </div>\n    </div>\n</section>","\nimport { Component, OnInit } from '@angular/core';\nimport { EjercicioEjemplo } from 'src/app/modelos/ejercicioEjemplo';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { EjerciciosService } from 'src/app/servicios/ejerciciosService';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { ToastrService } from 'ngx-toastr';\nimport { MensajeConfirmarService } from 'src/app/servicios/mensajeConfirmarService';\n\n\n@Component({\n  selector: 'app-detalles-ejercicio',\n  templateUrl: './detalles-ejercicio.component.html',\n  styleUrls: ['./detalles-ejercicio.component.scss']\n})\nexport class DetallesEjercicioComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Variable donde guardamos idEjercicio que nos mandamos por url\n  idEjercicio;\n\n  // Objeto ejercicio donde guardamos ejercicio a mostrar que nos devolvera la api\n  ejercicio: EjercicioEjemplo;\n\n  // Comprobamos acceso para si es admin dejar borrar ejercicio\n  acceso = this.localService.getAccesoUsuario();\n\n  // Variable para verificar estar seguro de borrar o no\n  checkActivado = false;\n\n  //#endregion\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor zona que nos manda el componente ejercicios\n    private ejerciciosService: EjerciciosService, // Servicio para gestionar ejercicios con api\n    private localService: LocalService, // Servicio para comprobar con el token el nivel de acceso\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    // tslint:disable-next-line: variable-name\n    private _sanitizer: DomSanitizer, // Utilizaremos este servicio para añadir video si el ejemplo lo tuviera\n    private mensajeConfirmarService: MensajeConfirmarService // Servicio para confirmar eliminar\n\n  ) { }\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idEjercicio = params.idEjercicio;\n      }\n    );\n    this.ejerciciosService.buscarEjercicio(this.idEjercicio).subscribe(data => {\n      // Cogemos el unico valor que nos devuelven en data ya que al buscar 1 ejercicio por id solo hay uno\n      this.ejercicio = data[0];\n\n    });\n  }\n\n  //#region FUNCIONES\n\n  getVideoIframe(url) {\n    let video;\n    let results;\n    if (url === null) {\n      return '';\n    }\n    results = url.match('[\\\\?&]v=([^&#]*)');\n    video = (results === null) ? url : results[1];\n    return this._sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + video);\n  }\n\n  checkEliminar() {\n    if (!this.checkActivado) {\n      this.checkActivado = true;\n    } else {\n      this.checkActivado = false;\n    }\n  }\n\n  // Eliminar ejercicio\n  eliminarEjercicio() {\n    this.ejerciciosService.eliminarEjercicio(this.idEjercicio).subscribe(res => {\n      // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n      this.toastr.success('', 'Ejercicio elimnado correctamente', {\n        timeOut: 3000,\n      });\n      this.router.navigate(['/ejercicios']);\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al borrar ejercicio');\n    });\n  }\n\n   // Confirmar eliminacion con alert\n   public confirmarEliminacion() {\n    this.mensajeConfirmarService.confirm('Por favor confirme..', '¿Estas seguro de eliminar el ejercicio?')\n      .then((confirmed) => { if (confirmed) { this.eliminarEjercicio(); } })\n      .catch(() => console.log('No eliminar'));\n  }\n  //#endregion\n\n}\n","<section class=\"col-sm-12 pt-4\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12 col-md-8 tarjeta row \" *ngIf=\"ejercicio\">\n            <h2 class=\"col-sm-12 text-center\"> {{ejercicio.nombre}}</h2>\n            <div class=\"col-sm-12 col-md-6 informacion\">\n                <h4>Explicación:</h4>\n                <p> {{ejercicio.explicacion}}</p>\n                <h4>Observaciones:</h4>\n                <p>{{ejercicio.consejos}}</p>\n            </div>\n            <div class=\"col-sm-12 col-md-6 imagen\">\n                <img src=\"assets/imagenes/ejercicios/{{ejercicio.imagen}}\" class=\"img-fluid\">\n            </div>\n            <div class=\"col-sm-12 video\" *ngIf=\"ejercicio.video\">\n                <iframe width=\"560\" height=\"315\" [src]=\"getVideoIframe(ejercicio.video)\" frameborder=\"0\"\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    allowfullscreen></iframe>\n            </div>\n\n            <div class=\"col-sm-12 p-2 divEliminar\" *ngIf=\"acceso == '1'\">\n                <button type=\"submit\" class=\"btn botonEliminarEjercicio col-sm-12 col-md-4\" (click)=\"confirmarEliminacion()\">\n                    <i class=\"fas fa-trash-alt pr-1\"></i> Eliminar ejercicio\n                </button>\n                \n            </div>\n        </div>\n\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { EjerciciosService } from 'src/app/servicios/ejerciciosService';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { EjercicioEjemplo } from 'src/app/modelos/ejercicioEjemplo';\n\n@Component({\n  selector: 'app-visualizar-ejercicios',\n  templateUrl: './visualizar-ejercicios.component.html',\n  styleUrls: ['./visualizar-ejercicios.component.scss']\n})\nexport class VisualizarEjerciciosComponent implements OnInit {\n\n  //#region \n\n  // Variable de la zona que corresponden ejercicios, recogida de url\n  zona;\n\n  // Array donde almacenamos ejercicios de la zona correspondiente\n  ejerciciosZona: EjercicioEjemplo[] = [];\n\n  //#endregion\n\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor zona que nos manda el componente ejercicios\n    private ejerciciosService: EjerciciosService, // Servicio para gestionar ejercicios con api\n  ) { }\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.zona = params.zona;\n      }\n    );\n    this.ejerciciosService.listarEjerciciosZona(this.zona).subscribe(data => {\n      this.ejerciciosZona = data;\n    });\n  }\n\n  //#region FUNCIONES\n\n\n\n\n  //#endregion\n\n\n}\n","<section class=\"col-sm-12 pt-4\">\n    <div class=\"row d-flex justify-content-center\" >\n        <div class=\"col-sm-12 col-md-2 tarjeta row \" *ngFor=\"let ejercicio of ejerciciosZona\" [routerLink]=\"['detalles-ejercicio',ejercicio._id]\">\n            <h4 class=\"col-sm-12\"> {{ejercicio.nombre}}</h4>\n            <img src=\"assets/imagenes/ejercicios/{{ejercicio.imagen}}\" class=\"img-fluid p-4\">\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"navbar navbar-fixed-bottom\">\n      <div class=\"row col-12 iconos\">\n            <!-- Facebook -->\n            <a class=\"fb-ic\" href=\"https://www.facebook.com/GimansioImpactoLaguna\">\n              <i class=\"fab fa-facebook m-2 fa-2x\"> </i>\n            </a>\n            <!--Instagram-->\n            <a class=\"ins-ic\" href=\"https://www.instagram.com/impactolaguna\">\n              <i class=\"fab fa-instagram  m-2 fa-2x\"> </i>\n            </a>\n      </div>\n    <div class=\"footer-copyright text-center py-1 col-12\">© 2020 Impacto Laguna</div>\n</footer>\n","import { Component, OnInit, ɵConsole } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { FormBuilder, Validators, FormControl, FormGroup } from '@angular/forms';\nimport { NavbarComponent } from '../navbar/navbar.component';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Formulario\n  public formLogin: FormGroup;\n\n  //#endregion\n\n\n  constructor(\n    private usuariosService: UsuariosService,\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService // Servicio que nos creara notificaciones\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogeado();\n    this.setFormLogin();\n  }\n\n  //#region FUNCIONES\n\n  // FORMULARIOS\n  private setFormLogin() {\n    this.formLogin = this.formBuilder.group({\n      dni: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n    });\n  }\n\n  // Funcion donde mandamos usuario logeado en el formulario al servicio que nos autentifica al usuario y mandamos a menus si es valido\n  accederApp(): void {\n    const dni = this.formLogin.controls.dni.value;\n    const password = this.formLogin.controls.password.value;\n\n    this.usuariosService.loginUsuario(dni, password).subscribe(res => {\n      // Si se el login es correcto\n      NavbarComponent.updateUserStatus.next(true); // here!\n      this.router.navigate(['/menu']);\n    }, err => {\n      if (err && err.status === 404) {\n        this.toastr.error('DNI no existe');\n\n      } else {\n        this.toastr.error('Contraseña incorrecta');\n\n      }\n    });\n  }\n\n  // Comprobamos hay algun usuario ya logeado y si es que si mandamos a menu directamente\n  usuarioLogeado() {\n    if (this.localService.comprobarAutentificacion()) {\n      this.router.navigate(['/menu']);\n    }\n  }\n\n  //#endregion\n\n\n}\n","<section class=\"d-flex justify-content-center align-items-center h-100\">\n\t<div class=\"card\">\n\t\t<div class=\"card-header\">\n\t\t\t<h3>Login</h3>\n\t\t\t<div class=\"d-flex justify-content-end social_icon\">\n\t\t\t\t<span> <a class=\"fb-ic\" href=\"https://www.facebook.com/GimansioImpactoLaguna\"><i\n\t\t\t\t\t\t\tclass=\"fab fa-facebook-square\"></i></a></span>\n\t\t\t\t<span><a class=\"ins-ic\" href=\"https://www.instagram.com/impactolaguna\"><i\n\t\t\t\t\t\t\tclass=\"fab fa-instagram-square\"></i></a></span>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"card-body\">\n\t\t\t<div class=\"col-xs-12 col-sm-12\" [formGroup]=\"formLogin\" class=\"login-container\">\n\t\t\t\t<div class=\"input-group form-group\">\n\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input type=\"text\" class=\"form-control input-sm\" formControlName=\"dni\" placeholder=\"DNI\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"input-group form-group\">\n\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input type=\"password\" class=\"form-control input-sm\" formControlName=\"password\"\n\t\t\t\t\t\tplaceholder=\"Contraseña\">\n\t\t\t\t</div>\n\t\t\t\t<button (click)=\"accederApp()\" type=\"button\" class=\"btn float-right login_btn\">\n\t\t\t\t\tACCEDER\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  //#region VARIABLES\n\n  public nivelAcceso = this.localService.getAccesoUsuario();\n\n  //#endregion\n\n  constructor(\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n\n  ) { }\n\n\n  ngOnInit(): void {\n  }\n}\n","<section>\n    <div class=\"col-sm-7\">\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-md tarjeta row \"  [routerLink]=\"['/tablas']\"  *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '2') || \n            (nivelAcceso == '5')  || (nivelAcceso == '6')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/tablas.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Tablas</h3>\n            </div>\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/ejercicios']\" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '2') || (nivelAcceso == '5')  || (nivelAcceso == '6')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/ejercicios.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Ejercicios</h3>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/dietas']\" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '3') || (nivelAcceso == '5')  || (nivelAcceso == '7')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/dietas.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Dietas</h3>\n            </div>\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/seguimiento']\" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '3') || (nivelAcceso == '5')  || (nivelAcceso == '7')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/seguimiento.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Seguimiento</h3>\n            </div>\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/clases']\" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '4') || (nivelAcceso == '6')  || (nivelAcceso == '7')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/clases.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Clases</h3>\n            </div>\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/usuarios']\"  *ngIf=\"nivelAcceso == ('1')\">\n                <img src=\"/assets/imagenes/usuarios.png\" alt=\"Acceso a usuarios\">\n                <h3 class=\"col-sm-12\">Usuarios</h3>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n\n\n  // #region VARIABLES\n\n  // Utiliaremos para actualizar nombre de usuario al logear\n  public static updateUserStatus: Subject<boolean> = new Subject();\n\n  // Var para comprobar si la nav esta expandida o no\n  navExpandida = false;\n\n  // Datos de usuario logeado\n  usuarioLogeado;\n\n  //#endregion\n\n  constructor(\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private router: Router,\n  ) {\n    // Hacemos que se actualize cuando usuario se logee\n    NavbarComponent.updateUserStatus.subscribe(res => {\n      this.usuarioLogeado = this.localService.getTokenData();\n    });\n  }\n\n  ngOnInit(): void {\n    this.actualizarUsuarioLogeado();\n  }\n\n  //#region FUNCIONES\n\n  // Funcion con la que expandimos y cerramos el navbar para desplegar las opciones en la version movil\n  expandirNav() {\n    if (screen.width < 768) {\n      if (!this.navExpandida) {\n        $('#navbar').height(370);\n\n        $('.navbarDiv').removeClass('collapse');\n        $('.navbarDiv').addClass('show');\n\n        $('.botoncolapsar').attr('aria-expanded', 'true');\n        $('.botoncolapsar').removeClass('collapsed');\n        this.navExpandida = true;\n      } else {\n        $('#navbar').height(90);\n\n        $('.navbarDiv').addClass('collapse');\n        $('.navbarDiv').removeClass('show');\n\n        $('.botoncolapsar').attr('aria-expanded', 'false');\n        $('.botoncolapsar').addClass('collapsed');\n\n        this.navExpandida = false;\n      }\n    }\n\n  }\n\n  // Funcion con la que eliminamos el token generado y cerramos sesion\n  cerrarSesion(): void {\n    this.localService.cerrarSesion();\n  }\n\n  // Comporbamos si el usuario esta logeado para mostrar menus de navbar o no\n  comprobarAutentificacion() {\n    return this.localService.comprobarAutentificacion();\n  }\n\n  // Actualizamos usuario logeado al acceder\n  actualizarUsuarioLogeado() {\n    this.usuarioLogeado = this.localService.getTokenData();\n  }\n\n  //#endregion\n}\n","<nav class=\"navbar navbar-expand-sm navbar-light\" id=\"navbar\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\">\n        <img src=\"/assets/imagenes/logoImpacto.png\">\n    </a>\n    <button class=\"navbar-toggler botoncolapsar collapsed\" type=\"button\" \n        (click)=\"expandirNav()\" *ngIf=\"comprobarAutentificacion()\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse navbarDiv\" id=\"navbarSupportedContent\" *ngIf=\"comprobarAutentificacion()\" >\n        <ul class=\"navbar-nav mr-auto\" (click)=\"expandirNav()\" >\n            <li class=\"nav-item \"  [routerLink]=\"['/tablas']\" [routerLinkActive]=\"'activado'\" \n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '2') || (usuarioLogeado.acceso == '5')  || (usuarioLogeado.acceso == '6')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\" >Tablas </a>\n            </li>\n            <li class=\"nav-item \" [routerLink]=\"['/ejercicios']\" [routerLinkActive]=\"'activado'\"\n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '2') || (usuarioLogeado.acceso == '5')  || (usuarioLogeado.acceso == '6')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\">Ejercicios</a>\n            </li>\n            <li class=\"nav-item \" [routerLink]=\"['/dietas']\" [routerLinkActive]=\"'activado'\"\n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '3') || (usuarioLogeado.acceso == '5')  || (usuarioLogeado.acceso == '7')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\">Dietas</a>\n            </li>\n            <li class=\"nav-item \" [routerLink]=\"['/seguimiento']\" [routerLinkActive]=\"'activado'\"\n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '3') || (usuarioLogeado.acceso == '5')  || (usuarioLogeado.acceso == '7')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\">Seguimiento</a>\n            </li>\n            <li class=\"nav-item \" [routerLink]=\"['/clases']\" [routerLinkActive]=\"'activado'\"\n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '4') || (usuarioLogeado.acceso == '6')  || (usuarioLogeado.acceso == '7')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\">Clases</a>\n            </li>\n            <li class=\"nab-item \" [routerLink]=\"['/usuarios']\" [routerLinkActive]=\"'activado'\" *ngIf=\"usuarioLogeado.acceso == '1'\">\n                <a class=\"nav-link\"  >Usuarios</a>\n            </li>\n            \n        </ul>\n        <ul class=\"navbar-nav \">\n            <li class=\"nav-item dropdown \">\n                <a class=\"nav-link dropleft-toggle \" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                    <i class=\"fas fa-user fa-2x ml-2\"></i>\n                    {{usuarioLogeado.nombre}}\n\n                </a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\"  (click)=\"expandirNav()\">\n                    <a class=\"dropdown-item\" [routerLink]=\"['/usuarios/datosUsuario',usuarioLogeado.id]\">Cambiar contraseña</a>\n                    <a class=\"dropdown-item\" href=\"/\" (click)=\"cerrarSesion()\">Cerrar sesion</a>\n                </div>\n            </li>\n        </ul>\n    </div>\n</nav>","import { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { Component, OnInit, NgZone } from '@angular/core';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { ConfiguracionBuscador } from '../adicionales/buscador/buscador.component';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Seguimiento } from 'src/app/modelos/seguimiento';\nimport { SeguimientosService } from 'src/app/servicios/seguimientosService';\nimport { DatePipe } from '@angular/common';\nimport { MensajeConfirmarService } from 'src/app/servicios/mensajeConfirmarService';\n\n// tslint:disable: member-ordering\n\n@Component({\n  selector: 'app-seguimiento',\n  templateUrl: './seguimiento.component.html',\n  styleUrls: ['./seguimiento.component.scss']\n})\nexport class SeguimientoComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Almacenamos el seguimiento del usuario seleccionado o logeado\n  seguimiento: Seguimiento;\n\n  // Seguimiento nuevo que se usara en el formulario\n  seguimientoNuevo: Seguimiento;\n\n  // Nivel de acceso de usuario logeado\n  acceso = this.localService.getAccesoUsuario();\n\n  // Id de usuario logeado\n  idUsuario = null;\n\n  // Formulario añadir indice y medidas nuevo\n  formNuevoIndice: FormGroup;\n  formNuevaMedidas: FormGroup;\n\n  // Pipe para transformar fecha\n  pipe = new DatePipe('es-ES'); // Use your own locale\n\n  //#endregion\n  constructor(\n    private usuariosService: UsuariosService, // Servicio para interactuar con API\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private seguimientosService: SeguimientosService, // Servicio para interactuar con api seguimiento\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private mensajeConfirmarService: MensajeConfirmarService // Servicio para confirmar eliminar\n  ) { }\n\n  ngOnInit(): void {\n    // Si accceso es 1 seria admin por lo que usaria el buscador para cargar tablas de usuario\n    // si es otro nivel es un usuario, cargamos sus tablas\n    if (this.acceso !== '1') {\n      this.idUsuario = this.localService.getIdUsuario();\n      this.cargarSeguimientoUsuario(this.idUsuario);\n    } else {\n      // Cargamos los nombres de usuarios de BD en el componente de buscador\n      this.usuariosService.usuariosNivelAcceso([3, 5, 7, 8]).subscribe(data => (\n        this.configBuscador.values = data.usuarios\n      ));\n    }\n    this.setForm();\n  }\n\n  // Buscador de usuarios\n  configBuscador: ConfiguracionBuscador = {\n    values: [],\n    selected: null,\n    filter: 'nombre',\n    placeholder: 'Seleccione un Usuario',\n    empty: 'No hay usuarios con ese nombre',\n    fontSize: '14px',\n    fontColor: '#000000',\n    render: (value) => value.nombre\n  };\n\n  // Funcion utilizada pada cuando se selecciona usuario del autocomplete en la version admin\n  selectUsuario($event) {\n    if ($event != null) {\n      this.idUsuario = $event._id;\n      this.cargarSeguimientoUsuario(this.idUsuario);\n    } else {\n      this.seguimiento = null; // Si selecciona fuera vaciamos las tablas por si se cargaron antes\n      this.idUsuario = null; // Tambien vaciamos el usuario ya que no habria ninguno seleccionado\n    }\n  }\n  // Buscamos con api el seguimiento del usuario seleccionado y las cargamos\n  cargarSeguimientoUsuario(idUsuario) {\n    this.seguimientosService.buscarSeguimiento(idUsuario).subscribe(data => {\n      const seguimiento = data;\n      // Formateamos todas las fechas ya que nos las devuelve en formato Date y se verian mal en la tabla\n      for (const indice of seguimiento.indice) {\n        indice.fecha = this.pipe.transform(indice.fecha, 'dd/MM/yy');\n      }\n      for (const medida of seguimiento.medida) {\n        medida.fecha = this.pipe.transform(medida.fecha, 'dd/MM/yy');\n      }\n      this.seguimiento = seguimiento;\n    });\n  }\n  private setForm() {\n    const now = Date.now();\n    const fechaHoy = this.pipe.transform(now, 'dd/MM/yy');\n    this.formNuevoIndice = this.formBuilder.group({\n      fechaIndice: new FormControl(fechaHoy, Validators.required),\n      peso: new FormControl(null, Validators.required),\n      altura: new FormControl(null, Validators.required),\n      imc: new FormControl(null, Validators.required),\n      grasa: new FormControl(null),\n    });\n    this.formNuevaMedidas = this.formBuilder.group({\n      fechaMedidas: new FormControl(fechaHoy, Validators.required),\n      biceps: new FormControl(null, Validators.required),\n      hombros: new FormControl(null, Validators.required),\n      pecho: new FormControl(null, Validators.required),\n      cintura: new FormControl(null, Validators.required),\n      gluteo: new FormControl(null, Validators.required),\n      muslo: new FormControl(null, Validators.required),\n    });\n  }\n\n  // Calculo del IMC con peso y altura\n  calculoIMC() {\n    const peso = this.formNuevoIndice.controls.peso.value;\n    const altura = this.formNuevoIndice.controls.altura.value;\n    if (peso != null && altura != null) {\n      // tslint:disable-next-line: no-bitwise\n      const IMC = (peso / ((altura / 100) ^ 2)).toFixed(2);\n      this.formNuevoIndice.controls.imc.setValue(IMC);\n    }\n  }\n\n  // Guardar indice nuevo para el usuario\n  guardarIndice() {\n    // Cogemos valor de fecha y lo pasamos a un date que nos guarde bien en BBDD\n    const fecha = (this.formNuevoIndice.controls.fechaIndice.value).split('/');\n    const diaIndice: number = fecha[0];\n    const mesIndice: number = fecha[1];\n    const anoIndice: number = 20 + fecha[2];\n    const fechaIndice = new Date(anoIndice, mesIndice - 1, diaIndice);\n\n    // Creamos seguimiento para enviarlo a api y añadir indice\n    this.seguimientoNuevo = ({\n      usuario: this.idUsuario,\n      indice: [{\n        fecha: fechaIndice,\n        peso: this.formNuevoIndice.controls.peso.value,\n        altura: this.formNuevoIndice.controls.altura.value,\n        imc: this.formNuevoIndice.controls.imc.value,\n        grasa: this.formNuevoIndice.controls.grasa.value,\n      }]\n    });\n\n    // Guardamos en BBDD con API\n    this.seguimientosService.guardarIndice(this.seguimientoNuevo).subscribe(res => {\n      // Si se crea correctamente mandamos mensaje y  recargamos componente\n      this.toastr.success('', 'Indice guardado correctamente', {\n        timeOut: 3000,\n      });\n      // Recargamos componente para ver datos añadidos y vaciar campos\n      this.ngOnInit();\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al guardar indice');\n    });\n  }\n\n  // Guardamos nueva medida del usuario en bbdd\n  guardarMedidas() {\n    // Cogemos valor de fecha y lo pasamos a un date que nos guarde bien en BBDD\n    const fecha = (this.formNuevaMedidas.controls.fechaMedidas.value).split('/');\n    const diaMedida: number = fecha[0];\n    const mesMedida: number = fecha[1];\n    const anoMedida: number = 20 + fecha[2];\n    const fechaMedida = new Date(anoMedida, mesMedida - 1, diaMedida);\n\n    // Creamos seguimiento para enviarlo a api y añadir medida\n    this.seguimientoNuevo = ({\n      usuario: this.idUsuario,\n      medida: [{\n        fecha: fechaMedida,\n        biceps: this.formNuevaMedidas.controls.biceps.value,\n        hombros: this.formNuevaMedidas.controls.hombros.value,\n        pecho: this.formNuevaMedidas.controls.pecho.value,\n        cintura: this.formNuevaMedidas.controls.cintura.value,\n        gluteo: this.formNuevaMedidas.controls.gluteo.value,\n        muslo: this.formNuevaMedidas.controls.muslo.value,\n      }]\n    });\n    // Guardamos en BBDD con API\n    this.seguimientosService.guardarMedidas(this.seguimientoNuevo).subscribe(res => {\n      // Si se crea correctamente mandamos mensaje y  recargamos componente\n      this.toastr.success('', 'Medidas guardadas correctamente', {\n        timeOut: 3000,\n      });\n      // Recargamos componente para ver datos añadidos y vaciar campos\n      this.ngOnInit();\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al guardar medidas');\n    });\n  }\n\n\n  eliminarIndice(idIndice) {\n    this.seguimientosService.eliminarIndice(this.seguimiento._id, idIndice).subscribe(res => {\n      // Si se elimina correctamente mandamos mensaje y recargamos componente\n      this.toastr.success('', 'Indice eliminado correctamente', {\n        timeOut: 3000,\n      });\n      // Recargamos componente para ver datos actualizados y vaciar campos\n      this.ngOnInit();\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al borrar indice');\n    });\n  }\n\n  eliminarMedida(idMedida) {\n    this.seguimientosService.eliminarMedidas(this.seguimiento._id, idMedida).subscribe(res => {\n      // Si se elimina correctamente mandamos mensaje y  recargamos componente\n      this.toastr.success('', 'Medida eliminada correctamente', {\n        timeOut: 3000,\n      });\n      // Recargamos componente para ver datos actualizados y vaciar campos\n      this.ngOnInit();\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al borrar medida');\n    });\n  }\n\n  confirmarEliminacionIndice(indiceId){\n    this.mensajeConfirmarService.confirm('Por favor confirme..', '¿Estas seguro de eliminar el indice?')\n    .then((confirmed) => { if (confirmed) { this.eliminarIndice(indiceId); } })\n    .catch(() => console.log('No eliminar'));\n  }\n\n  confirmarEliminacionMedida(medidaId){\n    this.mensajeConfirmarService.confirm('Por favor confirme..', '¿Estas seguro de eliminar la medida?')\n    .then((confirmed) => { if (confirmed) { this.eliminarMedida(medidaId); } })\n    .catch(() => console.log('No eliminar'));\n  }\n  //#endregion\n}\n","<section class=\"col-sm-12 pt-4\">\n    <div class=\"row\" *ngIf=\"acceso == '1'\">\n        <div class=\"col-sm-12 d-flex justify-content-center\">\n            <div class=\"col-md-4 pt-5\">\n                <buscador-component (selected)=\"selectUsuario($event)\" [config]=\"configBuscador\">\n                </buscador-component>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row d-flex justify-content-center \" *ngIf=\"idUsuario != null\">\n        <div class=\"col-md-8 tarjetaSeguimiento\">\n            <h4>Indices</h4>\n            <div class=\"table-responsive\">\n                <table class=\"table table-dark text-center \" [formGroup]=\"formNuevoIndice\" *ngIf=\"seguimiento\">\n                    <tr class=\"d-flex\">\n                        <th class=\"col-3 col-md-2\">Fecha</th>\n                        <td class=\"col-3 col-md-2\">\n                            <input type=\"text\" class=\"form-control\" formControlName=\"fechaIndice\">\n                        </td>\n                        <td class=\"col-2 col-md\" *ngFor=\"let indice of seguimiento.indice\">\n                            {{indice.fecha}}\n                        </td>\n                    </tr>\n                    <tr class=\"d-flex\">\n                        <th class=\"col-3 col-md-2\">Peso</th>\n                        <td class=\"col-3 col-md-2\">\n                            <input type=\"text\" class=\"form-control\" formControlName=\"peso\" (change)=\"calculoIMC()\">\n                        </td>\n                        <td class=\"col-2 col-md\" *ngFor=\"let indice of seguimiento.indice\">\n                            {{indice.peso}} Kg\n                        </td>\n                    </tr>\n                    <tr class=\"d-flex\">\n                        <th class=\"col-3 col-md-2\">Altura(cm)</th>\n                        <td class=\"col-3 col-md-2\">\n                            <input type=\"text\" class=\"form-control\" formControlName=\"altura\" (change)=\"calculoIMC()\">\n                        </td>\n                        <td class=\"col-2 col-md\" *ngFor=\"let indice of seguimiento.indice\">\n                            {{indice.altura}} cm\n                        </td>\n                    </tr>\n                    <tr class=\"d-flex\">\n                        <th class=\"col-3 col-md-2\">IMC</th>\n                        <td class=\"col-3 col-md-2\">\n                            <input type=\"text\" class=\"form-control\" disabled formControlName=\"imc\">\n                        </td>\n                        <td class=\"col-2 col-md\" *ngFor=\"let indice of seguimiento.indice\">\n                            {{indice.imc}} %\n                        </td>\n                    </tr>\n                    <tr class=\"d-flex\">\n                        <th class=\"col-3 col-md-2\">Grasa</th>\n                        <td class=\"col-3 col-md-2\">\n                            <input type=\"text\" class=\"form-control\" formControlName=\"grasa\">\n                        </td>\n                        <td class=\"col-2 col-md\" *ngFor=\"let indice of seguimiento.indice\">\n                            {{indice.grasa}} %\n                        </td>\n                    </tr>\n                    <tr class=\"d-flex\">\n                        <th class=\"col-3 col-md-2\">Guardar</th>\n                        <td class=\"col-3 col-md-2 text-center\">\n                            <button class=\"btn botonAñadirIndice mx-auto\" (click)=\"guardarIndice()\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Guardar indice\"\n                                [disabled]=\"!formNuevoIndice.valid\">\n                                <i class=\"fas fa-save\"></i> </button>\n                        </td>\n                        <td class=\"col-2 col-md text-center\" *ngFor=\"let indice of seguimiento.indice\">\n                            <button class=\"btn botonAñadirIndice mx-auto\"  (click)=\"confirmarEliminacionIndice(indice._id)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Eliminar indice\">\n                                <i class=\"fas fa-trash-alt\"></i>\n                            </button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class=\"col-md-8 tarjetaSeguimiento\">\n            <h4>Medidas</h4>\n            <div class=\"table-responsive\">\n                <table class=\"table table-dark text-center \" [formGroup]=\"formNuevaMedidas\" *ngIf=\"seguimiento\">\n                    <tr class=\"d-flex\">\n                        <th class=\"col-3 col-md-2\">Fecha</th>\n                        <td class=\"col-3 col-md-2\">\n                            <input type=\"text\" class=\"form-control\" formControlName=\"fechaMedidas\">\n                        </td>\n                        <td class=\"col-2 col-md\" *ngFor=\"let medida of seguimiento.medida\">\n                            {{medida.fecha }}\n                        </td>\n                    </tr>\n                    <tr class=\"d-flex\">\n                        <th class=\" col-3 col-md-2\">Biceps</th>\n                        <td class=\" col-3 col-md-2\">\n                            <input type=\"text\" class=\"form-control\" formControlName=\"biceps\">\n                        </td>\n                        <td class=\" col-2 col-md\" *ngFor=\"let medida of seguimiento.medida\">\n                            {{medida.biceps}} cm\n                        </td>\n                    </tr>\n                    <tr class=\"d-flex\">\n                        <th class=\" col-3 col-md-2\">Hombros</th>\n                        <td class=\" col-3 col-md-2\">\n                            <input type=\"text\" class=\"form-control\" formControlName=\"hombros\">\n                        </td>\n                        <td class=\" col-2 col-md\" *ngFor=\"let medida of seguimiento.medida\">\n                            {{medida.hombros}} cm\n                        </td>\n                    </tr>\n                    <tr class=\"d-flex\">\n                        <th class=\" col-3 col-md-2\">Pecho</th>\n\n                        <td class=\" col-3 col-md-2\">\n                            <input type=\"text\" class=\"form-control\" formControlName=\"pecho\">\n                        </td>\n                        <td class=\" col-2 col-md\" *ngFor=\"let medida of seguimiento.medida\">\n                            {{medida.pecho}} cm\n                        </td>\n                    </tr>\n                    <tr class=\"d-flex\">\n                        <th class=\" col-3 col-md-2\">Cintura</th>\n                        <td class=\" col-3 col-md-2\">\n                            <input type=\"text\" class=\"form-control\" formControlName=\"cintura\">\n                        </td>\n                        <td class=\" col-2 col-md\" *ngFor=\"let medida of seguimiento.medida\">\n                            {{medida.cintura}} cm\n                        </td>\n                    </tr>\n                    <tr class=\"d-flex\">\n                        <th class=\" col-3 col-md-2\">Gluteo</th>\n                        <td class=\" col-3 col-md-2\">\n                            <input type=\"text\" class=\"form-control\" formControlName=\"gluteo\">\n                        </td>\n                        <td class=\" col-2 col-md\" *ngFor=\"let medida of seguimiento.medida\">\n                            {{medida.gluteo}} cm\n                        </td>\n                    </tr>\n                    <tr class=\"d-flex\">\n                        <th class=\" col-3 col-md-2\">Muslo</th>\n                        <td class=\" col-3 col-md-2\">\n                            <input type=\"text\" class=\"form-control\" formControlName=\"muslo\">\n                        </td>\n                        <td class=\" col-2 col-md\" *ngFor=\"let medida of seguimiento.medida\">\n                            {{medida.muslo}} cm\n                        </td>\n                    </tr>\n                    <tr class=\"d-flex\">\n                        <th class=\" col-3 col-md-2\">Guardar</th>\n                        <td class=\" col-3 col-md-2 text-center\">\n                            <button class=\"btn botonAñadirIndice mx-auto\" (click)=\"guardarMedidas()\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Guardar seguimiento\"\n                                [disabled]=\"!formNuevaMedidas.valid\">\n                                <i class=\"fas fa-save\"></i>\n                            </button>\n                        </td>\n                        <td class=\" col-2 col-md text-center\" *ngFor=\"let medida of seguimiento.medida\">\n                            <button class=\"btn botonAñadirIndice mx-auto\" (click)=\"confirmarEliminacionMedida(medida._id)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Eliminar seguimiento\">\n                                <i class=\"fas fa-trash-alt\"></i>\n                            </button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</section>","\nimport { Component, OnInit } from '@angular/core';\nimport { Tabla, Ejercicio, Dia } from 'src/app/modelos/tabla';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { TablasService } from 'src/app/servicios/tablasService';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { LocalService } from 'src/app/servicios/localService';\n\n\n@Component({\n  selector: 'app-crear-tablas',\n  templateUrl: './crear-tablas.component.html',\n  styleUrls: ['./crear-tablas.component.scss']\n})\n\nexport class CrearTablasComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Formulario\n  formNuevaTabla: FormGroup;\n\n  // idUsuario que nos mandamos desde tablas para crear la tabla al usuario\n  idUsuario;\n\n  // Arrays donde guardaremos los ejercicios de cada dia\n  ejerciciosDia1: Array<Ejercicio> = [];\n  ejerciciosDia2: Array<Ejercicio> = [];\n  ejerciciosDia3: Array<Ejercicio> = [];\n  ejerciciosDia4: Array<Ejercicio> = [];\n  ejerciciosDia5: Array<Ejercicio> = [];\n\n  // Array donde guardaremos los dias de la tabla con sus ejercicios\n  dias: Array<Dia> = [];\n\n  // Tabla que mandaremos con la api a la bbdd\n  tabla: Tabla;\n\n  //#endregion\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor idUsuario que nos manda el componente tablas\n    private tablasService: TablasService, // Servicio para interactuar con API con TABLAS\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private localService: LocalService // Servicio para comprobar usuario logeado\n  ) {\n    this.setformNuevaTabla();\n  }\n\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idUsuario = params.idUsuario;\n      }\n    );\n\n    // Comprobamos que el usuario logeado es admin, y si no lo es e intenta entrar en el perfil de otro usuario le rederigimos a menu\n    const usuarioLogeado = this.localService.getTokenData();\n    if (usuarioLogeado.acceso !== '1') {\n      if (usuarioLogeado.id !== this.idUsuario) {\n        this.toastr.error('Falta de permisos para esta accion');\n        this.router.navigate(['/menu']);\n      }\n    }\n\n  }\n\n  //#region FUNCIONES\n\n  private setformNuevaTabla() {\n    this.formNuevaTabla = this.formBuilder.group({\n      nombreTabla: new FormControl(null, Validators.required),\n      ejercicioDia1: new FormControl(null, Validators.required),\n      repeticionesDia1: new FormControl(null, Validators.required),\n      ejercicioDia2: new FormControl(null, Validators.required),\n      repeticionesDia2: new FormControl(null, Validators.required),\n      ejercicioDia3: new FormControl(null, Validators.required),\n      repeticionesDia3: new FormControl(null, Validators.required),\n      ejercicioDia4: new FormControl(null, Validators.required),\n      repeticionesDia4: new FormControl(null, Validators.required),\n      ejercicioDia5: new FormControl(null, Validators.required),\n      repeticionesDia5: new FormControl(null, Validators.required),\n    });\n  }\n\n  // Funcion que usamos para añadir los ejercicios a cada dia en su correspondiente array\n  anadirEjercicio(dia, inputEjer, inputRep) {\n    const ejercicio = ({\n      nombre: this.formNuevaTabla.get(inputEjer).value,\n      repeticiones: this.formNuevaTabla.get(inputRep).value,\n      pesoMax: ''\n    });\n    dia.push(ejercicio);\n    // Borramos inputs para añadir otro ejercicio\n    this.formNuevaTabla.get(inputEjer).setValue(null);\n    this.formNuevaTabla.get(inputRep).setValue(null);\n  }\n\n  // Funcion para borrar ejercicio del array si se quiere al dar al boton\n  borrarEjercicio(dia, i) {\n    dia.splice(i, 1);\n  }\n\n  // Funcion guardamos tabla y mandamos con servicio a la api para guardar en BBDD\n  guardarTabla() {\n    // Comporbamos si el dia tiene ejercicios y si es asi lo añadimos a los dias\n    if (this.ejerciciosDia1.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia1\n      }));\n    }\n    if (this.ejerciciosDia2.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia2\n      }));\n    }\n    if (this.ejerciciosDia3.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia3\n      }));\n    }\n    if (this.ejerciciosDia4.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia4\n      }));\n    }\n    if (this.ejerciciosDia5.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia5\n      }));\n    }\n    // Si hay dias rellenados creamos la tabla y la mandamos a la api\n    if (this.dias.length > 0) {\n      this.tabla = ({\n        usuario: this.idUsuario,\n        nombre: this.formNuevaTabla.controls.nombreTabla.value,\n        dia: this.dias\n      });\n\n      // Mandamos tabla con api a la bbdd\n      this.tablasService.crearTabla(this.tabla).subscribe(res => {\n        // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n        this.toastr.success('', 'Tabla creada correctamente', {\n          timeOut: 3000,\n        });\n        this.router.navigate(['/tablas']);\n      }, err => {\n        // Si da error lo mostramos\n        this.toastr.error('Error al crear tabla');\n      });\n    } else {\n      // Si no hay ejercicio en tabla mostramos notificacion\n      this.toastr.warning('', 'No hay ningun ejercicio en la tabla', {\n        timeOut: 3000,\n      });\n    }\n  }\n\n  //#endregion\n\n}\n","<section class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12\">\n            <h2 class=\"\"> Creacion de nueva tabla</h2>\n        </div>\n\n\n        <div class=\"col-sm-12 \" [formGroup]=\"formNuevaTabla\">\n            <label class=\"col-sm-12 control-label text-left labelNombreTabla\">\n                Nombre de la tabla\n                <input type=\"text\" class=\"form-control\" formControlName=\"nombreTabla\">\n            </label>\n            <div class=\"dia \">\n                <h4 class=\"col-sm-12 pl-0\">Dia 1</h4>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0  pl-0  \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia1\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia1\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia1,'ejercicioDia1','repeticionesDia1')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia1.valid || !formNuevaTabla.controls.repeticionesDia1.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia1; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\">\n                                    <button class=\"btn botonBorrarEjer mx-auto\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia1,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i>\n                                    </button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n\n            <div class=\"dia\">\n                <h4 class=\"col-sm-12 pl-0\">Dia 2</h4>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0 \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia2\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia2\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia2,'ejercicioDia2','repeticionesDia2')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia2.valid || !formNuevaTabla.controls.repeticionesDia2.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia2; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\"><button class=\"btn botonBorrarEjer\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia2,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i></button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n            <div class=\"dia\">\n                <h4 class=\"col-sm-12 pl-0\">Dia 3</h4>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0 \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia3\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia3\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia3,'ejercicioDia3','repeticionesDia3')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia3.valid || !formNuevaTabla.controls.repeticionesDia3.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia3; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\"><button class=\"btn botonBorrarEjer\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia3,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i></button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n            <div class=\"dia\">\n                <h4 class=\"col-sm-12 pl-0\">Dia 4</h4>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0 \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia4\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia4\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia4,'ejercicioDia4','repeticionesDia4')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia4.valid || !formNuevaTabla.controls.repeticionesDia4.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia4; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\"><button class=\"btn botonBorrarEjer\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia4,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i></button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n            <div class=\"dia\">\n                <h4 class=\"col-sm-12 pl-0\">Dia 5</h4>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0  pl-0 \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia5\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia5\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia5,'ejercicioDia5','repeticionesDia5')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia5.valid || !formNuevaTabla.controls.repeticionesDia5.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia5; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\"><button class=\"btn botonBorrarEjer\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia5,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i></button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-center p-3\">\n                <button type=\"submit\" class=\"btn botonGuardarTabla col-sm-12 pr-1\" (click)=\"guardarTabla()\" [disabled]=\"!formNuevaTabla.controls.nombreTabla.valid\">\n                    <i class=\"fas fa-save pr-1\"></i>Guardar tabla\n                </button>\n            </div>\n\n        </div>\n\n    </div>\n\n\n</section>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { ConfiguracionBuscador } from '../adicionales/buscador/buscador.component';\nimport { Tabla } from 'src/app/modelos/tabla';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { TablasService } from 'src/app/servicios/tablasService';\n\n// tslint:disable: member-ordering\n@Component({\n  selector: 'app-tablas',\n  templateUrl: './tablas.component.html',\n  styleUrls: ['./tablas.component.scss']\n})\nexport class TablasComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Array donde almacenamos las tablas que nos devuelve la api para el usuario seleccionado o logeado\n  tablasUsuario: Tabla[] = [];\n\n  // Nivel de acceso de usuario logeado\n  acceso = this.localService.getAccesoUsuario();\n\n  // Id de usuario logeado\n  idUsuario = null;\n\n  //#endregion\n\n  constructor(\n    private usuariosService: UsuariosService, // Servicio para interactuar con API\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private tablasService: TablasService // Servicio para interactuar con API con TABLAS\n  ) {\n  }\n\n  ngOnInit(): void {\n    // Si accceso es 1 seria admin por lo que usaria el buscador para cargar tablas de usuario\n    // si es otro nivel es un usuario, cargamos sus tablas\n    if (this.acceso !== '1') {\n      this.idUsuario = this.localService.getIdUsuario();\n      this.cargarTablasUsuario(this.idUsuario);\n    } else {\n      // Cargamos los nombres de usuarios de BD en el componente de buscador\n      this.usuariosService.usuariosNivelAcceso([2, 5, 6, 8]).subscribe(data => (\n        this.configBuscador.values = data.usuarios\n      ));\n    }\n  }\n\n  //#region COMPONENTES\n\n  // Buscador de usuarios\n  configBuscador: ConfiguracionBuscador = {\n    values: [],\n    selected: null,\n    filter: 'nombre',\n    placeholder: 'Seleccione un Usuario',\n    empty: 'No hay usuarios con ese nombre',\n    fontSize: '14px',\n    fontColor: '#000000',\n    render: (value) => value.nombre\n  };\n\n  // Funcion utilizada pada cuando se selecciona usuario del autocomplete en la version admin\n  selectUsuario($event) {\n    if ($event != null) {\n      this.idUsuario = $event._id;\n      this.cargarTablasUsuario(this.idUsuario);\n    } else {\n      this.tablasUsuario = []; // Si selecciona fuera vaciamos las tablas por si se cargaron antes\n      this.idUsuario = null; // Tambien vaciamos el usuario ya que no habria ninguno seleccionado\n    }\n  }\n\n  // Buscamos con api las tablas del usuario seleccionado y las cargamos\n  cargarTablasUsuario(idUsuario) {\n    this.tablasService.listarTablasUsuario(idUsuario).subscribe(data => {\n      this.tablasUsuario = data.tablas;\n    });\n  }\n  //#endregion\n}\n","<section class=\"col-sm-12 pt-4\">\n        <div class=\"row\" *ngIf=\"acceso == '1'\">  \n            <div class=\"col-sm-12 d-flex justify-content-center\">\n                <div class=\"col-md-4 pt-5\">\n                    <buscador-component (selected)=\"selectUsuario($event)\" [config]=\"configBuscador\">\n                    </buscador-component>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row d-flex justify-content-center \">\n            <div class=\"col-sm-12 col-md-2 tarjeta row \"  [routerLink]=\"['/tablas/crear',idUsuario]\" *ngIf=\"(acceso !='1') || (acceso == '1' && idUsuario != null)\">\n                <i class=\"fas fa-plus-square fa-4x\"></i>\n                <h4 class=\"col-sm-12\">Añadir tabla</h4>\n            </div>\n            <div class=\"col-sm-12 col-md-2 tarjeta row \" *ngFor=\"let tabla of tablasUsuario\"   [routerLink]=\"['/tablas/visualizar',tabla._id]\">\n                <i class=\"fas fa-calendar-alt fa-4x\"></i>\n                \n                <h4 class=\"col-sm-12\">{{tabla.nombre}}</h4>\n            </div>\n        </div>\n</section>","import { LocalService } from '../../../servicios/localService';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Tabla, Tablas, CambiosPeso } from 'src/app/modelos/tabla';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { TablasService } from 'src/app/servicios/tablasService';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MensajeConfirmarService } from 'src/app/servicios/mensajeConfirmarService';\n\n@Component({\n  selector: 'app-visualizar-tablas',\n  templateUrl: './visualizar-tablas.component.html',\n  styleUrls: ['./visualizar-tablas.component.scss']\n})\nexport class VisualizarTablasComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // id de la tabla seleccionada que nos mandamos desde el menu de tablas\n  idTabla;\n\n  // tabla correspondiente al idTabla que nos devuelve la API\n  tabla: Tabla;\n\n  // Formulario para guardar peso maximo de ejercicio\n  formPesoMax: FormGroup;\n\n  // Array donde guardaremos los pesos maximos guardados para despues mandarlos con api a BBDD\n  cambiosPesoMax: Array<CambiosPeso> = [];\n\n  // Variable para verificar estar seguro de borrar o no\n  checkActivado = false;\n\n  //#endregion\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor idTabla que nos manda el componente tablas\n    private tablasService: TablasService, // Servicio para interactuar con API con TABLAS\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private localService: LocalService, // Servicio para comprobar usuario logeado\n    private mensajeConfirmarService: MensajeConfirmarService // Servicio para confirmar eliminar\n  ) {\n    this.setformPesoMax();\n  }\n\n  ngOnInit(): void {\n\n    // Comprobamos que el usuario logeado es admin, y si no lo es e intenta entrar en el perfil de otro usuario le rederigimos a menu\n    const usuarioLogeado = this.localService.getTokenData();\n\n\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idTabla = params.idTabla;\n      }\n    );\n\n    this.tablasService.buscarTabla(this.idTabla).subscribe(data => {\n      // La api nos devuelve array de tablas por lo que cogemos el primero ya que solo hay 1\n      this.tabla = ({\n        _id: data.tabla[0]._id,\n        usuario: data.tabla[0].usuario,\n        nombre: data.tabla[0].nombre,\n        dia: data.tabla[0].dia,\n      });\n      if (usuarioLogeado.acceso !== '1') {\n        if (this.tabla) {\n          if (usuarioLogeado.id !== this.tabla.usuario) {\n            this.toastr.error('Falta de permisos para esta accion');\n            this.router.navigate(['/menu']);\n          }\n        }\n      }\n\n    });\n\n  }\n\n\n  //#region FUNCIONES\n\n  private setformPesoMax() {\n    this.formPesoMax = this.formBuilder.group({\n      pesoMax: new FormControl(null)\n    });\n  }\n\n  // Funcioon que guardara el nuevo peso al notar un cambio en el input correspondiente\n  actualizarPeso(idEjercicio, idDia) {\n    const pesoMaxActualizado = {\n      idTabla: this.idTabla,\n      idDia,\n      idEjercicio,\n      pesoMax: this.formPesoMax.controls.pesoMax.value\n    };\n    // Por cada peso guardamos un objeto en el array de cambios que luego mandaremos a la api\n    this.cambiosPesoMax.push(pesoMaxActualizado);\n  }\n\n  // Funcion con la que mandamos un array con todos los pesos cambiados a la bbdd con la api\n  actualizarPesosTabla() {\n    this.tablasService.actualizarPesoMax(this.cambiosPesoMax).subscribe(res => {\n      // Si se actualizan sin problema mandamos mensaje de todo OK\n      this.toastr.success('', 'Pesos actualizados', {\n        timeOut: 3000,\n      });\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al actualziar pesos');\n    });\n\n    this.toastr.success('', 'Pesos actualizados', {\n      timeOut: 3000,\n    });\n    this.cambiosPesoMax = [];\n  }\n\n  checkEliminar() {\n    if (!this.checkActivado) {\n      this.checkActivado = true;\n    } else {\n      this.checkActivado = false;\n    }\n  }\n  eliminarTabla() {\n    this.tablasService.eliminarTabla(this.idTabla).subscribe(res => {\n      // Si se elimina corectamente\n      this.toastr.success('', 'Tabla eliminada correctamente', {\n        timeOut: 3000,\n      });\n      this.router.navigate(['/tablas']);\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al eliminar la tabla');\n    });\n  }\n  // Confirmar eliminacion con alert\n  public confirmarEliminacion() {\n    this.mensajeConfirmarService.confirm('Por favor confirme..', '¿Estas seguro de eliminar la tabla?')\n      .then((confirmed) => { if (confirmed) { this.eliminarTabla(); } })\n      .catch(() => console.log('No eliminar'));\n  }\n  //#endregion\n}\n\n","<section class=\"col-sm-12 \">\n    <div class=\"row d-flex justify-content-center\" *ngIf=\"tabla\">\n        <h2 class=\"col-sm-12 text-center\"> {{tabla.nombre}}</h2>\n        <div class=\"col-md-8 dia\" *ngFor=\"let dia of tabla.dia;index as i\">\n            <h4>Dia {{i+1}}</h4>\n            <div class=\"table-responsive\">\n                <table class=\"table table-dark  \">\n                    <thead class=\"thead-dark\">\n                        <tr class=\"d-flex\">\n                            <th class=\"col-4 col-md-7\">Ejercicio</th>\n                            <th class=\"col-5 col-md-3\">Repeticiones</th>\n                            <th class=\"col-3 col-md-2\">Peso Max</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let ejercicio of dia.ejercicio\" class=\"d-flex\">\n                            <td class=\"col-4 col-md-7\">{{ejercicio.nombre}}</td>\n                            <td class=\"col-5 col-md-3\">{{ejercicio.repeticiones}}</td>\n                            <td class=\"col-3 col-md-2\">\n                                <div [formGroup]=\"formPesoMax\">\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"pesoMax\"\n                                        (change)=\"actualizarPeso(ejercicio._id,dia._id)\" placeholder=\"{{ejercicio.pesoMax}}\">\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"col-sm-12 d-flex justify-content-center\">\n                <button type=\"submit\" class=\"btn botonGuardarPesos col-md-8 mx-auto\" (click)=\"actualizarPesosTabla()\"\n                    [disabled]=\"cambiosPesoMax.length==0\">\n                    <i class=\"fas fa-plus-circle\"></i> Guardar pesos nuevos\n                </button>\n            </div>\n\n        </div>\n        <div class=\"col-sm-12 p-2 divEliminar\" >\n            <button type=\"submit\" class=\"btn botonEliminarTabla col-sm-12 col-md-2 \" (click)=\"confirmarEliminacion()\">\n                <i class=\"fas fa-trash-alt pr-1\"></i> Eliminar tabla\n            </button>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { FormBuilder, Form, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Usuario } from 'src/app/modelos/usuario';\nimport { SeguimientosService } from 'src/app/servicios/seguimientosService';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-crear-usuario',\n  templateUrl: './crear-usuario.component.html',\n  styleUrls: ['./crear-usuario.component.scss']\n})\nexport class CrearUsuarioComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Formulario del componente\n  formNuevoUsuario: FormGroup;\n\n  // Variable donde guardaremos al nuevo usuario\n  nuevoUsuario: Usuario;\n\n  //#endregion\n  constructor(\n    private localService: LocalService, // Servicio para comprobar acceso\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private usuariosService: UsuariosService, // Servicio para crear el usuario\n    private seguimientosService: SeguimientosService // Servicio para interactuar con api seguimiento\n  ) { }\n\n  ngOnInit(): void {\n    // En este componente solo puede entrar un administrador, comprobamos y si no lo es lo echamos\n    const acceso = this.localService.getAccesoUsuario();\n    if (acceso !== '1') {\n      this.toastr.error('Falta de permisos para esta accion');\n      this.router.navigate(['/menu']);\n    }\n    this.setformNuevoUsuario();\n  }\n\n\n  //#region FUNCIONES\n  private setformNuevoUsuario() {\n    this.formNuevoUsuario = this.formBuilder.group({\n      dniUsuario: new FormControl(null, Validators.required),\n      nombreUsuario: new FormControl(null, Validators.required),\n      accesoUsuario: new FormControl(null, Validators.required),\n      domicilioUsuario: new FormControl(null),\n      telefonoUsuario: new FormControl(null),\n    });\n  }\n\n  crearUsuario() {\n    this.nuevoUsuario = ({\n      dni: this.formNuevoUsuario.controls.dniUsuario.value,\n      nombre: this.formNuevoUsuario.controls.nombreUsuario.value,\n      password: '123456',\n      acceso: this.formNuevoUsuario.controls.accesoUsuario.value,\n      domicilio: this.formNuevoUsuario.controls.domicilioUsuario.value,\n      telefono: this.formNuevoUsuario.controls.telefonoUsuario.value,\n    });\n\n    // Mandamos tabla con api a la bbdd\n    this.usuariosService.registrarUsuario(this.nuevoUsuario).subscribe(res => {\n      // Creamos seguimiento por si tiene o algun dia llegara a tener seguimientos\n      this.seguimientosService.crearSeguimiento(res._id).subscribe();\n      // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n      this.toastr.success('', 'Usuario creado correctamente correctamente', {\n        timeOut: 3000,\n      });\n      this.router.navigate(['/usuarios']);\n    }, err => {\n      // Si da error lo mostramos\n      if (err && err.status === 409) {\n        this.toastr.error('DNI ya registrado');\n\n      } else {\n        this.toastr.error('Error en el servidor');\n      }\n    });\n  }\n\n  nivelAcceso() {\n    const acceso = this.formNuevoUsuario.controls.accesoUsuario.value;\n    if (acceso === '1') {\n      return 'Administrador';\n    }\n    if (acceso === '2') {\n      return 'Ejercicio';\n    }\n    if (acceso === '3') {\n      return 'Nutricion';\n    }\n    if (acceso === '4') {\n      return 'Clases';\n    }\n    if (acceso === '5') {\n      return 'Ejercicio + Nutricion';\n    }\n    if (acceso === '6') {\n      return 'Ejercicio + Clases';\n    }\n    if (acceso === '7') {\n      return 'Nutricion + Clases';\n    }\n    if (acceso === '8') {\n      return 'Ejercicio + Nutricion + Clases';\n    }\n  }\n  //#endregion\n}\n","<section class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12 text-center\">\n            <h2 class=\"\"> Creacion de nuevo usuario </h2>\n        </div>\n\n        <div class=\"col-sm-6 \" [formGroup]=\"formNuevoUsuario\">\n            <label class=\"col-sm-12 col-md-12 control-label text-left labelNombreTabla\">\n                DNI\n                <input type=\"text\" class=\"form-control\" formControlName=\"dniUsuario\">\n            </label>\n            <label class=\"control-label text-left col-sm-12 col-md-12 \"> Nombre\n                <input type=\"text\" class=\"form-control\" formControlName=\"nombreUsuario\">\n            </label>\n            <label class=\"control-label text-left col-sm-12 col-md-12\"> Domicilio\n                <input type=\"text\" class=\"form-control\" formControlName=\"domicilioUsuario\">\n            </label>\n            <label class=\"control-label text-left col-sm-12 col-md-12\"> Telefono\n                <input type=\"text\" class=\"form-control\" formControlName=\"telefonoUsuario\">\n            </label>\n            <label class=\"control-label text-left col-sm-12 col-md-12\">Nivel de acceso del usuario\n                <select class=\"form-control\" formControlName=\"accesoUsuario\">\n                    <option value=\"2\" selected >Ejercicio</option>\n                    <option value=\"3\">Nutricion</option>\n                    <option value=\"4\">Clases</option>\n                    <option value=\"5\">Ejercicio + Nutricion</option>\n                    <option value=\"6\">Ejercicio + Clases</option>\n                    <option value=\"7\">Nutricion + Clases</option>\n                    <option value=\"8\">Ejercicio + Nutricion + Clases</option>\n                    <option value=\"1\">Administrador</option>\n                </select>\n            </label>\n\n        </div>\n\n        <div class=\"row d-flex justify-content-center col-sm-12 col-md-6\">\n            <div class=\"col-sm-10 tarjeta row \">\n                <i class=\"fas fa-user fa-4x col-sm-2 text-center\"></i>\n                <div class=\"col-sm-10\">\n                    <h5 class=\"col-sm-12\">DNI: {{formNuevoUsuario.controls.dniUsuario.value}}</h5>\n                    <h5 class=\"col-sm-12\">Nombre: {{formNuevoUsuario.controls.nombreUsuario.value}}</h5>\n                    <h5 class=\"col-sm-12\">Domicilio: {{formNuevoUsuario.controls.domicilioUsuario.value}}</h5>\n                    <h5 class=\"col-sm-12\">Telefono: {{formNuevoUsuario.controls.telefonoUsuario.value}}</h5>\n                    <h5 class=\"col-sm-12\">Acceso: {{nivelAcceso()}}</h5>\n                </div>\n            </div>\n            <button type=\"submit\" class=\"btn botonCrearUsuario col-sm-6 mx-auto\" (click)=\"crearUsuario()\"\n                [disabled]=\"(!formNuevoUsuario.valid)\">\n                <i class=\"fas fa-save\"></i> Guardar usuario\n            </button>\n\n        </div>\n        <div class=\"col-sm-12 col-md-9 pt-4\">\n            <div class=\"alert alert-dark\" role=\"alert\">\n                El nuevo usuario tendra de contraseña <strong>'123456'</strong>, tendra que cambiarla cuando entre en la aplicacion\n              </div>\n        </div>\n\n\n    </div>\n</section>","import { FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { Usuario } from 'src/app/modelos/usuario';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { MensajeConfirmarService } from 'src/app/servicios/mensajeConfirmarService';\n\n@Component({\n  selector: 'app-datos-usuario',\n  templateUrl: './datos-usuario.component.html',\n  styleUrls: ['./datos-usuario.component.scss']\n})\nexport class DatosUsuarioComponent implements OnInit {\n\n\n  //#region VARIABLES\n\n  // idUsuario del que mostramos datos\n  idUsuario;\n\n  // Variable donde guardaremos el usuario\n  usuario: Usuario;\n\n  // Formulario del componente actualizar datos\n  formActualizarDatosUsuario: FormGroup;\n\n  // Formulario del componente cambiar contraseña\n  formCambiarContrasena: FormGroup;\n\n  // Actualizando datos\n  actualizandoDatos = false;\n\n  // Acceso usuario logeado\n  usuarioLogeado = this.localService.getTokenData();\n\n  // Variable true si hay cambios en formulario datos\n  cambiosFormDatosComp = false;\n\n  // Variable para verificar estar seguro de borrar o no\n  checkActivado = false;\n\n  //#endregion\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor idUsuario que nos manda el componente tablas\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private usuariosService: UsuariosService, // Servicio para crear el usuario\n    private localService: LocalService, // Servicio para crear el usuario\n    private mensajeConfirmarService: MensajeConfirmarService // Servicio para confirmar eliminar\n  ) { }\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idUsuario = params.idUsuario;\n      }\n    );\n\n    // Comprobamos que el usuario logeado es admin, y si no lo es e intenta entrar en el perfil de otro usuario le rederigimos a menu\n    const usuarioLogeado = this.localService.getTokenData();\n    if (usuarioLogeado.acceso !== '1') {\n      if (usuarioLogeado.id !== this.idUsuario) {\n        this.toastr.error('Falta de permisos para esta accion');\n        this.router.navigate(['/menu']);\n      }\n    }\n\n    this.usuariosService.buscarUsuario(this.idUsuario).subscribe(res => {\n      this.usuario = res.usuario;\n      this.datosDeUsuarioAlFormulario();\n    });\n    this.setformActualizarDatosUsuario();\n    this.setformCambiarContrasena();\n  }\n\n  //#region FUNCIONES\n  setformActualizarDatosUsuario() {\n    this.formActualizarDatosUsuario = this.formBuilder.group({\n      dniUsuario: new FormControl(null, Validators.required),\n      nombreUsuario: new FormControl(null, Validators.required),\n      accesoUsuario: new FormControl(null, Validators.required),\n      domicilioUsuario: new FormControl(null),\n      telefonoUsuario: new FormControl(null)\n    });\n  }\n  datosDeUsuarioAlFormulario() {\n    this.formActualizarDatosUsuario.controls.dniUsuario.setValue(this.usuario.dni);\n    this.formActualizarDatosUsuario.controls.nombreUsuario.setValue(this.usuario.nombre);\n    this.formActualizarDatosUsuario.controls.accesoUsuario.setValue(this.usuario.acceso);\n    this.formActualizarDatosUsuario.controls.domicilioUsuario.setValue(this.usuario.domicilio);\n    this.formActualizarDatosUsuario.controls.telefonoUsuario.setValue(this.usuario.telefono);\n\n  }\n\n  // Funcion al detectar cambios en el formulario\n  cambiosFormDatos() {\n    this.cambiosFormDatosComp = true;\n\n  }\n  setformCambiarContrasena() {\n    this.formCambiarContrasena = this.formBuilder.group({\n      passwordVieja: new FormControl(null, Validators.required),\n      passwordNueva: new FormControl(null, Validators.required),\n      passwordNuevaConfirmacion: new FormControl(null, Validators.required),\n    });\n  }\n  modificarDatos() {\n    const usuarioActualizado = ({\n      id: this.usuario._id,\n      dni: this.formActualizarDatosUsuario.controls.dniUsuario.value,\n      nombre: this.formActualizarDatosUsuario.controls.nombreUsuario.value,\n      acceso: this.formActualizarDatosUsuario.controls.accesoUsuario.value,\n      domicilio: this.formActualizarDatosUsuario.controls.domicilioUsuario.value,\n      telefono: this.formActualizarDatosUsuario.controls.telefonoUsuario.value,\n    });\n\n    // Mandamos usuario a la api para modificar sus datos\n    this.usuariosService.modificarDatosUsuario(usuarioActualizado).subscribe(res => {\n      // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n      this.toastr.success('', 'Usuario modificado correctamente', {\n        timeOut: 3000,\n      });\n      this.cambiosFormDatosComp = false;\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al modificar datos');\n    });\n  }\n\n  nivelAcceso() {\n    const acceso = this.usuario.acceso;\n    if (acceso === '1') {\n      return 'Administrador';\n    }\n    if (acceso === '2') {\n      return 'Ejercicio';\n    }\n    if (acceso === '3') {\n      return 'Nutricion';\n    }\n    if (acceso === '4') {\n      return 'Clases';\n    }\n    if (acceso === '5') {\n      return 'Ejercicio + Nutricion';\n    }\n    if (acceso === '6') {\n      return 'Ejercicio + Clases';\n    }\n    if (acceso === '7') {\n      return 'Nutricion + Clases';\n    }\n    if (acceso === '8') {\n      return 'Ejercicio + Nutricion + Clases';\n    }\n  }\n  cambiarContrasena() {\n    const contraVieja = this.formCambiarContrasena.controls.passwordVieja.value;\n    const contraNueva = this.formCambiarContrasena.controls.passwordNueva.value;\n    const contranNuevaConf = this.formCambiarContrasena.controls.passwordNuevaConfirmacion.value;\n    const idUsuario = this.usuario._id;\n\n    if (contraNueva === contranNuevaConf) {\n      this.usuariosService.cambiarContraseña(contraVieja, contraNueva, idUsuario).subscribe(res => {\n        // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n        this.toastr.success('', 'Contraseña cambiada con exito', {\n          timeOut: 3000,\n        });\n        this.router.navigate(['/menu']);\n      }, err => {\n        // Si da error lo mostramos\n        if (err && err.status === 404) {\n          this.toastr.error('Error con usuario');\n        } else {\n          this.toastr.error('La contraseña es incorrectar');\n        }\n      });\n    }\n  }\n\n  checkEliminar() {\n    if (!this.checkActivado) {\n      this.checkActivado = true;\n    } else {\n      this.checkActivado = false;\n\n    }\n  }\n  eliminarUsuario() {\n    this.usuariosService.eliminarUsuario(this.usuario._id).subscribe(res => {\n      // Si se elimina corectamente\n      this.toastr.success('', 'Usuario eliminado correctamente', {\n        timeOut: 3000,\n      });\n      this.router.navigate(['/usuarios']);\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al eliminar la usuario');\n    });\n  }\n\n  // Confirmar eliminacion con alert\n  public confirmarEliminacion() {\n    this.mensajeConfirmarService.confirm('Por favor confirme..', '¿Estas seguro de eliminar el usuario?')\n      .then((confirmed) => { if (confirmed) { this.eliminarUsuario(); } })\n      .catch(() => console.log('No eliminar'));\n  }\n\n  //#endregion\n}\n","<section class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12 text-center\">\n            <h2 class=\"\"> Datos de usuario </h2>\n        </div>\n\n\n        <div class=\"row d-flex justify-content-center col-sm-12 col-md-9\" *ngIf=\"usuario\">\n            <div class=\"col-sm-10 tarjeta row \">\n                <i class=\"fas fa-user fa-4x col-sm-2 text-center\"></i>\n                <div class=\"col-sm-10n pt-3\">\n                    <h5 class=\"col-sm-12\">DNI: <span>{{usuario.dni}}</span></h5>\n                    <h5 class=\"col-sm-12\">Nombre: <span>{{usuario.nombre}}</span></h5>\n                    <h5 class=\"col-sm-12\">Domicilio: <span>{{usuario.domicilio}}</span></h5>\n                    <h5 class=\"col-sm-12\">Telefono: <span>{{usuario.telefono}}</span></h5>\n                    <h5 class=\"col-sm-12\">Acceso: <span>{{nivelAcceso()}}</span> </h5>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"usuarioLogeado.acceso === '1'\" class=\"row d-flex justify-content-center col-sm-12 col-md-9 m-0\">\n            <div class=\"col-sm-10 \" [formGroup]=\"formActualizarDatosUsuario\" (change)=\"cambiosFormDatos()\">\n                <label class=\"col-sm-12 col-md-6 control-label text-left labelNombreTabla\">\n                    DNI\n                    <input type=\"text\" class=\"form-control\" formControlName=\"dniUsuario\"  >\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6 \"> Nombre\n                    <input type=\"text\" class=\"form-control\" formControlName=\"nombreUsuario\" >\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6\"> Domicilio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"domicilioUsuario\" >\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6\"> Telefono\n                    <input type=\"text\" class=\"form-control\" formControlName=\"telefonoUsuario\" >\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-12\">Nivel de acceso del usuario\n                    <select class=\"form-control\" formControlName=\"accesoUsuario\" >\n                        <option value=\"2\" selected>Ejercicio</option>\n                        <option value=\"3\">Nutricion</option>\n                        <option value=\"4\">Clases</option>\n                        <option value=\"5\">Ejercicio + Nutricion</option>\n                        <option value=\"6\">Ejercicio + Clases</option>\n                        <option value=\"7\">Nutricion + Clases</option>\n                        <option value=\"8\">Ejercicio + Nutricion + Clases</option>\n                        <option value=\"1\">Administrador</option>\n                    </select>\n                </label>\n            </div>\n            <div class=\"row d-flex justify-content-center col-sm-12 col-md-12 pt-4 m-0\">\n                <button type=\"submit\" class=\"btn botonCrearUsuario col-sm-6 mx-auto \"  [disabled]=\"!cambiosFormDatosComp\" (click)=\"modificarDatos()\">\n                    <i class=\"fas fa-save\"></i> Modificar datos del usuario\n                </button>\n            </div>\n        </div>\n\n        <div  class=\"row d-flex justify-content-center col-sm-12 col-md-9 m-0 mb-3\">\n            <div class=\"col-sm-10 \" [formGroup]=\"formCambiarContrasena\">\n                <label class=\"control-label text-left col-sm-12 col-md-12\"> Contraseña antigua\n                    <input type=\"password\" class=\"form-control\" formControlName=\"passwordVieja\">\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6\"> Contraseña nueva\n                    <input type=\"password\" class=\"form-control\" formControlName=\"passwordNueva\">\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6\"> Repetir contraseña nueva\n                    <input type=\"password\" class=\"form-control\" formControlName=\"passwordNuevaConfirmacion\">\n                </label>\n                <div class=\"row d-flex justify-content-center col-sm-12 col-md-12 pt-4 m-0\">\n                    <button type=\"submit\" class=\"btn botonCrearUsuario col-sm-6 mx-auto \" [disabled]=\"!formCambiarContrasena.valid\" (click)=\"cambiarContrasena()\">\n                        <i class=\"fas fa-save\"></i> Cambiar contraseña\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-12 p-2 divEliminar\" *ngIf=\"usuarioLogeado.acceso == '1'\">\n            <button type=\"submit\" class=\"btn botonEliminarUsuario col-sm-12 col-md-2 \"  (click)=\"confirmarEliminacion()\">\n                <i class=\"fas fa-trash-alt pr-1\"></i> Eliminar Usuario\n            </button>\n            \n        </div>\n    </div>\n</section>","import { LocalService } from '../../servicios/localService';\nimport { Component, OnInit } from '@angular/core';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { Usuario } from 'src/app/modelos/usuario';\nimport { Router } from '@angular/router';\nimport { ConfiguracionBuscador } from '../adicionales/buscador/buscador.component';\nimport { ToastrService } from 'ngx-toastr';\n\n// tslint:disable: member-ordering\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.scss']\n})\nexport class UsuariosComponent implements OnInit {\n\n  //#endregion\n  constructor(\n    private usuariosService: UsuariosService, // Servicio para interactuar con API\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n  ) { }\n\n  //#region VARIABLES\n\n  // Array donde almacenamos las tablas que nos devuelve la api para el usuario seleccionado o logeado\n  usuarios: Usuario[] = [];\n\n  // Nivel de acceso de usuario logeado\n  acceso = this.localService.getAccesoUsuario();\n\n  //#region COMPONENTES\n\n  ngOnInit(): void {\n    if (this.acceso !== '1') {\n      this.toastr.error('Falta de permisos para esta accion');\n      this.router.navigate(['/menu']);\n    }\n    this.usuariosService.usuariosRegistrados().subscribe(data => (\n      this.configBuscador.values = data.usuarios,\n      this.usuarios = data.usuarios\n    ));\n  }\n\n  // Buscador de usuarios\n  configBuscador: ConfiguracionBuscador = {\n    values: [],\n    selected: null,\n    filter: 'nombre',\n    placeholder: 'Seleccione un Usuario',\n    empty: 'No hay usuarios con ese nombre',\n    fontSize: '14px',\n    fontColor: '#000000',\n    render: (value) => value.nombre\n  };\n\n  // Funcion utilizada pada cuando se selecciona usuario del autocomplete\n  selectUsuario($event) {\n    if ($event != null) {\n      // Si seleccionamos uno cargamos el array de usuarios solo con ese para mostrar su tarjeta\n      this.usuarios = [this.usuarios.find(x => x._id === $event._id)];\n    } else {\n      // Si no se selecciona se recargan los usuarios\n      this.usuariosService.usuariosRegistrados().subscribe(data => (\n        this.usuarios = data.usuarios\n      ));\n\n    }\n  }\n\n  // Recargamos usuarios siempre que se vaya a usar el buscador\n  refrescarUsuarios() {\n    this.usuariosService.usuariosRegistrados().subscribe(data => (\n      this.usuarios = data.usuarios\n    ));\n  }\n  //#endregion\n}\n","<section class=\"col-sm-12\">\n    <div class=\"row\" >  \n        <div class=\"col-sm-12 d-flex justify-content-center\">\n            <div class=\"col-md-4 pt-5\">\n                <buscador-component (selected)=\"selectUsuario($event)\" [config]=\"configBuscador\" (click)=\"refrescarUsuarios()\">\n                </buscador-component>\n            </div>\n        </div>\n    </div>\n    <div class=\"row d-flex justify-content-center \">\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"'/usuarios/crearUsuario'\" >\n            <i class=\"fas fa-plus-square fa-4x\"></i>\n            <h4 class=\"col-sm-12\">Añadir usuario</h4>\n        </div>\n    </div>\n    <div class=\"row d-flex justify-content-center \">\n       \n        <div class=\"col-sm-12 col-md-2 tarjeta row \" *ngFor=\"let usuario of usuarios\"   [routerLink]=\"['/usuarios/datosUsuario',usuario._id]\" >\n            <i class=\"fas fa-user fa-4x\"></i>\n            <h4 class=\"col-sm-12\">{{usuario.nombre}}</h4>\n        </div>\n    </div>\n</section>","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { LocalService } from './localService';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\r\n    private toastr: ToastrService // Servicio que nos creara notificaciones\r\n  ) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // Cogemos el token del usuario de localstorage\r\n    const token = localStorage.getItem('TokenDeAcceso');\r\n\r\n    if (!token) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    // Añadimos el token al header Authorization de todas las solicitudes http\r\n    const req1 = req.clone({\r\n      headers: req.headers.set('Authorization', `Bearer ${token}`),\r\n    });\r\n\r\n    // Mandamos siempre la peticion con el Authorization y si diera error 401 (Token no valido) cerramos sesion\r\n    return next.handle(req1).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n\r\n        if (err.status === 401) {\r\n          this.localService.cerrarSesion();\r\n          this.toastr.error('', 'Sesion caducada', {\r\n            timeOut: 3000,\r\n          });\r\n        }\r\n\r\n        return throwError(err);\r\n\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Clase } from '../modelos/clase';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Usuario } from '../modelos/usuario';\r\nimport { Component, OnInit, Inject, ChangeDetectionStrategy, OnDestroy, ViewEncapsulation, } from '@angular/core';\r\nimport { CalendarEvent, CalendarView, CalendarEventAction, CalendarEventTitleFormatter } from 'angular-calendar';\r\n\r\n@Injectable()\r\nexport class ClasesService {\r\n\r\n  // Direccones de servidor de back\r\n  local = 'http://localhost:3000';\r\n  heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n\r\n  ServidorBACKEND = this.local;\r\n\r\n  authSubject = new BehaviorSubject(false);\r\n\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  //#region FUNCIONES INTERACTUAR CON API\r\n\r\n  // Funcion guardar ejercicio\r\n  crearClase(clase: Clase): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/crearClase`, { clase });\r\n  }\r\n\r\n  // Buscamos todas las clases\r\n  listarClases(): Observable<Clase[]> {\r\n    return this.httpClient.post<Clase[]>(`${this.ServidorBACKEND}/listarClases`, '');\r\n  }\r\n  // Eliminar ejercicio\r\n  eliminarClase(idClase) {\r\n    return this.httpClient.post(`${this.ServidorBACKEND}/eliminarClase`, { idClase });\r\n  }\r\n\r\n  // Añadir alumno a clase\r\n  anadirAlumnoClase(idClase, usuario) {\r\n    return this.httpClient.post(`${this.ServidorBACKEND}/anadirAlumnoClase`, { idClase, usuario });\r\n  }\r\n  // Añadir alumno a clase\r\n  eliminarAlumnoClase(idClase, usuario) {\r\n    return this.httpClient.post(`${this.ServidorBACKEND}/eliminarAlumnoClase`, { idClase, usuario });\r\n  }\r\n\r\n  // Listar clases a las que asiste el alumno\r\n  listarClasesAsiste(usuario: Usuario): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/listarClasesAsiste`, { usuario });\r\n  }\r\n\r\n  // Listar clases a las que NO asiste el alumno\r\n  listarClasesNoAsiste(usuario: Usuario): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/listarClasesNoAsiste`, { usuario });\r\n  }\r\n\r\n  //#endregion\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Dieta, Dietas } from '../modelos/dieta';\r\n\r\n@Injectable()\r\nexport class DietasService {\r\n\r\n    // Direccones de servidor de back\r\n    local = 'http://localhost:3000';\r\n    heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n    ServidorBACKEND = this.local;\r\n    authSubject = new BehaviorSubject(false);\r\n\r\n    constructor(\r\n        private httpClient: HttpClient\r\n    ) {\r\n\r\n    }\r\n\r\n    //#region FUNCIONES INTERACTUAR CON API\r\n\r\n    // Funcion para guardar en base de datos nueva dieta\r\n    crearDieta(dieta: Dieta): Observable<any> {\r\n        return this.httpClient.post<any>(`${this.ServidorBACKEND}/crearDieta`, { dieta });\r\n    }\r\n\r\n    // Buscamos las dietas del usuario que mandamos a la api\r\n    listarDietasUsuario(idUsuario): Observable<Dietas> {\r\n        return this.httpClient.post<Dietas>(`${this.ServidorBACKEND}/listarDietasUsuario`, { idUsuario });\r\n    }\r\n\r\n    // Buscamos la dieta con la api en la base de datos\r\n    buscarDieta(idDieta): Observable<any> {\r\n        return this.httpClient.post<any>(`${this.ServidorBACKEND}/buscarDieta`, { idDieta });\r\n    }\r\n\r\n    // Mandamois ID de la dieta para borrarla en la bdd con api\r\n    eliminarDieta(idDieta): Observable<any> {\r\n        return this.httpClient.post<any>(`${this.ServidorBACKEND}/eliminarDieta`, { idDieta });\r\n    }\r\n\r\n    //#endregion\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Tabla, Tablas, CambiosPeso } from '../modelos/tabla';\r\nimport { EjercicioEjemplo } from '../modelos/ejercicioEjemplo';\r\n\r\n@Injectable()\r\nexport class EjerciciosService {\r\n\r\n  // Direccones de servidor de back\r\n  local = 'http://localhost:3000';\r\n  heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n  localFrontApi = 'http://localhost:4200';\r\n  herokuFrontApi = 'https://webappimpactofront.herokuapp.com/';\r\n\r\n\r\n  ServidorBACKEND = this.local;\r\n  ServidorGuardarEjer = this.localFrontApi;\r\n\r\n  authSubject = new BehaviorSubject(false);\r\n\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  //#region FUNCIONES INTERACTUAR CON API\r\n\r\n  // Funcion guardar ejercicio\r\n  crearEjercicio(ejercicio: EjercicioEjemplo, imagen): Observable<any> {\r\n    this.guardarImagen(imagen).subscribe(res => {\r\n      console.log('Imagen guardada');\r\n    });\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/crearEjercicio`, { ejercicio });\r\n  }\r\n\r\n  // Buscamos las tablas del usuario que mandamos a la api\r\n  listarEjerciciosZona(zona): Observable<EjercicioEjemplo[]> {\r\n    return this.httpClient.post<EjercicioEjemplo[]>(`${this.ServidorBACKEND}/listarEjerciciosZona`, { zona });\r\n  }\r\n\r\n  // Buscamos la tabla con la api en la base de datos\r\n  buscarEjercicio(idEjercicio): Observable<EjercicioEjemplo> {\r\n    return this.httpClient.post<EjercicioEjemplo>(`${this.ServidorBACKEND}/buscarEjercicio`, { idEjercicio });\r\n  }\r\n\r\n  // Guardar imagen\r\n  guardarImagen(imagen) {\r\n    return this.httpClient.post(`${this.ServidorGuardarEjer}/guardarImagen`, imagen);\r\n  }\r\n\r\n  // Eliminar ejercicio\r\n  eliminarEjercicio(idEjercicio) {\r\n    return this.httpClient.post(`${this.ServidorBACKEND}/eliminarEjercicio`, { idEjercicio });\r\n  }\r\n\r\n  //#endregion\r\n\r\n\r\n\r\n}\r\n","import { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Injectable } from '@angular/core';\r\nimport { JsonWebToken } from '../modelos/jsonWebToken';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class LocalService {\r\n\r\n    // Variable para descifrar token\r\n    jwtHelper: JwtHelperService = new JwtHelperService();\r\n\r\n    // Creamos token\r\n    private token: string;\r\n\r\n    constructor(\r\n        private router: Router,\r\n    ) {\r\n\r\n    }\r\n\r\n    //#region FUNCIONES\r\n\r\n    // Funcion que nos eliminara el token del localStorage del navegador\r\n    cerrarSesion(): void {\r\n        this.token = '';\r\n        localStorage.removeItem('TokenDeAcceso');\r\n        localStorage.removeItem('ExpiracionToken');\r\n        this.router.navigate(['/']);\r\n    }\r\n\r\n    // Comprobamos si el usuario esta autentificado si esta el token el el storage\r\n    comprobarAutentificacion(): boolean {\r\n        // tslint:disable-next-line: semicolon\r\n        return localStorage.getItem('TokenDeAcceso') !== null;\r\n    }\r\n\r\n    // Nos devolvera el token guardado en localstorage\r\n    getToken(): string {\r\n        return localStorage.getItem('TokenDeAcceso');\r\n    }\r\n\r\n    // Nos devolvera la expiracion del token guardado en localstorage\r\n    getExpiracionToken(): string {\r\n        return localStorage.getItem('ExpiracionToken');\r\n    }\r\n\r\n    // Desciframos los datos del token\r\n    getTokenData(): JsonWebToken {\r\n        const t = this.getToken();\r\n        if (t) {\r\n            const token = this.jwtHelper.decodeToken(t);\r\n            return {\r\n                id: token.id,\r\n                nombre: token.nombre,\r\n                dni: token.dni,\r\n                acceso: token.acceso\r\n            };\r\n        } else {\r\n            return {} as JsonWebToken;\r\n        }\r\n    }\r\n\r\n    // Devolvemos acceso del usuario\r\n    getAccesoUsuario(): string {\r\n        const token = this.getTokenData();\r\n        return token.acceso;\r\n    }\r\n    // Devolvemos acceso del usuario\r\n    getIdUsuario(): string {\r\n        const token = this.getTokenData();\r\n        return token.id;\r\n    }\r\n\r\n    //#endregion\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MensajeConfirmarComponent } from '../componentes/adicionales/mensaje-confirmar/mensaje-confirmar.component';\r\n\r\n\r\n@Injectable()\r\nexport class MensajeConfirmarService {\r\n\r\n  constructor(private modalService: NgbModal) { }\r\n\r\n  public confirm(\r\n    title: string,\r\n    message: string,\r\n    btnOkText: string = 'Si',\r\n    btnCancelText: string = 'Cancelar',\r\n    dialogSize: 'sm'|'lg' = 'sm'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(MensajeConfirmarComponent, { size: dialogSize });\r\n    modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Tabla, Tablas, CambiosPeso } from '../modelos/tabla';\r\nimport { Seguimiento } from '../modelos/seguimiento';\r\n\r\n@Injectable()\r\nexport class SeguimientosService {\r\n\r\n    // Direccones de servidor de back\r\n    local = 'http://localhost:3000';\r\n    heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n    ServidorBACKEND = this.local;\r\n    authSubject = new BehaviorSubject(false);\r\n\r\n    constructor(\r\n        private httpClient: HttpClient\r\n    ) {\r\n\r\n    }\r\n\r\n    //#region FUNCIONES INTERACTUAR CON API\r\n\r\n    // Funcion para crear un seguimiento al usuario en bdd\r\n    crearSeguimiento(idUsuario): Observable<any> {\r\n        return this.httpClient.post<any>(`${this.ServidorBACKEND}/crearSeguimiento`, { idUsuario });\r\n    }\r\n\r\n    // Funcion para buscar en bbdd el seguimiento del usuario\r\n    buscarSeguimiento(idUsuario): Observable<Seguimiento> {\r\n        return this.httpClient.post<Seguimiento>(`${this.ServidorBACKEND}/buscarSeguimiento`, { idUsuario });\r\n    }\r\n\r\n    // Guardamos nuevo indice del usuario en bbdd\r\n    guardarIndice(seguimiento: Seguimiento): Observable<any> {\r\n        return this.httpClient.post<any>(`${this.ServidorBACKEND}/guardarIndice`, { seguimiento });\r\n    }\r\n\r\n    // Guardamos nueva medida del usuario en bbdd\r\n    guardarMedidas(seguimiento: Seguimiento) {\r\n        return this.httpClient.post(`${this.ServidorBACKEND}/guardarMedidas`, { seguimiento });\r\n    }\r\n\r\n    // Eliminamos un indice del usuario en bbdd\r\n    eliminarIndice(idSeguimiento, idIndice): Observable<any> {\r\n        return this.httpClient.post<any>(`${this.ServidorBACKEND}/eliminarIndice`, { idSeguimiento, idIndice });\r\n    }\r\n\r\n    // Eliminamos una medida del usuario en bbdd\r\n    eliminarMedidas(idSeguimiento, idMedida): Observable<any> {\r\n        return this.httpClient.post<any>(`${this.ServidorBACKEND}/eliminarMedidas`, { idSeguimiento, idMedida });\r\n    }\r\n\r\n    //#endregion\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Tabla, Tablas, CambiosPeso } from '../modelos/tabla';\r\n\r\n@Injectable()\r\nexport class TablasService {\r\n\r\n  // Direccones de servidor de back\r\n  local = 'http://localhost:3000';\r\n  heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n  ServidorBACKEND = this.local;\r\n  authSubject = new BehaviorSubject(false);\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  //#region FUNCIONES INTERACTUAR CON API\r\n\r\n  // Funcion para guardar en base de datos nueva tabla\r\n  crearTabla(tabla: Tabla): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/crearTabla`, { tabla });\r\n  }\r\n\r\n  // Buscamos las tablas del usuario que mandamos a la api\r\n  listarTablasUsuario(idUsuario): Observable<Tablas> {\r\n    return this.httpClient.post<Tablas>(`${this.ServidorBACKEND}/listarTablasUsuario`, { idUsuario });\r\n  }\r\n\r\n  // Buscamos la tabla con la api en la base de datos\r\n  buscarTabla(idTabla): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/buscarTabla`, { idTabla });\r\n  }\r\n\r\n  // Actualizamos pesosMax de tabla\r\n  actualizarPesoMax(cambiosPesoMax: Array<CambiosPeso>) {\r\n    return this.httpClient.post(`${this.ServidorBACKEND}/actualizarPeso`, cambiosPesoMax);\r\n  }\r\n\r\n  // Mandamois ID de la tabla para borrarla en la bdd con api\r\n  eliminarTabla(idTabla): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/eliminarTabla`, { idTabla });\r\n  }\r\n\r\n\r\n  //#endregion\r\n\r\n\r\n\r\n}\r\n","import { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Usuario } from '../modelos/usuario';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UsuariosService {\r\n\r\n  // Direccones de servidor de back\r\n  local = 'http://localhost:3000';\r\n  heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n  ServidorBACKEND = this.local;\r\n  authSubject = new BehaviorSubject(false);\r\n\r\n  // Variable para descifrar token\r\n  jwtHelper: JwtHelperService = new JwtHelperService();\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  //#region FUNCIONES INTERACTUAR CON API\r\n\r\n  // Funcion para logear usuario\r\n  loginUsuario(dni: string, password: string): Observable<any> {\r\n    // mandamos en un post a la url del servidor del back, el dni y password que queremos comprobar que esta en bbdd\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/loginUsuario`,\r\n      { dni, password }).pipe(tap(\r\n        (res: any) => {\r\n          if (res) {\r\n            // Si el back funciona correctamente la respuesta sera un token que guardamos en la siguiente funcion\r\n            this.guardarToken(res.accessToken);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  // Funcion para registrar nuevos usuarios\r\n  registrarUsuario(user: Usuario): Observable<any> {\r\n    // mandamos en un post a la url del servidor del back, el usuario que queremos guardar en bbdd\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/registrarUsuario`,\r\n      user).pipe(tap(\r\n        (res) => {\r\n          if (res) {\r\n            // Si el back funciona correctamente la respuesta sera un token que guardamos en la siguiente funcion\r\n            console.log('Usuario registrado');\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  // Buscamos los usuarios registrados en la base de datos y devolvemos nombre y id\r\n  usuariosRegistrados() {\r\n    return this.httpClient.get<any>(`${this.ServidorBACKEND}/listarUsuarios`);\r\n  }\r\n\r\n  // Buscamos usuarios con el nivel acceso indicado. El nivel habra que mandarle en formato { \"acceso\" : [1,3,4] }\r\n  usuariosNivelAcceso(acceso) {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/listarUsuariosFiltrarNivel`, { acceso });\r\n  }\r\n\r\n  // Buscamos usuario con api en bbdd para usar sus datos\r\n  buscarUsuario(idUsuario) {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/buscarUsuario`, { idUsuario });\r\n  }\r\n\r\n  // Funcion para cambiar contraseña\r\n  cambiarContraseña(contraVieja, contraNueva, idUsuario): Observable<any> {\r\n    // mandamos en un post a la url del servidor del back las dos contraseñas para comprobar y cambiar\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/cambiarContrasena`, { contraVieja, contraNueva, idUsuario });\r\n  }\r\n\r\n  // Funcion para cambiar contraseña\r\n  modificarDatosUsuario(user: Usuario): Observable<any> {\r\n    // mandamos en un post a la url del servidor del back las dos contraseñas para comprobar y cambiar\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/modificarDatosUsuario`, user);\r\n  }\r\n\r\n  // Mandamois ID del usuario para borrarla en la bdd con api\r\n  eliminarUsuario(idUsuario): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/eliminarUsuario`, { idUsuario });\r\n  }\r\n\r\n  //#endregion\r\n\r\n\r\n  //#region FUNCIONES INTERNAS\r\n\r\n  // Funcion que nos guardara el token en el localStorage del navegador\r\n  private guardarToken(token: string): void {\r\n    localStorage.setItem('TokenDeAcceso', token);\r\n  }\r\n\r\n  //#endregion\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}