{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/componentes/adicionales/buscador/buscador.component.ts","webpack:///src/app/componentes/adicionales/buscador/buscador.component.html","webpack:///src/app/componentes/footer/footer.component.ts","webpack:///src/app/componentes/footer/footer.component.html","webpack:///src/app/componentes/login/login.component.ts","webpack:///src/app/componentes/login/login.component.html","webpack:///src/app/componentes/menu/menu.component.ts","webpack:///src/app/componentes/menu/menu.component.html","webpack:///src/app/componentes/navbar/navbar.component.ts","webpack:///src/app/componentes/navbar/navbar.component.html","webpack:///src/app/componentes/tablas/crear-tablas/crear-tablas.component.ts","webpack:///src/app/componentes/tablas/crear-tablas/crear-tablas.component.html","webpack:///src/app/componentes/tablas/tablas.component.ts","webpack:///src/app/componentes/tablas/tablas.component.html","webpack:///src/app/componentes/tablas/visualizar-tablas/visualizar-tablas.component.ts","webpack:///src/app/componentes/tablas/visualizar-tablas/visualizar-tablas.component.html","webpack:///src/app/servicios/autentificacionService.ts","webpack:///src/app/servicios/localService.ts","webpack:///src/app/servicios/tablasService.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BuscadorComponent","fb","zone","selected","openModal","dirtyInput","inputLoader","listLoader","listObjects","setForm","config","form","controls","input","setValue","getFilterValue","setFormListeners","group","valueChanges","subscribe","data","filterObjects","item","property","filter","call","search","values","object","name","toLowerCase","replace","includes","toLocaleLowerCase","length","autocompleteList","nativeElement","style","height","value","emitEvent","markAsDirty","emit","clearInput","isNew","markAsPristine","showAutocomplete","selectObject","FooterComponent","LoginComponent","autentificacionService","localService","router","formBuilder","usuarioLogeado","setFormLogin","formLogin","dni","required","password","usuario","loginUsuario","res","updateUserStatus","next","navigate","comprobarAutentificacion","accederApp","MenuComponent","nivelAcceso","getAccesoUsuario","NavbarComponent","navExpandida","getTokenData","actualizarUsuarioLogeado","borrarToken","CrearTablasComponent","rutaActiva","tablasService","ejercicios","nombre","repeticiones","dias","ejercicio","params","idUsuario","tabla","dia","crearTabla","TablasComponent","tablasUsuario","acceso","configBuscador","placeholder","empty","fontSize","fontColor","render","usuariosRegistrados","usuarios","getIdUsuario","cargarTablasUsuario","$event","_id","listarTablasUsuario","tablas","VisualizarTablasComponent","idTabla","buscarTabla","console","log","AutentificacionService","httpClient","local","heroku","ServidorBACKEND","authSubject","jwtHelper","post","pipe","guardarToken","datosUsuario","accessToken","expiresIn","user","token","localStorage","setItem","LocalService","removeItem","getItem","t","getToken","decodeToken","TablasService","nuevaTabla","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './componentes/login/login.component';\r\nimport { MenuComponent } from './componentes/menu/menu.component';\r\nimport { TablasComponent } from './componentes/tablas/tablas.component';\r\nimport { CrearTablasComponent } from './componentes/tablas/crear-tablas/crear-tablas.component';\r\nimport { VisualizarTablasComponent } from './componentes/tablas/visualizar-tablas/visualizar-tablas.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'menu',\r\n    component: MenuComponent,\r\n  },\r\n  {\r\n    path: 'tablas',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: TablasComponent,\r\n      },\r\n      {\r\n        path: 'crear/:idUsuario',\r\n        component: CrearTablasComponent,\r\n      },\r\n      {\r\n        path: 'visualizar/:idTabla',\r\n        component: VisualizarTablasComponent,\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"content\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n<app-footer></app-footer>","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './componentes/login/login.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AutentificacionService } from './servicios/autentificacionService';\r\nimport { MenuComponent } from './componentes/menu/menu.component';\r\nimport { FooterComponent } from './componentes/footer/footer.component';\r\nimport { NavbarComponent } from './componentes/navbar/navbar.component';\r\nimport { TablasComponent } from './componentes/tablas/tablas.component';\r\nimport { BuscadorComponent } from './componentes/adicionales/buscador/buscador.component';\r\nimport { CrearTablasComponent } from './componentes/tablas/crear-tablas/crear-tablas.component';\r\nimport { VisualizarTablasComponent } from './componentes/tablas/visualizar-tablas/visualizar-tablas.component';\r\nimport { LocalService } from './servicios/localService';\r\nimport { TablasService } from './servicios/tablasService';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    MenuComponent,\r\n    FooterComponent,\r\n    NavbarComponent,\r\n    TablasComponent,\r\n    BuscadorComponent,\r\n    CrearTablasComponent,\r\n    VisualizarTablasComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    AutentificacionService,\r\n    LocalService,\r\n    TablasService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { debounceTime } from 'rxjs/internal/operators';\nimport { Component, OnInit, EventEmitter, ElementRef, ViewChild, Output, Input, NgZone } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\nexport interface ConfiguracionBuscador {\n  values: any[];\n  selected: any;\n  filter: string;\n  placeholder: string;\n  empty: string;\n  fontSize: string;\n  fontColor: string;\n  inputClass?: string;\n  render: (object) => string;\n}\n\n// tslint:disable no-input-rename no-output-rename component-selector\n\n@Component({\n\n  selector: 'buscador-component',\n  templateUrl: './buscador.component.html',\n  styleUrls: ['./buscador.component.scss']\n})\nexport class BuscadorComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Config que recibimos del padre para la configuracion del componente\n  @Input('config') config: ConfiguracionBuscador;\n\n  // Valor que emitimos al padre (objeto seleccionado de la lista)\n  @Output('selected') selected: EventEmitter<object> = new EventEmitter();\n\n  // Modal en el que mostramos la lista\n  @ViewChild('autocompleteList') autocompleteList: ElementRef;\n\n  // openModal = controla el abrir y cerrar el modal\n  public openModal = false;\n\n  // dirtyInput = controla si escribo en el input (si escribo y al seleccionar selecciono fuera borro el input y emito un null)\n  public dirtyInput = false;\n\n  // inputLoader = no se esta usando, era para mostrar simbolo de \"cargando\" en input, se añade al listado, con la variable listLoader\n  public inputLoader = false;\n\n  // listLoader = muestra el simbolo de \"cargando\" en el listado\n  public listLoader = false;\n\n  public form: FormGroup;\n  public listObjects: any[] = [];\n\n  //#endregion\n\n  constructor(\n    private fb: FormBuilder,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n    this.setForm();\n\n    if (this.config.selected) {\n      this.form.controls.input.setValue(this.getFilterValue(this.config.selected));\n    }\n    this.setFormListeners();\n  }\n  private setForm() {\n    this.form = this.fb.group({\n      input: new FormControl(''),\n    });\n\n  }\n\n  //#region FUNCIONES\n  private setFormListeners() {\n    if (this.form) {\n      this.form.controls.input.valueChanges.subscribe(() => {\n        this.listLoader = true;\n        this.dirtyInput = true;\n        this.openModal = true;\n      });\n      // this.form.controls.input.valueChanges.debounceTime(500).subscribe(data => {\n      this.form.controls.input.valueChanges.subscribe(data => {\n        this.filterObjects(data);\n      });\n    }\n  }\n\n\n  // Metodos para filtrar las palabras y que no haya problemas al realizar la busqueda\n  private getFilterValue(item: object): string {\n    const property = item[this.config.filter];\n    if (typeof (property) === 'function') {\n      return property.call(item);\n    }\n    return property;\n  }\n\n  private filterObjects(search: string) {\n    this.listObjects = this.config.values.filter(object => {\n      if (this.getFilterValue(object) && typeof search === 'string') {\n        const name = this.getFilterValue(object)\n          .toLowerCase()\n          .replace('á', 'a').replace('é', 'e')\n          .replace('ì', 'i').replace('ó', 'o')\n          .replace('ú', 'u');\n        return name.includes(\n          search.toLocaleLowerCase()\n            .replace('á', 'a').replace('é', 'e')\n            .replace('ì', 'i').replace('ó', 'o')\n            .replace('ú', 'u')\n        );\n      }\n    });\n\n    this.listLoader = false;\n    if (this.listObjects.length > 10) {\n      this.autocompleteList.nativeElement.style.height = '200px';\n    } else if (this.listObjects.length === 0) {\n      this.autocompleteList.nativeElement.style.height = '28px';\n    } else {\n      this.autocompleteList.nativeElement.style.height = (this.listObjects.length * 28) + 'px';\n    }\n  }\n\n  public showAutocomplete() {\n    this.filterObjects(this.form.controls.input.value);\n    this.openModal = true;\n  }\n\n  // Este metodo cierra el modal\n  // Si selecciono un elemento (evento click): relleno el valor y lo emito\n  // Si no selecciono un elemento (evento blur, hago click fuera de la lista) y el input ha sido editado: limpio el campo y emito un null\n  public selectObject(object) {\n    if (this.openModal) {\n      // this.zone.runOutsideAngular(() => {\n        if (object) {\n          this.form.controls.input.setValue(this.getFilterValue(object), { emitEvent: false });\n          this.form.controls.input.markAsDirty();\n          this.dirtyInput = false;\n          this.selected.emit(object);\n        } else if (this.dirtyInput) {\n          this.clearInput(false);\n          this.dirtyInput = false;\n          this.selected.emit(object);\n        }\n      // });\n      this.openModal = false;\n    }\n  }\n\n  // Limpiamos el input\n  public clearInput(isNew) {\n    this.form.controls.input.setValue('', { emitEvent: false });\n    if (isNew) {\n      this.form.controls.input.markAsPristine();\n    }\n  }\n  //#endregion\n}\n","<div [formGroup]=\"form\" [class.has-error]=\"form.controls['input'].invalid && form.controls['input'].dirty\"\n    [class.has-success]=\"form.controls['input'].valid && form.controls['input'].dirty\">\n    <label class=\"formBuscar col-md-12\">\n        <span class=\"icon\"><i class=\"fa fa-search\"></i></span>\n        <input class=\"form-control col-md-11\" type=\"search\" placeholder=\"Buscar usuario\" id=\"buscarUsuario\"\n            formControlName=\"input\" (mousedown)=\"showAutocomplete()\" (blur)=\"selectObject(null)\" type=\"text\"\n            [attr.placeholder]=\"inputLoader ? '' : config.placeholder\" class=\"form-control {{config.inputClass}}\">\n    </label>\n    <div #autocompleteList class=\"form-control autocomplete \" [class.hide]=\"!openModal\">\n        <ng-container *ngIf=\"!listLoader\">\n            <p *ngFor=\"let object of listObjects\" (mousedown)=\"selectObject(object)\">\n                {{config.render(object)}}\n            </p>\n            <p *ngIf=\"listObjects.length == 0\"><strong>{{config.empty}}</strong></p>\n        </ng-container>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"navbar navbar-fixed-bottom\">\n      <div class=\"row col-12 iconos\">\n            <!-- Facebook -->\n            <a class=\"fb-ic\" href=\"https://www.facebook.com/GimansioImpactoLaguna\">\n              <i class=\"fab fa-facebook m-2 fa-2x\"> </i>\n            </a>\n            <!--Instagram-->\n            <a class=\"ins-ic\" href=\"https://www.instagram.com/impactolaguna\">\n              <i class=\"fab fa-instagram  m-2 fa-2x\"> </i>\n            </a>\n      </div>\n    <div class=\"footer-copyright text-center py-1 col-12\">© 2020 Impacto Laguna</div>\n</footer>\n","import { Component, OnInit, ɵConsole } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AutentificacionService } from 'src/app/servicios/autentificacionService';\nimport { FormBuilder, Validators, FormControl, FormGroup } from '@angular/forms';\nimport { Usuario } from 'src/app/modelos/usuario';\nimport { NavbarComponent } from '../navbar/navbar.component';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Formulario\n  public formLogin: FormGroup;\n\n  //#endregion\n\n\n  constructor(\n    private autentificacionService: AutentificacionService,\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private router: Router,\n    private formBuilder: FormBuilder,\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogeado();\n    this.setFormLogin();\n  }\n\n  //#region FUNCIONES\n\n  // FORMULARIOS\n  private setFormLogin() {\n    this.formLogin = this.formBuilder.group({\n      dni: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n    });\n  }\n\n  // Funcion donde mandamos usuario logeado en el formulario al servicio que nos autentifica al usuario y mandamos a menus si es valido\n  accederApp(): void {\n    const usuario: Usuario = {\n      dni: this.formLogin.controls.dni.value,\n      password: this.formLogin.controls.password.value\n    };\n    const dni = this.formLogin.controls.dni.value;\n    const password = this.formLogin.controls.password.value;\n\n    this.autentificacionService.loginUsuario(dni, password).subscribe(res => {\n      NavbarComponent.updateUserStatus.next(true); // here!\n      this.router.navigate(['/menu']);\n    });\n  }\n\n  // Comprobamos hay algun usuario ya logeado y si es que si mandamos a menu directamente\n  usuarioLogeado() {\n    if (this.localService.comprobarAutentificacion()) {\n      this.router.navigate(['/menu']);\n    }\n  }\n\n  //#endregion\n\n\n}\n","<section class=\"d-flex justify-content-center align-items-center h-100\">\n\t<div class=\"card\">\n\t\t<div class=\"card-header\">\n\t\t\t<h3>Login</h3>\n\t\t\t<div class=\"d-flex justify-content-end social_icon\">\n\t\t\t\t<span> <a class=\"fb-ic\" href=\"https://www.facebook.com/GimansioImpactoLaguna\"><i\n\t\t\t\t\t\t\tclass=\"fab fa-facebook-square\"></i></a></span>\n\t\t\t\t<span><a class=\"ins-ic\" href=\"https://www.instagram.com/impactolaguna\"><i\n\t\t\t\t\t\t\tclass=\"fab fa-instagram-square\"></i></a></span>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"card-body\">\n\t\t\t<div class=\"col-xs-12 col-sm-12\" [formGroup]=\"formLogin\" class=\"login-container\">\n\t\t\t\t<div class=\"input-group form-group\">\n\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input type=\"text\" class=\"form-control input-sm\" formControlName=\"dni\" placeholder=\"DNI\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"input-group form-group\">\n\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input type=\"password\" class=\"form-control input-sm\" formControlName=\"password\"\n\t\t\t\t\t\tplaceholder=\"Contraseña\">\n\t\t\t\t</div>\n\t\t\t\t<button (click)=\"accederApp()\" type=\"button\" class=\"btn float-right login_btn\">\n\t\t\t\t\tACCEDER\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { AutentificacionService } from 'src/app/servicios/autentificacionService';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  //#region VARIABLES\n\n  public nivelAcceso = this.localService.getAccesoUsuario();\n\n  //#endregion\n\n  constructor(\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n\n  ) { }\n\n\n  ngOnInit(): void {\n  }\n}\n","<section>\n    <div class=\"col-sm-7\">\n        <div class=\"row\">\n            <a class=\"col-sm-12 col-md tarjeta row \" href=\"/tablas\" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '2') || (nivelAcceso == '5')  || (nivelAcceso == '6')  || (nivelAcceso == '7')\">\n                <img src=\"/assets/imagenes/tablas.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Tablas</h3>\n            </a>\n            <a class=\"col-sm-12 col-md tarjeta row \" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '2') || (nivelAcceso == '5')  || (nivelAcceso == '6')  || (nivelAcceso == '7')\">\n                <img src=\"/assets/imagenes/ejercicios.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Ejercicios</h3>\n            </a>\n        </div>\n        <div class=\"row\">\n            <a class=\"col-sm-12 col-md tarjeta row \" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '3') || (nivelAcceso == '5')  || (nivelAcceso == '7')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/dietas.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Dietas</h3>\n            </a>\n            <a class=\"col-sm-12 col-md tarjeta row \" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '3') || (nivelAcceso == '5')  || (nivelAcceso == '7')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/seguimiento.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Seguimiento</h3>\n            </a>\n            <a class=\"col-sm-12 col-md tarjeta row \" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '4') || (nivelAcceso == '6')  || (nivelAcceso == '7')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/clases.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Clases</h3>\n            </a>\n            <a class=\"col-sm-12 col-md tarjeta row \" *ngIf=\"nivelAcceso == ('1')\">\n                <img src=\"/assets/imagenes/usuarios.png\" alt=\"Acceso a usuarios\">\n                <h3 class=\"col-sm-12\">Usuarios</h3>\n            </a>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery';\nimport { AutentificacionService } from 'src/app/servicios/autentificacionService';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n\n\n  // #region VARIABLES\n\n  // Utiliaremos para actualizar nombre de usuario al logear\n  public static updateUserStatus: Subject<boolean> = new Subject();\n\n  // Var para comprobar si la nav esta expandida o no\n  navExpandida = false;\n\n  // Datos de usuario logeado\n  usuarioLogeado;\n\n  //#endregion\n\n  constructor(\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private router: Router,\n  ) {\n    NavbarComponent.updateUserStatus.subscribe(res => {\n      this.usuarioLogeado = this.localService.getTokenData();\n    });\n  }\n\n  ngOnInit(): void {\n    this.actualizarUsuarioLogeado();\n  }\n\n  //#region FUNCIONES\n\n  // Funcion con la que expandimos el navbar para desplegar las opciones en la version movil\n  public expandirNav() {\n    if (!this.navExpandida) {\n      $('#navbar').height(370);\n      this.navExpandida = true;\n    } else {\n      $('#navbar').height(90);\n      this.navExpandida = false;\n    }\n  }\n\n  // Funcion con la que eliminamos el token generado y cerramos sesion\n  cerrarSesion(): void {\n    this.localService.borrarToken();\n    this.router.navigate(['/']);\n  }\n\n  // Comporbamos si el usuario esta logeado para mostrar menus de navbar o no\n  comprobarAutentificacion() {\n    return this.localService.comprobarAutentificacion();\n  }\n\n  // Actualizamos usuario logeado al acceder\n  actualizarUsuarioLogeado() {\n    this.usuarioLogeado = this.localService.getTokenData();\n  }\n\n  //#endregion\n}\n","<nav class=\"navbar navbar-expand-sm navbar-light\" id=\"navbar\">\n    <a class=\"navbar-brand\" href=\"/\">\n        <img src=\"/assets/imagenes/logoImpacto.png\">\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" (click)=\"expandirNav()\" *ngIf=\"comprobarAutentificacion()\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    \n    <div class=\"collapse navbar-collapse navbarDiv\" id=\"navbarSupportedContent\" *ngIf=\"comprobarAutentificacion()\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\"  href=\"/tablas\">Tablas </a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\">Ejercicios</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" >Dietas</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" >Seguimiento</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" >Clases</a>\n            </li>\n\n        </ul>\n        <ul  class=\"navbar-nav \">\n            <li class=\"nav-item dropleft \">\n                <a class=\"nav-link dropleft-toggle \" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\">\n                    {{usuarioLogeado.nombre}}\n                    <i class=\"fas fa-user fa-2x ml-2\"></i>\n                    \n                </a>\n                <div class=\"dropdown-menu \" aria-labelledby=\"navbarDropdownMenuLink\">\n                    <a class=\"dropdown-item\" href=\"#\">Cambiar contraseña</a>\n                    <a class=\"dropdown-item\" href=\"/\" (click)=\"cerrarSesion()\">Cerrar sesion</a>\n                </div>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AutentificacionService } from 'src/app/servicios/autentificacionService';\nimport { Tabla, Ejercicio, Dia } from 'src/app/modelos/tabla';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { TablasService } from 'src/app/servicios/tablasService';\n\n\n@Component({\n  selector: 'app-crear-tablas',\n  templateUrl: './crear-tablas.component.html',\n  styleUrls: ['./crear-tablas.component.scss']\n})\n\nexport class CrearTablasComponent implements OnInit {\n\n  //#region\n\n  // idUsuario que nos mandamos desde tablas para crear la tabla al usuario\n  idUsuario;\n  //#endregion\n\n  public tabla: Tabla;\n  public ejercicios: Ejercicio[] = [{ nombre: 'Pres banca', repeticiones: '12,12,10,10' }, { nombre: 'Pres banca', repeticiones: '12,12,10,10' }, { nombre: 'Pres banca', repeticiones: '12,12,10,10' }];\n  public dias: Dia[] = [{ ejercicio: this.ejercicios }, { ejercicio: this.ejercicios }, { ejercicio: this.ejercicios }];\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor idUsuario que nos manda el componente tablas\n    private tablasService: TablasService // Servicio para interactuar con API con TABLAS\n  ) { }\n\n\n\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idUsuario = params.idUsuario;\n      }\n    );\n  }\n\n  crearTabla() {\n    this.tabla = ({\n      usuario: this.idUsuario,\n      nombre: 'Febrero FUNCIONA',\n      dia: this.dias\n    });\n    this.tablasService.crearTabla(this.tabla);\n  }\n}\n\n","<section>\n\n    <p>crear-tablas works!</p>\n    <button type=\"submit\" (click)=\"crearTabla()\">ENVIAR TABLA</button>\n\n    {{idUsuario}}\n</section>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { AutentificacionService } from 'src/app/servicios/autentificacionService';\nimport { ConfiguracionBuscador } from '../adicionales/buscador/buscador.component';\nimport { Subject } from 'rxjs';\nimport { Usuario } from 'src/app/modelos/usuario';\nimport { Tabla, Tablas } from 'src/app/modelos/tabla';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { TablasService } from 'src/app/servicios/tablasService';\n\n// tslint:disable: member-ordering\n@Component({\n  selector: 'app-tablas',\n  templateUrl: './tablas.component.html',\n  styleUrls: ['./tablas.component.scss']\n})\nexport class TablasComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Array donde almacenamos las tablas que nos devuelve la api para el usuario seleccionado o logeado\n  tablasUsuario: Tabla[] = [];\n\n  // Nivel de acceso de usuario logeado\n  acceso = this.localService.getAccesoUsuario();\n\n  // Id de usuario logeado\n  idUsuario = null;\n\n  //#endregion\n\n  constructor(\n    private autentificacionService: AutentificacionService, // Servicio para interactuar con API\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private tablasService: TablasService // Servicio para interactuar con API con TABLAS\n  ) {\n  }\n\n  ngOnInit(): void {\n    // Cargamos los nombres de usuarios de BD en el componente de buscador\n    this.autentificacionService.usuariosRegistrados().subscribe(data => (\n      this.configBuscador.values = data.usuarios\n    ));\n\n    // Si accceso es 1 seria admin por lo que usaria el buscador para cargar tablas de usuario\n    // si es otro nivel es un usuario, cargamos sus tablas\n    if (this.acceso !== '1') {\n      this.idUsuario = this.localService.getIdUsuario();\n      this.cargarTablasUsuario(this.idUsuario);\n    }\n  }\n\n  //#region COMPONENTES\n\n  // Buscador de usuarios\n  configBuscador: ConfiguracionBuscador = {\n    values: [],\n    selected: null,\n    filter: 'nombre',\n    placeholder: 'Seleccione un Usuario',\n    empty: 'No hay usuarios con ese nombre',\n    fontSize: '14px',\n    fontColor: '#000000',\n    render: (value) => value.nombre\n  };\n\n  selectUsuario($event) {\n    if ($event != null) {\n      this.idUsuario = $event._id;\n      this.cargarTablasUsuario(this.idUsuario);\n    }else{\n      this.tablasUsuario = []; // Si selecciona fuera vaciamos las tablas por si se cargaron antes\n      this.idUsuario = null; // Tambien vaciamos el usuario ya que no habria ninguno seleccionado\n    }\n  }\n  // Buscamos con api las tablas del usuario seleccionado y las cargamos\n  cargarTablasUsuario(idUsuario) {\n    this.tablasService.listarTablasUsuario(idUsuario).subscribe(data => {\n      this.tablasUsuario = data.tablas;\n    });\n  }\n  //#endregion\n}\n","<section class=\"col-sm-12\">\n        <div class=\"row\" *ngIf=\"acceso == '1'\">  \n            <div class=\"col-sm-12 d-flex justify-content-center\">\n                <div class=\"col-md-4 pt-5\">\n                    <buscador-component (selected)=\"selectUsuario($event)\" [config]=\"configBuscador\">\n                    </buscador-component>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row d-flex justify-content-center \">\n            <a class=\"col-sm-12 col-md-2 tarjeta row \" href=\"/tablas/crear/{{idUsuario}}\" *ngIf=\"(acceso !='1') || (acceso == '1' && idUsuario != null)\">\n                <i class=\"fas fa-plus-square fa-4x\"></i>\n                <h3 class=\"col-sm-12\">Añadir tabla</h3>\n            </a>\n            <a class=\"col-sm-12 col-md-2 tarjeta row \" *ngFor=\"let tabla of tablasUsuario\"  href=\"/tablas/visualizar/{{tabla._id}}\">\n                <i class=\"fas fa-calendar-alt fa-4x\"></i>\n                <h3 class=\"col-sm-12\">{{tabla.nombre}}</h3>\n            </a>\n        </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Tabla, Tablas } from 'src/app/modelos/tabla';\nimport { AutentificacionService } from 'src/app/servicios/autentificacionService';\nimport { TablasService } from 'src/app/servicios/tablasService';\n\n@Component({\n  selector: 'app-visualizar-tablas',\n  templateUrl: './visualizar-tablas.component.html',\n  styleUrls: ['./visualizar-tablas.component.scss']\n})\nexport class VisualizarTablasComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // id de la tabla seleccionada que nos mandamos desde el menu de tablas\n  public idTabla;\n\n  // tabla correspondiente al idTabla que nos devuelve la API\n  public tablaRe;\n  tabla: Tabla;\n\n  //#endregion\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor idTabla que nos manda el componente tablas\n    private autentificacionService: AutentificacionService, // Servicio para interactuar con API\n    private tablasService: TablasService // Servicio para interactuar con API con TABLAS\n  ) { }\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idTabla = params.idTabla;\n      }\n    );\n\n    this.tablasService.buscarTabla(this.idTabla).subscribe(data => (\n      // La api nos devuelve array de tablas por lo que cogemos el primero ya que solo hay 1\n      this.tabla = ({\n        _id: data.tabla[0]._id,\n        usuario: data.tabla[0].usuario,\n        nombre: data.tabla[0].nombre,\n        dia: data.tabla[0].dia,\n      }),\n      console.log(this.tabla)\n    ));\n  }\n\n}\n","<section class=\"col-sm-12 \">\n    <div class=\"row d-flex justify-content-center\" *ngIf=\"tabla\">\n        <h2 class=\"col-sm-12 text-center\"> {{tabla.nombre}}</h2>\n        <div class=\"col-md-8 dia\" *ngFor=\"let dia of tabla.dia;index as i\">\n            <h3>Dia {{i+1}}</h3>\n            <div *ngFor=\"let ejercicio of dia.ejercicio\">\n                {{ejercicio.nombre}} ------ {{ejercicio.repeticiones}}\n            </div>\n        </div>\n    </div>\n</section>","import { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Usuario } from '../modelos/usuario';\r\nimport { JwtResponseI } from '../modelos/jwt-response';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { LocalService } from './localService';\r\n\r\n@Injectable()\r\nexport class AutentificacionService {\r\n\r\n  // Direccones de servidor de back\r\n  local = 'http://localhost:3000';\r\n  heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n  ServidorBACKEND = this.local;\r\n  authSubject = new BehaviorSubject(false);\r\n\r\n  // Variable para descifrar token\r\n  jwtHelper: JwtHelperService = new JwtHelperService();\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private localService: LocalService // Servicio para recuperar datos del localstorage\r\n  ) {\r\n\r\n  }\r\n\r\n  //#region FUNCIONES INTERACTUAR CON API\r\n\r\n  // Funcion para logear usuario\r\n  loginUsuario(dni: string, password: string): Observable<JwtResponseI> {\r\n    // mandamos en un post a la url del servidor del back, el dni y password que queremos comprobar que esta en bbdd\r\n    return this.httpClient.post<JwtResponseI>(`${this.ServidorBACKEND}/loginUsuario`,\r\n      { dni, password }).pipe(tap(\r\n        (res: JwtResponseI) => {\r\n          if (res) {\r\n            // Si el back funciona correctamente la respuesta sera un token que guardamos en la siguiente funcion\r\n            this.guardarToken(res.datosUsuario.id, res.datosUsuario.accessToken, res.datosUsuario.expiresIn);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  // Funcion para registrar nuevos usuarios\r\n  registrarUsuario(user: Usuario): Observable<JwtResponseI> {\r\n    // mandamos en un post a la url del servidor del back, el usuario que queremos guardar en bbdd\r\n    return this.httpClient.post<JwtResponseI>(`${this.ServidorBACKEND}/registrarUsuario`,\r\n      user).pipe(tap(\r\n        (res: JwtResponseI) => {\r\n          if (res) {\r\n            // Si el back funciona correctamente la respuesta sera un token que guardamos en la siguiente funcion\r\n            console.log('Usuario registrado');\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  // Buscamos los usuarios registrados en la base de datos y devolvemos nombre y id\r\n  public usuariosRegistrados() {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/listarUsuarios`, '');\r\n  }\r\n\r\n  //#endregion\r\n\r\n\r\n  //#region FUNCIONES INTERNAS\r\n\r\n  // Funcion que nos guardara el token en el localStorage del navegador\r\n  private guardarToken(id: string, token: string, expiresIn: string): void {\r\n    localStorage.setItem('TokenDeAcceso', token);\r\n    localStorage.setItem('ExpiracionToken', expiresIn);\r\n  }\r\n\r\n  //#endregion\r\n\r\n}\r\n","import { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Injectable } from '@angular/core';\r\nimport { JsonWebToken } from '../modelos/jsonWebToken';\r\n\r\n@Injectable()\r\nexport class LocalService {\r\n\r\n    // Variable para descifrar token\r\n    jwtHelper: JwtHelperService = new JwtHelperService();\r\n\r\n    // Creamos token\r\n    private token: string;\r\n\r\n    constructor(\r\n    ) {\r\n\r\n    }\r\n\r\n    //#region FUNCIONES\r\n\r\n    // Funcion que nos eliminara el token del localStorage del navegador\r\n    borrarToken(): void {\r\n        this.token = '';\r\n        localStorage.removeItem('TokenDeAcceso');\r\n        localStorage.removeItem('ExpiracionToken');\r\n    }\r\n\r\n    // Comprobamos si el usuario esta autentificado si esta el token el el storage\r\n    public comprobarAutentificacion(): boolean {\r\n        // tslint:disable-next-line: semicolon\r\n        return localStorage.getItem('TokenDeAcceso') !== null && localStorage.getItem('ExpiracionToken') !== null\r\n    }\r\n\r\n    // Nos devolvera el token guardado en localstorage\r\n    public getToken(): string {\r\n        return localStorage.getItem('TokenDeAcceso');\r\n    }\r\n\r\n    // Nos devolvera la expiracion del token guardado en localstorage\r\n    public getExpiracionToken(): string {\r\n        return localStorage.getItem('ExpiracionToken');\r\n    }\r\n\r\n    // Desciframos los datos del token\r\n    public getTokenData(): JsonWebToken {\r\n        const t = this.getToken();\r\n        if (t) {\r\n            const token = this.jwtHelper.decodeToken(t);\r\n            return {\r\n                id: token.id,\r\n                nombre: token.nombre,\r\n                dni: token.dni,\r\n                acceso: token.acceso\r\n            };\r\n        } else {\r\n            return {} as JsonWebToken;\r\n        }\r\n    }\r\n\r\n    // Devolvemos acceso del usuario\r\n    public getAccesoUsuario(): string {\r\n        const token = this.getTokenData();\r\n        return token.acceso;\r\n    }\r\n    // Devolvemos acceso del usuario\r\n    public getIdUsuario(): string {\r\n        const token = this.getTokenData();\r\n        return token.id;\r\n    }\r\n\r\n    //#endregion\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Tabla, Tablas } from '../modelos/tabla';\r\nimport { LocalService } from './localService';\r\nimport { AutentificacionService } from './autentificacionService';\r\n\r\n@Injectable()\r\nexport class TablasService {\r\n\r\n  // Direccones de servidor de back\r\n  local = 'http://localhost:3000';\r\n  heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n  ServidorBACKEND = this.local;\r\n  authSubject = new BehaviorSubject(false);\r\n\r\n  // Creamos token\r\n  private token: string;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private autentificacionService: AutentificacionService, // Servicio para interactuar con API autentificacion\r\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\r\n  ) {\r\n\r\n  }\r\n\r\n  //#region FUNCIONES INTERACTUAR CON API\r\n\r\n  // Funcion para guardar en base de datos nueva tabla\r\n  crearTabla(tabla: Tabla) {\r\n    // Creamos una variable con la tabla para crear un padre al json de la tabla llamado \"tabla\" y poder buscar mejor con la api\r\n    const nuevaTabla = ({\r\n      tabla\r\n    });\r\n    return this.httpClient.post(`${this.ServidorBACKEND}/crearTabla`, nuevaTabla).subscribe(data => {\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  // Buscamos los usuarios registrados en la base de datos y devolvemos nombre y id\r\n  public listarTablasUsuario(idUsuario): Observable<Tablas> {\r\n    return this.httpClient.post<Tablas>(`${this.ServidorBACKEND}/listarTablasUsuario`, { idUsuario });\r\n  }\r\n\r\n  // Buscamos la tabla con la api en la base de datos\r\n  public buscarTabla(idTabla): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/buscarTabla`, { idTabla });\r\n  }\r\n\r\n  //#endregion\r\n\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}