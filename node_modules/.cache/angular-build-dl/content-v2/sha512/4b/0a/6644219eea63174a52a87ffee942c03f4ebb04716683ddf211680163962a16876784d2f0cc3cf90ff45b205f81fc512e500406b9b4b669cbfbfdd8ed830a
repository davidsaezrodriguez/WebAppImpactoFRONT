{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/componentes/adicionales/buscador/buscador.component.ts","./src/app/componentes/adicionales/buscador/buscador.component.html","./src/app/componentes/clases/clases.component.ts","./src/app/componentes/clases/clases.component.html","./src/app/componentes/dietas/dietas.component.ts","./src/app/componentes/dietas/dietas.component.html","./src/app/componentes/ejercicios/crear-ejercicios/crear-ejercicios.component.ts","./src/app/componentes/ejercicios/crear-ejercicios/crear-ejercicios.component.html","./src/app/componentes/ejercicios/ejercicios.component.ts","./src/app/componentes/ejercicios/ejercicios.component.html","./src/app/componentes/ejercicios/visualizar-ejercicios/detalles-ejercicio/detalles-ejercicio.component.ts","./src/app/componentes/ejercicios/visualizar-ejercicios/detalles-ejercicio/detalles-ejercicio.component.html","./src/app/componentes/ejercicios/visualizar-ejercicios/visualizar-ejercicios.component.ts","./src/app/componentes/ejercicios/visualizar-ejercicios/visualizar-ejercicios.component.html","./src/app/componentes/footer/footer.component.ts","./src/app/componentes/footer/footer.component.html","./src/app/componentes/login/login.component.ts","./src/app/componentes/login/login.component.html","./src/app/componentes/menu/menu.component.ts","./src/app/componentes/menu/menu.component.html","./src/app/componentes/navbar/navbar.component.ts","./src/app/componentes/navbar/navbar.component.html","./src/app/componentes/seguimiento/seguimiento.component.ts","./src/app/componentes/seguimiento/seguimiento.component.html","./src/app/componentes/tablas/crear-tablas/crear-tablas.component.ts","./src/app/componentes/tablas/crear-tablas/crear-tablas.component.html","./src/app/componentes/tablas/tablas.component.ts","./src/app/componentes/tablas/tablas.component.html","./src/app/componentes/tablas/visualizar-tablas/visualizar-tablas.component.ts","./src/app/componentes/tablas/visualizar-tablas/visualizar-tablas.component.html","./src/app/componentes/usuarios/crear-usuario/crear-usuario.component.ts","./src/app/componentes/usuarios/crear-usuario/crear-usuario.component.html","./src/app/componentes/usuarios/datos-usuario/datos-usuario.component.ts","./src/app/componentes/usuarios/datos-usuario/datos-usuario.component.html","./src/app/componentes/usuarios/usuarios.component.ts","./src/app/componentes/usuarios/usuarios.component.html","./src/app/servicios/AuthInteceptor.ts","./src/app/servicios/ejerciciosService.ts","./src/app/servicios/localService.ts","./src/app/servicios/tablasService.ts","./src/app/servicios/usuariosService.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './componentes/login/login.component';\r\nimport { MenuComponent } from './componentes/menu/menu.component';\r\nimport { TablasComponent } from './componentes/tablas/tablas.component';\r\nimport { CrearTablasComponent } from './componentes/tablas/crear-tablas/crear-tablas.component';\r\nimport { VisualizarTablasComponent } from './componentes/tablas/visualizar-tablas/visualizar-tablas.component';\r\nimport { UsuariosComponent } from './componentes/usuarios/usuarios.component';\r\nimport { CrearUsuarioComponent } from './componentes/usuarios/crear-usuario/crear-usuario.component';\r\nimport { DatosUsuarioComponent } from './componentes/usuarios/datos-usuario/datos-usuario.component';\r\nimport { EjerciciosComponent } from './componentes/ejercicios/ejercicios.component';\r\nimport { DietasComponent } from './componentes/dietas/dietas.component';\r\nimport { SeguimientoComponent } from './componentes/seguimiento/seguimiento.component';\r\nimport { ClasesComponent } from './componentes/clases/clases.component';\r\nimport { VisualizarEjerciciosComponent } from './componentes/ejercicios/visualizar-ejercicios/visualizar-ejercicios.component';\r\nimport { DetallesEjercicioComponent } from './componentes/ejercicios/visualizar-ejercicios/detalles-ejercicio/detalles-ejercicio.component';\r\nimport { CrearEjerciciosComponent } from './componentes/ejercicios/crear-ejercicios/crear-ejercicios.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'menu',\r\n    component: MenuComponent,\r\n  },\r\n  {\r\n    path: 'tablas',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: TablasComponent,\r\n      },\r\n      {\r\n        path: 'crear/:idUsuario',\r\n        component: CrearTablasComponent,\r\n      },\r\n      {\r\n        path: 'visualizar/:idTabla',\r\n        component: VisualizarTablasComponent,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'ejercicios',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: EjerciciosComponent,\r\n      },\r\n      {\r\n        path: 'crear',\r\n        component: CrearEjerciciosComponent,\r\n      },\r\n      {\r\n        path: 'visualizar-ejercicios/:zona',\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: VisualizarEjerciciosComponent,\r\n          },\r\n          {\r\n            path: 'detalles-ejercicio/:idEjercicio',\r\n            component: DetallesEjercicioComponent,\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'dietas',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: DietasComponent,\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'seguimiento',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: SeguimientoComponent,\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'clases',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ClasesComponent,\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'usuarios',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: UsuariosComponent,\r\n      },\r\n      {\r\n        path: 'crearUsuario',\r\n        component: CrearUsuarioComponent,\r\n      },\r\n      {\r\n        path: 'datosUsuario/:idUsuario',\r\n        component: DatosUsuarioComponent,\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { LocalService } from './servicios/localService';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(\r\n    private localService: LocalService // Servicio para recuperar datos del localstorage\r\n  ) {\r\n\r\n  }\r\n\r\n  // tslint:disable-next-line: use-lifecycle-interface\r\n  ngOnInit(): void {\r\n    if (!this.localService.comprobarAutentificacion()) {\r\n      this.localService.cerrarSesion();\r\n    }\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"content\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './componentes/login/login.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UsuariosService } from './servicios/usuariosService';\r\nimport { MenuComponent } from './componentes/menu/menu.component';\r\nimport { FooterComponent } from './componentes/footer/footer.component';\r\nimport { NavbarComponent } from './componentes/navbar/navbar.component';\r\nimport { TablasComponent } from './componentes/tablas/tablas.component';\r\nimport { BuscadorComponent } from './componentes/adicionales/buscador/buscador.component';\r\nimport { CrearTablasComponent } from './componentes/tablas/crear-tablas/crear-tablas.component';\r\nimport { VisualizarTablasComponent } from './componentes/tablas/visualizar-tablas/visualizar-tablas.component';\r\nimport { LocalService } from './servicios/localService';\r\nimport { TablasService } from './servicios/tablasService';\r\nimport { AuthInterceptor } from './servicios/AuthInteceptor';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { UsuariosComponent } from './componentes/usuarios/usuarios.component';\r\nimport { CrearUsuarioComponent } from './componentes/usuarios/crear-usuario/crear-usuario.component';\r\nimport { DatosUsuarioComponent } from './componentes/usuarios/datos-usuario/datos-usuario.component';\r\nimport { EjerciciosComponent } from './componentes/ejercicios/ejercicios.component';\r\nimport { DietasComponent } from './componentes/dietas/dietas.component';\r\nimport { SeguimientoComponent } from './componentes/seguimiento/seguimiento.component';\r\nimport { ClasesComponent } from './componentes/clases/clases.component';\r\nimport { VisualizarEjerciciosComponent } from './componentes/ejercicios/visualizar-ejercicios/visualizar-ejercicios.component';\r\nimport { DetallesEjercicioComponent } from './componentes/ejercicios/visualizar-ejercicios/detalles-ejercicio/detalles-ejercicio.component';\r\nimport { EjerciciosService } from './servicios/ejerciciosService';\nimport { CrearEjerciciosComponent } from './componentes/ejercicios/crear-ejercicios/crear-ejercicios.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    MenuComponent,\r\n    FooterComponent,\r\n    NavbarComponent,\r\n    TablasComponent,\r\n    BuscadorComponent,\r\n    CrearTablasComponent,\r\n    VisualizarTablasComponent,\r\n    UsuariosComponent,\r\n    CrearUsuarioComponent,\r\n    DatosUsuarioComponent,\r\n    EjerciciosComponent,\r\n    DietasComponent,\r\n    SeguimientoComponent,\r\n    ClasesComponent,\r\n    VisualizarEjerciciosComponent,\r\n    DetallesEjercicioComponent,\r\n    CrearEjerciciosComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot()\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    UsuariosService,\r\n    LocalService,\r\n    TablasService,\r\n    EjerciciosService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","\nimport { Component, OnInit, EventEmitter, ElementRef, ViewChild, Output, Input, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\nexport interface ConfiguracionBuscador {\n  values: any[];\n  selected: any;\n  filter: string;\n  placeholder: string;\n  empty: string;\n  fontSize: string;\n  fontColor: string;\n  inputClass?: string;\n  render: (object) => string;\n}\n\n// tslint:disable no-input-rename no-output-rename component-selector\n\n@Component({\n\n  selector: 'buscador-component',\n  templateUrl: './buscador.component.html',\n  styleUrls: ['./buscador.component.scss']\n})\nexport class BuscadorComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Config que recibimos del padre para la configuracion del componente\n  @Input('config') config: ConfiguracionBuscador;\n\n  // Valor que emitimos al padre (objeto seleccionado de la lista)\n  @Output('selected') selected: EventEmitter<object> = new EventEmitter();\n\n  // Modal en el que mostramos la lista\n  @ViewChild('autocompleteList') autocompleteList: ElementRef;\n\n  // openModal = controla el abrir y cerrar el modal\n  openModal = false;\n\n  // dirtyInput = controla si escribo en el input (si escribo y al seleccionar selecciono fuera borro el input y emito un null)\n  dirtyInput = false;\n\n  // inputLoader = no se esta usando, era para mostrar simbolo de \"cargando\" en input, se añade al listado, con la variable listLoader\n  inputLoader = false;\n\n  // listLoader = muestra el simbolo de \"cargando\" en el listado\n  listLoader = false;\n\n  form: FormGroup;\n  listObjects: any[] = [];\n\n  //#endregion\n\n  constructor(\n    private fb: FormBuilder,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n    this.setForm();\n\n    if (this.config.selected) {\n      this.form.controls.input.setValue(this.getFilterValue(this.config.selected));\n    }\n    this.setFormListeners();\n  }\n  private setForm() {\n    this.form = this.fb.group({\n      input: new FormControl(''),\n    });\n\n  }\n\n  //#region FUNCIONES\n  private setFormListeners() {\n    if (this.form) {\n      this.form.controls.input.valueChanges.subscribe(() => {\n        this.listLoader = true;\n        this.dirtyInput = true;\n        this.openModal = true;\n      });\n      this.form.controls.input.valueChanges.subscribe(data => {\n        this.filterObjects(data);\n      });\n    }\n  }\n\n\n  // Metodos para filtrar las palabras y que no haya problemas al realizar la busqueda\n  private getFilterValue(item: object): string {\n    const property = item[this.config.filter];\n    if (typeof (property) === 'function') {\n      return property.call(item);\n    }\n    return property;\n  }\n\n  private filterObjects(search: string) {\n    this.listObjects = this.config.values.filter(object => {\n      if (this.getFilterValue(object) && typeof search === 'string') {\n        const name = this.getFilterValue(object)\n          .toLowerCase()\n          .replace('á', 'a').replace('é', 'e')\n          .replace('ì', 'i').replace('ó', 'o')\n          .replace('ú', 'u');\n        return name.includes(\n          search.toLocaleLowerCase()\n            .replace('á', 'a').replace('é', 'e')\n            .replace('ì', 'i').replace('ó', 'o')\n            .replace('ú', 'u')\n        );\n      }\n    });\n\n    this.listLoader = false;\n    if (this.listObjects.length > 10) {\n      this.autocompleteList.nativeElement.style.height = '200px';\n    } else if (this.listObjects.length === 0) {\n      this.autocompleteList.nativeElement.style.height = '28px';\n    } else {\n      this.autocompleteList.nativeElement.style.height = (this.listObjects.length * 28) + 'px';\n    }\n  }\n\n  showAutocomplete() {\n    this.filterObjects(this.form.controls.input.value);\n    this.openModal = true;\n  }\n\n  // Este metodo cierra el modal\n  // Si selecciono un elemento (evento click): relleno el valor y lo emito\n  // Si no selecciono un elemento (evento blur, hago click fuera de la lista) y el input ha sido editado: limpio el campo y emito un null\n  selectObject(object) {\n    if (this.openModal) {\n      if (object) {\n        this.form.controls.input.setValue(this.getFilterValue(object), { emitEvent: false });\n        this.form.controls.input.markAsDirty();\n        this.dirtyInput = false;\n        this.selected.emit(object);\n      } else if (this.dirtyInput) {\n        this.clearInput(false);\n        this.dirtyInput = false;\n        this.selected.emit(object);\n      }\n      this.openModal = false;\n    }\n  }\n\n  // Limpiamos el input\n  clearInput(isNew) {\n    this.form.controls.input.setValue('', { emitEvent: false });\n    if (isNew) {\n      this.form.controls.input.markAsPristine();\n    }\n  }\n  //#endregion\n}\n","<div [formGroup]=\"form\" [class.has-error]=\"form.controls['input'].invalid && form.controls['input'].dirty\"\n    [class.has-success]=\"form.controls['input'].valid && form.controls['input'].dirty\">\n    <label class=\"formBuscar col-md-12\">\n        <span class=\"icon\"><i class=\"fa fa-search\"></i></span>\n        <input class=\"form-control col-md-11\" type=\"search\" placeholder=\"Buscar usuario\" id=\"buscarUsuario\" autocomplete=\"off\"\n            formControlName=\"input\" (mousedown)=\"showAutocomplete()\" (blur)=\"selectObject(null)\" type=\"text\"\n            [attr.placeholder]=\"inputLoader ? '' : config.placeholder\" class=\"form-control {{config.inputClass}}\">\n    </label>\n    <div #autocompleteList class=\"form-control autocomplete \" [class.hide]=\"!openModal\">\n        <ng-container *ngIf=\"!listLoader\">\n            <p *ngFor=\"let object of listObjects\" (mousedown)=\"selectObject(object)\">\n                {{config.render(object)}}\n            </p>\n            <p *ngIf=\"listObjects.length == 0\"><strong>{{config.empty}}</strong></p>\n        </ng-container>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-clases',\n  templateUrl: './clases.component.html',\n  styleUrls: ['./clases.component.scss']\n})\nexport class ClasesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>clases works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dietas',\n  templateUrl: './dietas.component.html',\n  styleUrls: ['./dietas.component.scss']\n})\nexport class DietasComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dietas works!</p>\n","import {HttpClient} from '@angular/common/http';\nimport { FormControl, Validators } from '@angular/forms/';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { EjercicioEjemplo } from 'src/app/modelos/ejercicioEjemplo';\nimport { EjerciciosService } from 'src/app/servicios/ejerciciosService';\n\n@Component({\n  selector: 'app-crear-ejercicios',\n  templateUrl: './crear-ejercicios.component.html',\n  styleUrls: ['./crear-ejercicios.component.scss']\n})\nexport class CrearEjerciciosComponent implements OnInit {\n  //#region VARIABLES\n\n  // Formulario\n  formNuevoEjercicio: FormGroup;\n\n  // Ejercicio nuevo que mandaremos a guardar con api\n  ejercicio: EjercicioEjemplo;\n\n  // Variable donde guardamos URL de la imagen que subimos\n  nombreImagen;\n\n  // Variable donde guardamos imagen que subimos\n  imagen: File;\n  //#endregion\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private httpClient: HttpClient,\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private ejerciciosService: EjerciciosService // Servicio con el que mandamos a api el ejercicio nuevo\n  ) {\n    this.setformNuevaTabla();\n  }\n\n\n  ngOnInit(): void {\n  }\n\n  //#region FUNCIONES\n\n  private setformNuevaTabla() {\n    this.formNuevoEjercicio = this.formBuilder.group({\n      nombre: new FormControl(null, Validators.required),\n      zona: new FormControl(null, Validators.required),\n      explicacion: new FormControl(null, Validators.required),\n      consejos: new FormControl(null, Validators.required),\n      imagen: new FormControl(null, Validators.required),\n      video: new FormControl(null, Validators.required),\n    });\n  }\n\n  // Funcion con la que cogemos nombre de imagen del file y añadimos la ruta donde la guardaremos para mandar a api\n  fileChange(element) {\n    this.nombreImagen = element.target.files[0].name;\n    this.imagen = element.target.files[0];\n  }\n\n  guardarImagen(imagen) {\n\n    console.log(imagen.name);\n\n    const formData = new FormData();\n    formData.append('file', imagen);\n\n    console.log(formData)\n    this.ejerciciosService.guardarImagen(formData).subscribe(res => {\n      console.log(res);\n    });\n\n\n  }\n\n  // Funcion guardamos ejercicio y mandamos con servicio a la api para guardar en BBDD\n  guardarEjercicio() {\n    this.guardarImagen(this.imagen);\n    this.ejercicio = ({\n      nombre: this.formNuevoEjercicio.controls.nombre.value,\n      zona: this.formNuevoEjercicio.controls.zona.value,\n      explicacion: this.formNuevoEjercicio.controls.explicacion.value,\n      consejos: this.formNuevoEjercicio.controls.consejos.value,\n      imagen: this.nombreImagen,\n      video: this.formNuevoEjercicio.controls.video.value,\n    });\n\n    console.log(this.ejercicio);\n    // Mandamos tabla con api a la bbdd\n    this.ejerciciosService.crearEjercicio(this.ejercicio).subscribe(res => {\n      // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n      this.toastr.success('', 'Ejercicio creado correctamente', {\n        timeOut: 3000,\n      });\n      this.router.navigate(['/ejercicios']);\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al crear ejercicio');\n    });\n  }\n\n  //#endregion\n\n}\n","<section class=\"container pt-4\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12 \">\n            <h2 class=\"text-center\"> Creacion de nuevo ejercicio</h2>\n        </div>\n        <div class=\"col-sm-10 pt-4\" [formGroup]=\"formNuevoEjercicio\" enctype=\"multipart/form-data\">\n            <label class=\"col-sm-12 col-md-6 control-label text-left \">\n                Nombre del ejercicio\n                <input type=\"text\" class=\"form-control\" formControlName=\"nombre\">\n            </label>\n            <label class=\"col-sm-12 col-md-6 control-label text-left \">\n                Zona del cuerpo al que pertenece\n                <select class=\"form-control\" formControlName=\"zona\">\n                    <option value=\"1\">Pecho</option>\n                    <option value=\"2\">Espalda</option>\n                    <option value=\"3\">Pierna</option>\n                    <option value=\"4\">Hombro</option>\n                    <option value=\"5\">Brazo</option>\n                    <option value=\"6\">Abdomen</option>\n                  </select>\n            </label>\n            <label class=\"col-sm-12 col-md-6 control-label text-left \">\n                Imagen ejemplo del ejercicio\n                <input type=\"file\" class=\"custom-file-input\" id=\"inputImagen\"  lang=\"es\" formControlName=\"imagen\" (change)=\"fileChange($event)\">\n                <label class=\"custom-file-label subirImagen\" >Seleccionar Archivo</label>\n            </label>\n            <label class=\"col-sm-12 col-md-6 control-label text-left video\">\n                URL Video Youtube \n                <input type=\"text\" class=\"form-control\" formControlName=\"video\">\n            </label>\n            <label class=\"col-sm-12 ontrol-label text-left \">\n                Explicacion\n                <textarea class=\"form-control\" formControlName=\"explicacion\" rows=\"3\"></textarea>\n            </label>\n            <label class=\"col-sm-12  control-label text-left \">\n                Consejos\n                <textarea class=\"form-control\" formControlName=\"consejos\" rows=\"3\"></textarea>\n            </label>\n\n            <div class=\"d-flex justify-content-center p-3\">\n                <button type=\"submit\" class=\"btn botonGuardarEjercicio col-sm-12\" (click)=\"guardarEjercicio()\">\n                    <i class=\"fas fa-save\"></i>Guardar ejercicio\n                </button>\n            </div>\n\n        </div>\n    </div>\n\n\n\n</section>","import { Component, OnInit } from '@angular/core';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-ejercicios',\n  templateUrl: './ejercicios.component.html',\n  styleUrls: ['./ejercicios.component.scss']\n})\nexport class EjerciciosComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Array donde almacenamos las tablas que nos devuelve la api para el usuario seleccionado o logeado\n  tablasUsuario: [] = [];\n\n  // Nivel de acceso de usuario logeado\n  acceso = this.localService.getAccesoUsuario();\n\n  // Id de usuario logeado\n  idUsuario = null;\n\n  //#endregion\n\n  constructor(\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"col-sm-12 pt-4\">\n    <div class=\"row\" *ngIf=\"acceso == '1'\">  \n        <div class=\"col-sm-12 d-flex justify-content-center\">\n            <div class=\"col-md-4 pt-5\">\n               \n            </div>\n        </div>\n    </div>\n    <div class=\"row d-flex justify-content-center \">\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','1']\">\n            <i class=\"fas fa-calendar-alt fa-4x\"></i>\n            <h4 class=\"col-sm-12\"> Pecho</h4>\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','2']\">\n            <i class=\"fas fa-calendar-alt fa-4x\"></i>\n            <h4 class=\"col-sm-12\"> Espalda</h4>\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','3']\">\n            <i class=\"fas fa-calendar-alt fa-4x\"></i>\n            <h4 class=\"col-sm-12\"> Pierna</h4>\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','4']\">\n            <i class=\"fas fa-calendar-alt fa-4x\"></i>\n            <h4 class=\"col-sm-12\"> Hombro</h4>\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','5']\">\n            <i class=\"fas fa-calendar-alt fa-4x\"></i>\n            <h4 class=\"col-sm-12\"> Brazo</h4>\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','6']\">\n            <i class=\"fas fa-calendar-alt fa-4x\"></i>\n            <h4 class=\"col-sm-12\"> Abdomen</h4>\n        </div>\n        <div class=\"col-sm-12 col-md-6 tarjeta row \"  [routerLink]=\"['/ejercicios/crear']\"  *ngIf=\"acceso == '1'\">\n            <i class=\"fas fa-plus-square fa-4x\"></i>\n            <h4 class=\"col-sm-12\">Añadir ejercicio</h4>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { EjercicioEjemplo } from 'src/app/modelos/ejercicioEjemplo';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { EjerciciosService } from 'src/app/servicios/ejerciciosService';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'app-detalles-ejercicio',\n  templateUrl: './detalles-ejercicio.component.html',\n  styleUrls: ['./detalles-ejercicio.component.scss']\n})\nexport class DetallesEjercicioComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Variable donde guardamos idEjercicio que nos mandamos por url \n  idEjercicio;\n\n  // Objeto ejercicio donde guardamos ejercicio a mostrar que nos devolvera la api\n  ejercicio: EjercicioEjemplo;\n\n  //#endregion\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor zona que nos manda el componente ejercicios\n    private ejerciciosService: EjerciciosService, // Servicio para gestionar ejercicios con api\n    private _sanitizer: DomSanitizer // Utilizaremos este servicio para añadir video si el ejemplo lo tuviera\n\n  ) { }\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idEjercicio = params.idEjercicio;\n      }\n    );\n    this.ejerciciosService.buscarEjercicio(this.idEjercicio).subscribe(data => {\n      // Cogemos el unico valor que nos devuelven en data ya que al buscar 1 ejercicio por id solo hay uno\n      this.ejercicio = data[0];\n\n    });\n  }\n\n  //#region FUNCIONES\n  \n  getVideoIframe(url) {\n    let video;\n    let results;\n    if (url === null) {\n      return '';\n    }\n    results = url.match('[\\\\?&]v=([^&#]*)');\n    video = (results === null) ? url : results[1];\n    return this._sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + video);\n  }\n\n\n  //#endregion\n\n}\n","<section class=\"col-sm-12 pt-4\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12 col-md-8 tarjeta row \" *ngIf=\"ejercicio\">\n            <h2 class=\"col-sm-12 text-center\"> {{ejercicio.nombre}}</h2>\n            <div class=\"col-sm-12 col-md-6 informacion\">\n                <h4>Explicación:</h4>\n                <p> {{ejercicio.explicacion}}</p>\n                <h4>Observaciones:</h4>\n                <p>{{ejercicio.consejos}}</p>\n            </div>\n            <div class=\"col-sm-12 col-md-6 imagen\">\n                <img src=\"assets/imagenes/ejercicios/{{ejercicio.imagen}}\" class=\"img-fluid\">\n            </div>\n            <div class=\"col-sm-12 video\" *ngIf=\"ejercicio.video\">\n                <iframe width=\"560\" height=\"315\" [src]=\"getVideoIframe(ejercicio.video)\" frameborder=\"0\"\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    allowfullscreen></iframe>\n\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { EjerciciosService } from 'src/app/servicios/ejerciciosService';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { EjercicioEjemplo } from 'src/app/modelos/ejercicioEjemplo';\n\n@Component({\n  selector: 'app-visualizar-ejercicios',\n  templateUrl: './visualizar-ejercicios.component.html',\n  styleUrls: ['./visualizar-ejercicios.component.scss']\n})\nexport class VisualizarEjerciciosComponent implements OnInit {\n\n  //#region \n\n  // Variable de la zona que corresponden ejercicios, recogida de url\n  zona;\n\n  // Array donde almacenamos ejercicios de la zona correspondiente\n  ejerciciosZona: EjercicioEjemplo[] = [];\n\n  //#endregion\n\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor zona que nos manda el componente ejercicios\n    private ejerciciosService: EjerciciosService, // Servicio para gestionar ejercicios con api\n  ) { }\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.zona = params.zona;\n      }\n    );\n    this.ejerciciosService.listarEjerciciosZona(this.zona).subscribe(data => {\n      this.ejerciciosZona = data;\n    });\n  }\n\n  //#region FUNCIONES\n\n\n\n\n  //#endregion\n\n\n}\n","<section class=\"col-sm-12 pt-4\">\n    <div class=\"row d-flex justify-content-center\" >\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" *ngFor=\"let ejercicio of ejerciciosZona\" [routerLink]=\"['detalles-ejercicio',ejercicio._id]\">\n            <h4 class=\"col-sm-12\"> {{ejercicio.nombre}}</h4>\n            <img src=\"assets/imagenes/ejercicios/{{ejercicio.imagen}}\" class=\"img-fluid p-4\">\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"navbar navbar-fixed-bottom\">\n      <div class=\"row col-12 iconos\">\n            <!-- Facebook -->\n            <a class=\"fb-ic\" href=\"https://www.facebook.com/GimansioImpactoLaguna\">\n              <i class=\"fab fa-facebook m-2 fa-2x\"> </i>\n            </a>\n            <!--Instagram-->\n            <a class=\"ins-ic\" href=\"https://www.instagram.com/impactolaguna\">\n              <i class=\"fab fa-instagram  m-2 fa-2x\"> </i>\n            </a>\n      </div>\n    <div class=\"footer-copyright text-center py-1 col-12\">© 2020 Impacto Laguna</div>\n</footer>\n","import { Component, OnInit, ɵConsole } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { FormBuilder, Validators, FormControl, FormGroup } from '@angular/forms';\nimport { NavbarComponent } from '../navbar/navbar.component';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Formulario\n  public formLogin: FormGroup;\n\n  //#endregion\n\n\n  constructor(\n    private usuariosService: UsuariosService,\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService // Servicio que nos creara notificaciones\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogeado();\n    this.setFormLogin();\n  }\n\n  //#region FUNCIONES\n\n  // FORMULARIOS\n  private setFormLogin() {\n    this.formLogin = this.formBuilder.group({\n      dni: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n    });\n  }\n\n  // Funcion donde mandamos usuario logeado en el formulario al servicio que nos autentifica al usuario y mandamos a menus si es valido\n  accederApp(): void {\n    const dni = this.formLogin.controls.dni.value;\n    const password = this.formLogin.controls.password.value;\n\n    this.usuariosService.loginUsuario(dni, password).subscribe(res => {\n      // Si se el login es correcto\n      NavbarComponent.updateUserStatus.next(true); // here!\n      this.router.navigate(['/menu']);\n    }, err => {\n      this.toastr.error('Contraseña incorrecta');\n    });\n  }\n\n  // Comprobamos hay algun usuario ya logeado y si es que si mandamos a menu directamente\n  usuarioLogeado() {\n    if (this.localService.comprobarAutentificacion()) {\n      this.router.navigate(['/menu']);\n    }\n  }\n\n  //#endregion\n\n\n}\n","<section class=\"d-flex justify-content-center align-items-center h-100\">\n\t<div class=\"card\">\n\t\t<div class=\"card-header\">\n\t\t\t<h3>Login</h3>\n\t\t\t<div class=\"d-flex justify-content-end social_icon\">\n\t\t\t\t<span> <a class=\"fb-ic\" href=\"https://www.facebook.com/GimansioImpactoLaguna\"><i\n\t\t\t\t\t\t\tclass=\"fab fa-facebook-square\"></i></a></span>\n\t\t\t\t<span><a class=\"ins-ic\" href=\"https://www.instagram.com/impactolaguna\"><i\n\t\t\t\t\t\t\tclass=\"fab fa-instagram-square\"></i></a></span>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"card-body\">\n\t\t\t<div class=\"col-xs-12 col-sm-12\" [formGroup]=\"formLogin\" class=\"login-container\">\n\t\t\t\t<div class=\"input-group form-group\">\n\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input type=\"text\" class=\"form-control input-sm\" formControlName=\"dni\" placeholder=\"DNI\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"input-group form-group\">\n\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input type=\"password\" class=\"form-control input-sm\" formControlName=\"password\"\n\t\t\t\t\t\tplaceholder=\"Contraseña\">\n\t\t\t\t</div>\n\t\t\t\t<button (click)=\"accederApp()\" type=\"button\" class=\"btn float-right login_btn\">\n\t\t\t\t\tACCEDER\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  //#region VARIABLES\n\n  public nivelAcceso = this.localService.getAccesoUsuario();\n\n  //#endregion\n\n  constructor(\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n\n  ) { }\n\n\n  ngOnInit(): void {\n  }\n}\n","<section>\n    <div class=\"col-sm-7\">\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-md tarjeta row \"  [routerLink]=\"['/tablas']\"  *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '2') || (nivelAcceso == '5')  || (nivelAcceso == '6')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/tablas.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Tablas</h3>\n            </div>\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/ejercicios']\" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '2') || (nivelAcceso == '5')  || (nivelAcceso == '6')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/ejercicios.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Ejercicios</h3>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/dietas']\" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '3') || (nivelAcceso == '5')  || (nivelAcceso == '7')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/dietas.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Dietas</h3>\n            </div>\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/seguimiento']\" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '3') || (nivelAcceso == '5')  || (nivelAcceso == '7')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/seguimiento.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Seguimiento</h3>\n            </div>\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/clases']\" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '4') || (nivelAcceso == '6')  || (nivelAcceso == '7')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/clases.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Clases</h3>\n            </div>\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/usuarios']\"  *ngIf=\"nivelAcceso == ('1')\">\n                <img src=\"/assets/imagenes/usuarios.png\" alt=\"Acceso a usuarios\">\n                <h3 class=\"col-sm-12\">Usuarios</h3>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n\n\n  // #region VARIABLES\n\n  // Utiliaremos para actualizar nombre de usuario al logear\n  public static updateUserStatus: Subject<boolean> = new Subject();\n\n  // Var para comprobar si la nav esta expandida o no\n  navExpandida = false;\n\n  // Datos de usuario logeado\n  usuarioLogeado;\n\n  //#endregion\n\n  constructor(\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private router: Router,\n  ) {\n    // Hacemos que se actualize cuando usuario se logee\n    NavbarComponent.updateUserStatus.subscribe(res => {\n      this.usuarioLogeado = this.localService.getTokenData();\n    });\n  }\n\n  ngOnInit(): void {\n    this.actualizarUsuarioLogeado();\n  }\n\n  //#region FUNCIONES\n\n  // Funcion con la que expandimos y cerramos el navbar para desplegar las opciones en la version movil\n  expandirNav() {\n    if (screen.width < 768) {\n      if (!this.navExpandida) {\n        $('#navbar').height(370);\n\n        $('.navbarDiv').removeClass('collapse');\n        $('.navbarDiv').addClass('show');\n\n        $('.botoncolapsar').attr('aria-expanded', 'true');\n        $('.botoncolapsar').removeClass('collapsed');\n        this.navExpandida = true;\n      } else {\n        $('#navbar').height(90);\n\n        $('.navbarDiv').addClass('collapse');\n        $('.navbarDiv').removeClass('show');\n\n        $('.botoncolapsar').attr('aria-expanded', 'false');\n        $('.botoncolapsar').addClass('collapsed');\n\n        this.navExpandida = false;\n      }\n    }\n\n  }\n\n  // Funcion con la que eliminamos el token generado y cerramos sesion\n  cerrarSesion(): void {\n    this.localService.cerrarSesion();\n  }\n\n  // Comporbamos si el usuario esta logeado para mostrar menus de navbar o no\n  comprobarAutentificacion() {\n    return this.localService.comprobarAutentificacion();\n  }\n\n  // Actualizamos usuario logeado al acceder\n  actualizarUsuarioLogeado() {\n    this.usuarioLogeado = this.localService.getTokenData();\n  }\n\n  //#endregion\n}\n","<nav class=\"navbar navbar-expand-sm navbar-light\" id=\"navbar\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\" (click)=\"expandirNav()\">\n        <img src=\"/assets/imagenes/logoImpacto.png\">\n    </a>\n    <button class=\"navbar-toggler botoncolapsar collapsed\" type=\"button\" \n        (click)=\"expandirNav()\" *ngIf=\"comprobarAutentificacion()\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse navbarDiv\" id=\"navbarSupportedContent\" *ngIf=\"comprobarAutentificacion()\" >\n        <ul class=\"navbar-nav mr-auto\" (click)=\"expandirNav()\" >\n            <li class=\"nav-item \"  [routerLink]=\"['/tablas']\" [routerLinkActive]=\"'activado'\" \n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '2') || (usuarioLogeado.acceso == '5')  || (usuarioLogeado.acceso == '6')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\" >Tablas </a>\n            </li>\n            <li class=\"nav-item \" [routerLink]=\"['/ejercicios']\" [routerLinkActive]=\"'activado'\"\n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '2') || (usuarioLogeado.acceso == '5')  || (usuarioLogeado.acceso == '6')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\">Ejercicios</a>\n            </li>\n            <li class=\"nav-item \" [routerLink]=\"['/dietas']\" [routerLinkActive]=\"'activado'\"\n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '3') || (usuarioLogeado.acceso == '5')  || (usuarioLogeado.acceso == '7')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\">Dietas</a>\n            </li>\n            <li class=\"nav-item \" [routerLink]=\"['/seguimiento']\" [routerLinkActive]=\"'activado'\"\n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '3') || (usuarioLogeado.acceso == '5')  || (usuarioLogeado.acceso == '7')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\">Seguimiento</a>\n            </li>\n            <li class=\"nav-item \" [routerLink]=\"['/clases']\" [routerLinkActive]=\"'activado'\"\n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '4') || (usuarioLogeado.acceso == '6')  || (usuarioLogeado.acceso == '7')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\">Clases</a>\n            </li>\n            <li class=\"nab-item \" [routerLink]=\"['/usuarios']\" [routerLinkActive]=\"'activado'\" *ngIf=\"usuarioLogeado.acceso == '1'\">\n                <a class=\"nav-link\"  >Usuarios</a>\n            </li>\n            \n        </ul>\n        <ul class=\"navbar-nav \">\n            <li class=\"nav-item dropdown \">\n                <a class=\"nav-link dropleft-toggle \" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                    <i class=\"fas fa-user fa-2x ml-2\"></i>\n                    {{usuarioLogeado.nombre}}\n\n                </a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\"  (click)=\"expandirNav()\">\n                    <a class=\"dropdown-item\" [routerLink]=\"['/usuarios/datosUsuario',usuarioLogeado.id]\">Cambiar contraseña</a>\n                    <a class=\"dropdown-item\" href=\"/\" (click)=\"cerrarSesion()\">Cerrar sesion</a>\n                </div>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-seguimiento',\n  templateUrl: './seguimiento.component.html',\n  styleUrls: ['./seguimiento.component.scss']\n})\nexport class SeguimientoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>seguimiento works!</p>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { Tabla, Ejercicio, Dia } from 'src/app/modelos/tabla';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { TablasService } from 'src/app/servicios/tablasService';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-crear-tablas',\n  templateUrl: './crear-tablas.component.html',\n  styleUrls: ['./crear-tablas.component.scss']\n})\n\nexport class CrearTablasComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Formulario\n  formNuevaTabla: FormGroup;\n\n  // idUsuario que nos mandamos desde tablas para crear la tabla al usuario\n  idUsuario;\n\n  // Arrays donde guardaremos los ejercicios de cada dia\n  ejerciciosDia1: Array<Ejercicio> = [];\n  ejerciciosDia2: Array<Ejercicio> = [];\n  ejerciciosDia3: Array<Ejercicio> = [];\n  ejerciciosDia4: Array<Ejercicio> = [];\n  ejerciciosDia5: Array<Ejercicio> = [];\n\n  // Array donde guardaremos los dias de la tabla con sus ejercicios\n  dias: Array<Dia> = [];\n\n  // Tabla que mandaremos con la api a la bbdd\n  tabla: Tabla;\n\n  //#endregion\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor idUsuario que nos manda el componente tablas\n    private tablasService: TablasService, // Servicio para interactuar con API con TABLAS\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService // Servicio que nos creara notificaciones\n  ) {\n    this.setformNuevaTabla();\n  }\n\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idUsuario = params.idUsuario;\n      }\n    );\n  }\n\n  //#region FUNCIONES\n\n  private setformNuevaTabla() {\n    this.formNuevaTabla = this.formBuilder.group({\n      nombreTabla: new FormControl(null, Validators.required),\n      ejercicioDia1: new FormControl(null, Validators.required),\n      repeticionesDia1: new FormControl(null, Validators.required),\n      ejercicioDia2: new FormControl(null, Validators.required),\n      repeticionesDia2: new FormControl(null, Validators.required),\n      ejercicioDia3: new FormControl(null, Validators.required),\n      repeticionesDia3: new FormControl(null, Validators.required),\n      ejercicioDia4: new FormControl(null, Validators.required),\n      repeticionesDia4: new FormControl(null, Validators.required),\n      ejercicioDia5: new FormControl(null, Validators.required),\n      repeticionesDia5: new FormControl(null, Validators.required),\n    });\n  }\n\n  // Funcion que usamos para añadir los ejercicios a cada dia en su correspondiente array\n  anadirEjercicio(dia, inputEjer, inputRep) {\n    const ejercicio = ({\n      nombre: this.formNuevaTabla.get(inputEjer).value,\n      repeticiones: this.formNuevaTabla.get(inputRep).value,\n      pesoMax: ''\n    });\n    dia.push(ejercicio);\n    // Borramos inputs para añadir otro ejercicio\n    this.formNuevaTabla.get(inputEjer).setValue(null);\n    this.formNuevaTabla.get(inputRep).setValue(null);\n  }\n\n  // Funcion para borrar ejercicio del array si se quiere al dar al boton\n  borrarEjercicio(dia, i) {\n    dia.splice(i, 1);\n  }\n\n  // Funcion guardamos tabla y mandamos con servicio a la api para guardar en BBDD\n  guardarTabla() {\n    // Comporbamos si el dia tiene ejercicios y si es asi lo añadimos a los dias\n    if (this.ejerciciosDia1.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia1\n      }));\n    }\n    if (this.ejerciciosDia2.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia2\n      }));\n    }\n    if (this.ejerciciosDia3.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia3\n      }));\n    }\n    if (this.ejerciciosDia4.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia4\n      }));\n    }\n    if (this.ejerciciosDia5.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia5\n      }));\n    }\n    // Si hay dias rellenados creamos la tabla y la mandamos a la api\n    if (this.dias.length > 0) {\n      this.tabla = ({\n        usuario: this.idUsuario,\n        nombre: this.formNuevaTabla.controls.nombreTabla.value,\n        dia: this.dias\n      });\n\n      // Mandamos tabla con api a la bbdd\n      this.tablasService.crearTabla(this.tabla).subscribe(res => {\n        // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n        this.toastr.success('', 'Tabla creada correctamente', {\n          timeOut: 3000,\n        });\n        this.router.navigate(['/tablas']);\n      }, err => {\n        // Si da error lo mostramos\n        this.toastr.error('Error al crear tabla');\n      });\n    } else {\n      // Si no hay ejercicio en tabla mostramos notificacion\n      this.toastr.warning('', 'No hay ningun ejercicio en la tabla', {\n        timeOut: 3000,\n      });\n    }\n  }\n\n  //#endregion\n\n}\n","<section class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12\">\n            <h2 class=\"\"> Creacion de nueva tabla</h2>\n        </div>\n\n\n        <div class=\"col-sm-12 \" [formGroup]=\"formNuevaTabla\">\n            <label class=\"col-sm-12 control-label text-left labelNombreTabla\">\n                Nombre de la tabla\n                <input type=\"text\" class=\"form-control\" formControlName=\"nombreTabla\">\n            </label>\n            <div class=\"dia \">\n                <h3 class=\"col-sm-12 pl-0\">Dia 1</h3>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0  pl-0  \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia1\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia1\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia1,'ejercicioDia1','repeticionesDia1')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia1.valid || !formNuevaTabla.controls.repeticionesDia1.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia1; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\">\n                                    <button class=\"btn botonBorrarEjer mx-auto\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia1,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i>\n                                    </button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n\n            <div class=\"dia\">\n                <h3 class=\"col-sm-12 pl-0\">Dia 2</h3>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0 \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia2\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia2\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia2,'ejercicioDia2','repeticionesDia2')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia2.valid || !formNuevaTabla.controls.repeticionesDia2.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia2; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\"><button class=\"btn botonBorrarEjer\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia2,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i></button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n            <div class=\"dia\">\n                <h3 class=\"col-sm-12 pl-0\">Dia 3</h3>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0 \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia3\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia3\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia3,'ejercicioDia3','repeticionesDia3')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia3.valid || !formNuevaTabla.controls.repeticionesDia3.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia3; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\"><button class=\"btn botonBorrarEjer\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia3,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i></button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n            <div class=\"dia\">\n                <h3 class=\"col-sm-12 pl-0\">Dia 4</h3>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0 \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia4\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia4\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia4,'ejercicioDia4','repeticionesDia4')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia4.valid || !formNuevaTabla.controls.repeticionesDia4.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia4; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\"><button class=\"btn botonBorrarEjer\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia4,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i></button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n            <div class=\"dia\">\n                <h3 class=\"col-sm-12 pl-0\">Dia 5</h3>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0  pl-0 \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia5\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia5\">\n                </label>\n                <button type=\"submit\" class=\"btn botonAñadirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia5,'ejercicioDia5','repeticionesDia5')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia5.valid || !formNuevaTabla.controls.repeticionesDia5.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> Añadir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia5; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\"><button class=\"btn botonBorrarEjer\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia5,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i></button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-center p-3\">\n                <button type=\"submit\" class=\"btn botonGuardarTabla col-sm-12\" (click)=\"guardarTabla()\">\n                    <i class=\"fas fa-save\"></i>Guardar tabla\n                </button>\n            </div>\n\n        </div>\n\n    </div>\n\n\n</section>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { ConfiguracionBuscador } from '../adicionales/buscador/buscador.component';\nimport { Tabla } from 'src/app/modelos/tabla';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { TablasService } from 'src/app/servicios/tablasService';\n\n// tslint:disable: member-ordering\n@Component({\n  selector: 'app-tablas',\n  templateUrl: './tablas.component.html',\n  styleUrls: ['./tablas.component.scss']\n})\nexport class TablasComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Array donde almacenamos las tablas que nos devuelve la api para el usuario seleccionado o logeado\n  tablasUsuario: Tabla[] = [];\n\n  // Nivel de acceso de usuario logeado\n  acceso = this.localService.getAccesoUsuario();\n\n  // Id de usuario logeado\n  idUsuario = null;\n\n  //#endregion\n\n  constructor(\n    private usuariosService: UsuariosService, // Servicio para interactuar con API\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private tablasService: TablasService // Servicio para interactuar con API con TABLAS\n  ) {\n  }\n\n  ngOnInit(): void {\n    // Si accceso es 1 seria admin por lo que usaria el buscador para cargar tablas de usuario\n    // si es otro nivel es un usuario, cargamos sus tablas\n    if (this.acceso !== '1') {\n      this.idUsuario = this.localService.getIdUsuario();\n      this.cargarTablasUsuario(this.idUsuario);\n    } else {\n      // Cargamos los nombres de usuarios de BD en el componente de buscador\n      this.usuariosService.usuariosNivelAcceso([2, 5, 6, 8]).subscribe(data => (\n        this.configBuscador.values = data.usuarios\n      ));\n    }\n  }\n\n  //#region COMPONENTES\n\n  // Buscador de usuarios\n  configBuscador: ConfiguracionBuscador = {\n    values: [],\n    selected: null,\n    filter: 'nombre',\n    placeholder: 'Seleccione un Usuario',\n    empty: 'No hay usuarios con ese nombre',\n    fontSize: '14px',\n    fontColor: '#000000',\n    render: (value) => value.nombre\n  };\n\n  // Funcion utilizada pada cuando se selecciona usuario del autocomplete en la version admin\n  selectUsuario($event) {\n    if ($event != null) {\n      this.idUsuario = $event._id;\n      this.cargarTablasUsuario(this.idUsuario);\n    } else {\n      this.tablasUsuario = []; // Si selecciona fuera vaciamos las tablas por si se cargaron antes\n      this.idUsuario = null; // Tambien vaciamos el usuario ya que no habria ninguno seleccionado\n    }\n  }\n\n  // Buscamos con api las tablas del usuario seleccionado y las cargamos\n  cargarTablasUsuario(idUsuario) {\n    this.tablasService.listarTablasUsuario(idUsuario).subscribe(data => {\n      this.tablasUsuario = data.tablas;\n    });\n  }\n  //#endregion\n}\n","<section class=\"col-sm-12 pt-4\">\n        <div class=\"row\" *ngIf=\"acceso == '1'\">  \n            <div class=\"col-sm-12 d-flex justify-content-center\">\n                <div class=\"col-md-4 pt-5\">\n                    <buscador-component (selected)=\"selectUsuario($event)\" [config]=\"configBuscador\">\n                    </buscador-component>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row d-flex justify-content-center \">\n            <div class=\"col-sm-12 col-md-2 tarjeta row \"  [routerLink]=\"['/tablas/crear',idUsuario]\" *ngIf=\"(acceso !='1') || (acceso == '1' && idUsuario != null)\">\n                <i class=\"fas fa-plus-square fa-4x\"></i>\n                <!-- <img src=\"/assets/imagenes/prueba/image.png\" alt=\"Acceso a tablas\"> -->\n                <h4 class=\"col-sm-12\">Añadir tabla</h4>\n            </div>\n            <div class=\"col-sm-12 col-md-2 tarjeta row \" *ngFor=\"let tabla of tablasUsuario\"   [routerLink]=\"['/tablas/visualizar',tabla._id]\">\n                <i class=\"fas fa-calendar-alt fa-4x\"></i>\n                \n                <h4 class=\"col-sm-12\">{{tabla.nombre}}</h4>\n            </div>\n        </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Tabla, Tablas, CambiosPeso } from 'src/app/modelos/tabla';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { TablasService } from 'src/app/servicios/tablasService';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-visualizar-tablas',\n  templateUrl: './visualizar-tablas.component.html',\n  styleUrls: ['./visualizar-tablas.component.scss']\n})\nexport class VisualizarTablasComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // id de la tabla seleccionada que nos mandamos desde el menu de tablas\n  idTabla;\n\n  // tabla correspondiente al idTabla que nos devuelve la API\n  tabla: Tabla;\n\n  // Formulario para guardar peso maximo de ejercicio\n  formPesoMax: FormGroup;\n\n  // Array donde guardaremos los pesos maximos guardados para despues mandarlos con api a BBDD\n  cambiosPesoMax: Array<CambiosPeso> = [];\n\n  //#endregion\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor idTabla que nos manda el componente tablas\n    private usuariosService: UsuariosService, // Servicio para interactuar con API\n    private tablasService: TablasService, // Servicio para interactuar con API con TABLAS\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService // Servicio que nos creara notificaciones\n  ) {\n    this.setformPesoMax();\n  }\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idTabla = params.idTabla;\n      }\n    );\n\n    this.tablasService.buscarTabla(this.idTabla).subscribe(data => (\n      // La api nos devuelve array de tablas por lo que cogemos el primero ya que solo hay 1\n      this.tabla = ({\n        _id: data.tabla[0]._id,\n        usuario: data.tabla[0].usuario,\n        nombre: data.tabla[0].nombre,\n        dia: data.tabla[0].dia,\n      })\n    ));\n  }\n\n\n  //#region FUNCIONES\n\n  private setformPesoMax() {\n    this.formPesoMax = this.formBuilder.group({\n      pesoMax: new FormControl(null)\n    });\n  }\n\n  // Funcioon que guardara el nuevo peso al notar un cambio en el input correspondiente\n  actualizarPeso(idEjercicio, idDia) {\n    const pesoMaxActualizado = {\n      idTabla: this.idTabla,\n      idDia,\n      idEjercicio,\n      pesoMax: this.formPesoMax.controls.pesoMax.value\n    };\n    // Por cada peso guardamos un objeto en el array de cambios que luego mandaremos a la api\n    this.cambiosPesoMax.push(pesoMaxActualizado);\n  }\n\n  // Funcion con la que mandamos un array con todos los pesos cambiados a la bbdd con la api\n  actualizarPesosTabla() {\n    this.tablasService.actualizarPesoMax(this.cambiosPesoMax).subscribe(res => {\n      // Si se actualizan sin problema mandamos mensaje de todo OK\n      this.toastr.success('', 'Pesos actualizados', {\n        timeOut: 3000,\n      });\n    }, err => {\n      // Si da error lo mostramos\n        this.toastr.error('Error al actualziar pesos');\n    });\n\n    this.toastr.success('', 'Pesos actualizados', {\n      timeOut: 3000,\n    });\n    this.cambiosPesoMax = [];\n  }\n  //#endregion\n}\n\n","<section class=\"col-sm-12 \">\n    <div class=\"row d-flex justify-content-center\" *ngIf=\"tabla\">\n        <h2 class=\"col-sm-12 text-center\"> {{tabla.nombre}}</h2>\n        <div class=\"col-md-8 dia\" *ngFor=\"let dia of tabla.dia;index as i\">\n            <h3>Dia {{i+1}}</h3>\n            <div class=\"table-responsive\">\n                <table class=\"table table-dark  \">\n                    <thead class=\"thead-dark\">\n                        <tr class=\"d-flex\">\n                            <th class=\"col-4 col-md-7\">Ejercicio</th>\n                            <th class=\"col-5 col-md-3\">Repeticiones</th>\n                            <th class=\"col-3 col-md-2\">Peso Max</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let ejercicio of dia.ejercicio\" class=\"d-flex\">\n                            <td class=\"col-4 col-md-7\">{{ejercicio.nombre}}</td>\n                            <td class=\"col-5 col-md-3\">{{ejercicio.repeticiones}}</td>\n                            <td class=\"col-3 col-md-2\">\n                                <div [formGroup]=\"formPesoMax\">\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"pesoMax\"\n                                        (change)=\"actualizarPeso(ejercicio._id,dia._id)\" placeholder=\"{{ejercicio.pesoMax}}\">\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"col-sm-12 d-flex justify-content-center\">\n                <button type=\"submit\" class=\"btn botonGuardarPesos col-md-8 mx-auto\" (click)=\"actualizarPesosTabla()\"\n                    [disabled]=\"cambiosPesoMax.length==0\">\n                    <i class=\"fas fa-plus-circle\"></i> Guardar pesos nuevos\n                </button>\n            </div>\n\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { FormBuilder, Form, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Usuario } from 'src/app/modelos/usuario';\n\n@Component({\n  selector: 'app-crear-usuario',\n  templateUrl: './crear-usuario.component.html',\n  styleUrls: ['./crear-usuario.component.scss']\n})\nexport class CrearUsuarioComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Formulario del componente\n  formNuevoUsuario: FormGroup;\n\n  // Variable donde guardaremos al nuevo usuario\n  nuevoUsuario: Usuario;\n\n  //#endregion\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private usuariosService: UsuariosService // Servicio para crear el usuario\n  ) { }\n\n  ngOnInit(): void {\n    this.setformNuevoUsuario();\n  }\n\n\n  //#region FUNCIONES\n  private setformNuevoUsuario() {\n    this.formNuevoUsuario = this.formBuilder.group({\n      dniUsuario: new FormControl(null, Validators.required),\n      nombreUsuario: new FormControl(null, Validators.required),\n      accesoUsuario: new FormControl(null, Validators.required),\n      domicilioUsuario: new FormControl(null),\n      telefonoUsuario: new FormControl(null),\n    });\n  }\n\n  crearUsuario() {\n    this.nuevoUsuario = ({\n      dni: this.formNuevoUsuario.controls.dniUsuario.value,\n      nombre: this.formNuevoUsuario.controls.nombreUsuario.value,\n      password: '123456',\n      acceso: this.formNuevoUsuario.controls.accesoUsuario.value,\n      domicilio: this.formNuevoUsuario.controls.domicilioUsuario.value,\n      telefono: this.formNuevoUsuario.controls.telefonoUsuario.value,\n    });\n\n    // Mandamos tabla con api a la bbdd\n    this.usuariosService.registrarUsuario(this.nuevoUsuario).subscribe(res => {\n      // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n      this.toastr.success('', 'Usuario creado correctamente correctamente', {\n        timeOut: 3000,\n      });\n      this.router.navigate(['/usuarios']);\n    }, err => {\n      // Si da error lo mostramos\n        this.toastr.error('DNI ya registrado');\n    });\n  }\n\n  nivelAcceso() {\n    const acceso = this.formNuevoUsuario.controls.accesoUsuario.value;\n    if (acceso === '1') {\n      return 'Administrador';\n    }\n    if (acceso === '2') {\n      return 'Ejercicio';\n    }\n    if (acceso === '3') {\n      return 'Nutricion';\n    }\n    if (acceso === '4') {\n      return 'Clases';\n    }\n    if (acceso === '5') {\n      return 'Ejercicio + Nutricion';\n    }\n    if (acceso === '6') {\n      return 'Ejercicio + Clases';\n    }\n    if (acceso === '7') {\n      return 'Nutricion + Clases';\n    }\n    if (acceso === '8') {\n      return 'Ejercicio + Nutricion + Clases';\n    }\n  }\n  //#endregion\n}\n","<section class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12 text-center\">\n            <h2 class=\"\"> Creacion de nuevo usuario </h2>\n        </div>\n\n        <div class=\"col-sm-6 \" [formGroup]=\"formNuevoUsuario\">\n            <label class=\"col-sm-12 col-md-12 control-label text-left labelNombreTabla\">\n                DNI\n                <input type=\"text\" class=\"form-control\" formControlName=\"dniUsuario\">\n            </label>\n            <label class=\"control-label text-left col-sm-12 col-md-12 \"> Nombre\n                <input type=\"text\" class=\"form-control\" formControlName=\"nombreUsuario\">\n            </label>\n            <label class=\"control-label text-left col-sm-12 col-md-12\"> Domicilio\n                <input type=\"text\" class=\"form-control\" formControlName=\"domicilioUsuario\">\n            </label>\n            <label class=\"control-label text-left col-sm-12 col-md-12\"> Telefono\n                <input type=\"text\" class=\"form-control\" formControlName=\"telefonoUsuario\">\n            </label>\n            <label class=\"control-label text-left col-sm-12 col-md-12\">Nivel de acceso del usuario\n                <select class=\"form-control\" formControlName=\"accesoUsuario\">\n                    <option value=\"2\" selected >Ejercicio</option>\n                    <option value=\"3\">Nutricion</option>\n                    <option value=\"4\">Clases</option>\n                    <option value=\"5\">Ejercicio + Nutricion</option>\n                    <option value=\"6\">Ejercicio + Clases</option>\n                    <option value=\"7\">Nutricion + Clases</option>\n                    <option value=\"8\">Ejercicio + Nutricion + Clases</option>\n                    <option value=\"1\">Administrador</option>\n                </select>\n            </label>\n\n        </div>\n\n        <div class=\"row d-flex justify-content-center col-sm-12 col-md-6\">\n            <div class=\"col-sm-10 tarjeta row \">\n                <i class=\"fas fa-user fa-4x col-sm-2 text-center\"></i>\n                <div class=\"col-sm-10\">\n                    <h5 class=\"col-sm-12\">DNI: {{formNuevoUsuario.controls.dniUsuario.value}}</h5>\n                    <h5 class=\"col-sm-12\">Nombre: {{formNuevoUsuario.controls.nombreUsuario.value}}</h5>\n                    <h5 class=\"col-sm-12\">Domicilio: {{formNuevoUsuario.controls.domicilioUsuario.value}}</h5>\n                    <h5 class=\"col-sm-12\">Telefono: {{formNuevoUsuario.controls.telefonoUsuario.value}}</h5>\n                    <h5 class=\"col-sm-12\">Acceso: {{nivelAcceso()}}</h5>\n                </div>\n            </div>\n            <button type=\"submit\" class=\"btn botonCrearUsuario col-sm-6 mx-auto\" (click)=\"crearUsuario()\"\n                [disabled]=\"(!formNuevoUsuario.valid)\">\n                <i class=\"fas fa-save\"></i> Guardar usuario\n            </button>\n\n        </div>\n        <div class=\"col-sm-12 col-md-9 pt-4\">\n            <div class=\"alert alert-dark\" role=\"alert\">\n                El nuevo usuario tendra de contraseña <strong>'123456'</strong>, tendra que cambiarla cuando entre en la aplicacion\n              </div>\n        </div>\n\n\n    </div>\n</section>","import { FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { Usuario } from 'src/app/modelos/usuario';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-datos-usuario',\n  templateUrl: './datos-usuario.component.html',\n  styleUrls: ['./datos-usuario.component.scss']\n})\nexport class DatosUsuarioComponent implements OnInit {\n\n\n  //#region VARIABLES\n\n  // idUsuario del que mostramos datos\n  idUsuario;\n\n  // Variable donde guardaremos el usuario\n  usuario: Usuario;\n\n  // Formulario del componente actualizar datos\n  formActualizarDatosUsuario: FormGroup;\n\n  // Formulario del componente cambiar contraseña\n  formCambiarContrasena: FormGroup;\n\n  // Actualizando datos\n  actualizandoDatos = false;\n\n  // Acceso usuario logeado\n  usuarioLogeado = this.localService.getTokenData();\n\n  // Variable true si hay cambios en formulario datos\n  cambiosFormDatosComp = false;\n\n  //#endregion\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor idUsuario que nos manda el componente tablas\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private usuariosService: UsuariosService, // Servicio para crear el usuario\n    private localService: LocalService // Servicio para crear el usuario\n  ) { }\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idUsuario = params.idUsuario;\n      }\n    );\n    this.usuariosService.buscarUsuario(this.idUsuario).subscribe(res => {\n      this.usuario = res.usuario;\n      this.datosDeUsuarioAlFormulario();\n    });\n    this.setformActualizarDatosUsuario();\n    this.setformCambiarContrasena();\n  }\n\n  //#region FUNCIONES\n  setformActualizarDatosUsuario() {\n    this.formActualizarDatosUsuario = this.formBuilder.group({\n      dniUsuario: new FormControl(null, Validators.required),\n      nombreUsuario: new FormControl(null, Validators.required),\n      accesoUsuario: new FormControl(null, Validators.required),\n      domicilioUsuario: new FormControl(null),\n      telefonoUsuario: new FormControl(null)\n    });\n  }\n  datosDeUsuarioAlFormulario() {\n    this.formActualizarDatosUsuario.controls.dniUsuario.setValue(this.usuario.dni);\n    this.formActualizarDatosUsuario.controls.nombreUsuario.setValue(this.usuario.nombre);\n    this.formActualizarDatosUsuario.controls.accesoUsuario.setValue(this.usuario.acceso);\n    this.formActualizarDatosUsuario.controls.domicilioUsuario.setValue(this.usuario.domicilio);\n    this.formActualizarDatosUsuario.controls.telefonoUsuario.setValue(this.usuario.telefono);\n\n  }\n\n  // Funcion al detectar cambios en el formulario\n  cambiosFormDatos() {\n    this.cambiosFormDatosComp = true;\n\n  }\n  setformCambiarContrasena() {\n    this.formCambiarContrasena = this.formBuilder.group({\n      passwordVieja: new FormControl(null, Validators.required),\n      passwordNueva: new FormControl(null, Validators.required),\n      passwordNuevaConfirmacion: new FormControl(null, Validators.required),\n    });\n  }\n  modificarDatos() {\n    const usuarioActualizado = ({\n      id: this.usuario._id,\n      dni: this.formActualizarDatosUsuario.controls.dniUsuario.value,\n      nombre: this.formActualizarDatosUsuario.controls.nombreUsuario.value,\n      acceso: this.formActualizarDatosUsuario.controls.accesoUsuario.value,\n      domicilio: this.formActualizarDatosUsuario.controls.domicilioUsuario.value,\n      telefono: this.formActualizarDatosUsuario.controls.telefonoUsuario.value,\n    });\n\n    // Mandamos usuario a la api para modificar sus datos\n    this.usuariosService.modificarDatosUsuario(usuarioActualizado).subscribe(res => {\n      // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n      this.toastr.success('', 'Usuario modificado correctamente', {\n        timeOut: 3000,\n      });\n      this.cambiosFormDatosComp = false;\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al modificar datos');\n    });\n  }\n\n  nivelAcceso() {\n    const acceso = this.usuario.acceso;\n    if (acceso === '1') {\n      return 'Administrador';\n    }\n    if (acceso === '2') {\n      return 'Ejercicio';\n    }\n    if (acceso === '3') {\n      return 'Nutricion';\n    }\n    if (acceso === '4') {\n      return 'Clases';\n    }\n    if (acceso === '5') {\n      return 'Ejercicio + Nutricion';\n    }\n    if (acceso === '6') {\n      return 'Ejercicio + Clases';\n    }\n    if (acceso === '7') {\n      return 'Nutricion + Clases';\n    }\n    if (acceso === '8') {\n      return 'Ejercicio + Nutricion + Clases';\n    }\n  }\n  cambiarContrasena() {\n    const contraVieja = this.formCambiarContrasena.controls.passwordVieja.value;\n    const contraNueva = this.formCambiarContrasena.controls.passwordNueva.value;\n    const contranNuevaConf = this.formCambiarContrasena.controls.passwordNuevaConfirmacion.value;\n    const idUsuario = this.usuario._id;\n\n    if (contraNueva === contranNuevaConf) {\n      this.usuariosService.cambiarContraseña(contraVieja, contraNueva, idUsuario).subscribe(res => {\n        // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n        this.toastr.success('', 'Contraseña cambiada con exito', {\n          timeOut: 3000,\n        });\n        this.router.navigate(['/menu']);\n      }, err => {\n        // Si da error lo mostramos\n        this.toastr.error('Contraseña incorrecta');\n      });\n    }\n  }\n  //#endregion\n}\n","<section class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12 text-center\">\n            <h2 class=\"\"> Datos de usuario </h2>\n        </div>\n\n\n        <div class=\"row d-flex justify-content-center col-sm-12 col-md-9\" *ngIf=\"usuario\">\n            <div class=\"col-sm-10 tarjeta row \">\n                <i class=\"fas fa-user fa-4x col-sm-2 text-center\"></i>\n                <div class=\"col-sm-10\">\n                    <h5 class=\"col-sm-12\">DNI: {{usuario.dni}}</h5>\n                    <h5 class=\"col-sm-12\">Nombre: {{usuario.nombre}}</h5>\n                    <h5 class=\"col-sm-12\">Domicilio: {{usuario.domicilio}}</h5>\n                    <h5 class=\"col-sm-12\">Telefono: {{usuario.telefono}}</h5>\n                    <h5 class=\"col-sm-12\">Acceso: {{nivelAcceso()}}</h5>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"usuarioLogeado.acceso === '1'\" class=\"row d-flex justify-content-center col-sm-12 col-md-9 m-0\">\n            <div class=\"col-sm-10 \" [formGroup]=\"formActualizarDatosUsuario\" (change)=\"cambiosFormDatos()\">\n                <label class=\"col-sm-12 col-md-6 control-label text-left labelNombreTabla\">\n                    DNI\n                    <input type=\"text\" class=\"form-control\" formControlName=\"dniUsuario\"  >\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6 \"> Nombre\n                    <input type=\"text\" class=\"form-control\" formControlName=\"nombreUsuario\" >\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6\"> Domicilio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"domicilioUsuario\" >\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6\"> Telefono\n                    <input type=\"text\" class=\"form-control\" formControlName=\"telefonoUsuario\" >\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-12\">Nivel de acceso del usuario\n                    <select class=\"form-control\" formControlName=\"accesoUsuario\" >\n                        <option value=\"2\" selected>Ejercicio</option>\n                        <option value=\"3\">Nutricion</option>\n                        <option value=\"4\">Clases</option>\n                        <option value=\"5\">Ejercicio + Nutricion</option>\n                        <option value=\"6\">Ejercicio + Clases</option>\n                        <option value=\"7\">Nutricion + Clases</option>\n                        <option value=\"8\">Ejercicio + Nutricion + Clases</option>\n                        <option value=\"1\">Administrador</option>\n                    </select>\n                </label>\n            </div>\n            <div class=\"row d-flex justify-content-center col-sm-12 col-md-12 pt-4 m-0\">\n                <button type=\"submit\" class=\"btn botonCrearUsuario col-sm-6 mx-auto \"  [disabled]=\"!cambiosFormDatosComp\" (click)=\"modificarDatos()\">\n                    <i class=\"fas fa-save\"></i> Modificar datos del usuario\n                </button>\n            </div>\n        </div>\n\n        <div  class=\"row d-flex justify-content-center col-sm-12 col-md-9 m-0 mb-3\">\n            <div class=\"col-sm-10 \" [formGroup]=\"formCambiarContrasena\">\n                <label class=\"control-label text-left col-sm-12 col-md-12\"> Contraseña antigua\n                    <input type=\"password\" class=\"form-control\" formControlName=\"passwordVieja\">\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6\"> Contraseña nueva\n                    <input type=\"password\" class=\"form-control\" formControlName=\"passwordNueva\">\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6\"> Repetir contraseña nueva\n                    <input type=\"password\" class=\"form-control\" formControlName=\"passwordNuevaConfirmacion\">\n                </label>\n                <div class=\"row d-flex justify-content-center col-sm-12 col-md-12 pt-4 m-0\">\n                    <button type=\"submit\" class=\"btn botonCrearUsuario col-sm-6 mx-auto \" [disabled]=\"!formCambiarContrasena.valid\" (click)=\"cambiarContrasena()\">\n                        <i class=\"fas fa-save\"></i> Cambiar contraseña\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { LocalService } from '../../servicios/localService';\nimport { Component, OnInit } from '@angular/core';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { Usuario } from 'src/app/modelos/usuario';\nimport { Router } from '@angular/router';\nimport { ConfiguracionBuscador } from '../adicionales/buscador/buscador.component';\n\n// tslint:disable: member-ordering\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.scss']\n})\nexport class UsuariosComponent implements OnInit {\n\n  //#endregion\n  constructor(\n    private usuariosService: UsuariosService, // Servicio para interactuar con API\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private router: Router\n  ) { }\n\n  //#region VARIABLES\n\n  // Array donde almacenamos las tablas que nos devuelve la api para el usuario seleccionado o logeado\n  usuarios: Usuario[] = [];\n\n  // Nivel de acceso de usuario logeado\n  acceso = this.localService.getAccesoUsuario();\n\n  //#region COMPONENTES\n\n  ngOnInit(): void {\n    if (this.acceso !== '1') {\n      this.router.navigate(['/tablas']);\n    }\n    this.usuariosService.usuariosRegistrados().subscribe(data => (\n      this.configBuscador.values = data.usuarios,\n      this.usuarios = data.usuarios\n    ));\n  }\n\n  // Buscador de usuarios\n  configBuscador: ConfiguracionBuscador = {\n    values: [],\n    selected: null,\n    filter: 'nombre',\n    placeholder: 'Seleccione un Usuario',\n    empty: 'No hay usuarios con ese nombre',\n    fontSize: '14px',\n    fontColor: '#000000',\n    render: (value) => value.nombre\n  };\n\n  // Funcion utilizada pada cuando se selecciona usuario del autocomplete \n  selectUsuario($event) {\n    if ($event != null) {\n      // Si seleccionamos uno cargamos el array de usuarios solo con ese para mostrar su tarjeta\n      this.usuarios = [this.usuarios.find(x => x._id === $event._id)];\n    } else {\n      // Si no se selecciona se recargan los usuarios\n      this.usuariosService.usuariosRegistrados().subscribe(data => (\n        this.usuarios = data.usuarios\n      ));\n\n    }\n  }\n\n  // Recargamos usuarios siempre que se vaya a usar el buscador\n  refrescarUsuarios() {\n    this.usuariosService.usuariosRegistrados().subscribe(data => (\n      this.usuarios = data.usuarios\n    ));\n  }\n  //#endregion\n}\n","<section class=\"col-sm-12\">\n    <div class=\"row\" >  \n        <div class=\"col-sm-12 d-flex justify-content-center\">\n            <div class=\"col-md-4 pt-5\">\n                <buscador-component (selected)=\"selectUsuario($event)\" [config]=\"configBuscador\" (click)=\"refrescarUsuarios()\">\n                </buscador-component>\n            </div>\n        </div>\n    </div>\n    <div class=\"row d-flex justify-content-center \">\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"'/usuarios/crearUsuario'\" >\n            <i class=\"fas fa-plus-square fa-4x\"></i>\n            <h4 class=\"col-sm-12\">Añadir usuario</h4>\n        </div>\n    </div>\n    <div class=\"row d-flex justify-content-center \">\n       \n        <div class=\"col-sm-12 col-md-2 tarjeta row \" *ngFor=\"let usuario of usuarios\"   [routerLink]=\"['/usuarios/datosUsuario',usuario._id]\" >\n            <i class=\"fas fa-user fa-4x\"></i>\n            <h4 class=\"col-sm-12\">{{usuario.nombre}}</h4>\n        </div>\n    </div>\n</section>","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { LocalService } from './localService';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\r\n    private toastr: ToastrService // Servicio que nos creara notificaciones\r\n  ) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // Cogemos el token del usuario de localstorage\r\n    const token = localStorage.getItem('TokenDeAcceso');\r\n\r\n    if (!token) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    // Añadimos el token al header Authorization de todas las solicitudes http\r\n    const req1 = req.clone({\r\n      headers: req.headers.set('Authorization', `Bearer ${token}`),\r\n    });\r\n\r\n    // Mandamos siempre la peticion con el Authorization y si diera error 401 (Token no valido) cerramos sesion\r\n    return next.handle(req1).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n\r\n        if (err.status === 401) {\r\n          this.localService.cerrarSesion();\r\n          this.toastr.error('', 'Sesion caducada', {\r\n            timeOut: 3000,\r\n          });\r\n        }\r\n\r\n        return throwError(err);\r\n\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Tabla, Tablas, CambiosPeso } from '../modelos/tabla';\r\nimport { EjercicioEjemplo } from '../modelos/ejercicioEjemplo';\r\n\r\n@Injectable()\r\nexport class EjerciciosService {\r\n\r\n  // Direccones de servidor de back\r\n  local = 'http://localhost:3000';\r\n  heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n  ServidorBACKEND = this.local;\r\n  authSubject = new BehaviorSubject(false);\r\n\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  //#region FUNCIONES INTERACTUAR CON API\r\n\r\n  // Funcion guardar ejercicio\r\n  crearEjercicio(ejercicio: EjercicioEjemplo): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/crearEjercicio`, { ejercicio });\r\n  }\r\n\r\n  // Buscamos las tablas del usuario que mandamos a la api\r\n  listarEjerciciosZona(zona): Observable<EjercicioEjemplo[]> {\r\n    return this.httpClient.post<EjercicioEjemplo[]>(`${this.ServidorBACKEND}/listarEjerciciosZona`, { zona });\r\n  }\r\n\r\n  // Buscamos la tabla con la api en la base de datos\r\n  buscarEjercicio(idEjercicio): Observable<EjercicioEjemplo> {\r\n    return this.httpClient.post<EjercicioEjemplo>(`${this.ServidorBACKEND}/buscarEjercicio`, { idEjercicio });\r\n  }\r\n\r\n  // Guardar imagen\r\n  guardarImagen(imagen) {\r\n    return this.httpClient.post('http://localhost:4200/guardarImagen', imagen);\r\n  }\r\n\r\n  //#endregion\r\n\r\n\r\n\r\n}\r\n","import { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Injectable } from '@angular/core';\r\nimport { JsonWebToken } from '../modelos/jsonWebToken';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class LocalService {\r\n\r\n    // Variable para descifrar token\r\n    jwtHelper: JwtHelperService = new JwtHelperService();\r\n\r\n    // Creamos token\r\n    private token: string;\r\n\r\n    constructor(\r\n        private router: Router,\r\n    ) {\r\n\r\n    }\r\n\r\n    //#region FUNCIONES\r\n\r\n    // Funcion que nos eliminara el token del localStorage del navegador\r\n    cerrarSesion(): void {\r\n        this.token = '';\r\n        localStorage.removeItem('TokenDeAcceso');\r\n        localStorage.removeItem('ExpiracionToken');\r\n        this.router.navigate(['/']);\r\n    }\r\n\r\n    // Comprobamos si el usuario esta autentificado si esta el token el el storage\r\n    comprobarAutentificacion(): boolean {\r\n        // tslint:disable-next-line: semicolon\r\n        return localStorage.getItem('TokenDeAcceso') !== null;\r\n    }\r\n\r\n    // Nos devolvera el token guardado en localstorage\r\n    getToken(): string {\r\n        return localStorage.getItem('TokenDeAcceso');\r\n    }\r\n\r\n    // Nos devolvera la expiracion del token guardado en localstorage\r\n    getExpiracionToken(): string {\r\n        return localStorage.getItem('ExpiracionToken');\r\n    }\r\n\r\n    // Desciframos los datos del token\r\n    getTokenData(): JsonWebToken {\r\n        const t = this.getToken();\r\n        if (t) {\r\n            const token = this.jwtHelper.decodeToken(t);\r\n            return {\r\n                id: token.id,\r\n                nombre: token.nombre,\r\n                dni: token.dni,\r\n                acceso: token.acceso\r\n            };\r\n        } else {\r\n            return {} as JsonWebToken;\r\n        }\r\n    }\r\n\r\n    // Devolvemos acceso del usuario\r\n    getAccesoUsuario(): string {\r\n        const token = this.getTokenData();\r\n        return token.acceso;\r\n    }\r\n    // Devolvemos acceso del usuario\r\n    getIdUsuario(): string {\r\n        const token = this.getTokenData();\r\n        return token.id;\r\n    }\r\n\r\n    //#endregion\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Tabla, Tablas, CambiosPeso } from '../modelos/tabla';\r\n\r\n@Injectable()\r\nexport class TablasService {\r\n\r\n  // Direccones de servidor de back\r\n  local = 'http://localhost:3000';\r\n  heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n  ServidorBACKEND = this.local;\r\n  authSubject = new BehaviorSubject(false);\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  //#region FUNCIONES INTERACTUAR CON API\r\n\r\n  // Funcion para guardar en base de datos nueva tabla\r\n  crearTabla(tabla: Tabla): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/crearTabla`, { tabla });\r\n  }\r\n\r\n  // Buscamos las tablas del usuario que mandamos a la api\r\n  listarTablasUsuario(idUsuario): Observable<Tablas> {\r\n    return this.httpClient.post<Tablas>(`${this.ServidorBACKEND}/listarTablasUsuario`, { idUsuario });\r\n  }\r\n\r\n  // Buscamos la tabla con la api en la base de datos\r\n  buscarTabla(idTabla): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/buscarTabla`, { idTabla });\r\n  }\r\n\r\n  // Actualizamos pesosMax de tabla\r\n  actualizarPesoMax(cambiosPesoMax: Array<CambiosPeso>) {\r\n    return this.httpClient.post(`${this.ServidorBACKEND}/actualizarPeso`, cambiosPesoMax);\r\n  }\r\n\r\n  //#endregion\r\n\r\n\r\n\r\n}\r\n","import { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Usuario } from '../modelos/usuario';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UsuariosService {\r\n\r\n  // Direccones de servidor de back\r\n  local = 'http://localhost:3000';\r\n  heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n  ServidorBACKEND = this.local;\r\n  authSubject = new BehaviorSubject(false);\r\n\r\n  // Variable para descifrar token\r\n  jwtHelper: JwtHelperService = new JwtHelperService();\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  //#region FUNCIONES INTERACTUAR CON API\r\n\r\n  // Funcion para logear usuario\r\n  loginUsuario(dni: string, password: string): Observable<any> {\r\n    // mandamos en un post a la url del servidor del back, el dni y password que queremos comprobar que esta en bbdd\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/loginUsuario`,\r\n      { dni, password }).pipe(tap(\r\n        (res: any) => {\r\n          if (res) {\r\n            // Si el back funciona correctamente la respuesta sera un token que guardamos en la siguiente funcion\r\n            this.guardarToken(res.accessToken);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  // Funcion para registrar nuevos usuarios\r\n  registrarUsuario(user: Usuario): Observable<any> {\r\n    // mandamos en un post a la url del servidor del back, el usuario que queremos guardar en bbdd\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/registrarUsuario`,\r\n      user).pipe(tap(\r\n        (res) => {\r\n          if (res) {\r\n            // Si el back funciona correctamente la respuesta sera un token que guardamos en la siguiente funcion\r\n            console.log('Usuario registrado');\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  // Buscamos los usuarios registrados en la base de datos y devolvemos nombre y id\r\n  usuariosRegistrados() {\r\n    return this.httpClient.get<any>(`${this.ServidorBACKEND}/listarUsuarios`);\r\n  }\r\n\r\n  // Buscamos usuarios con el nivel acceso indicado. El nivel habra que mandarle en formato { \"acceso\" : [1,3,4] }\r\n  usuariosNivelAcceso(acceso) {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/listarUsuariosFiltrarNivel`, { acceso });\r\n  }\r\n\r\n  // Buscamos usuario con api en bbdd para usar sus datos\r\n  buscarUsuario(idUsuario) {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/buscarUsuario`, { idUsuario });\r\n  }\r\n\r\n  // Funcion para cambiar contraseña\r\n  cambiarContraseña(contraVieja, contraNueva, idUsuario): Observable<any> {\r\n    // mandamos en un post a la url del servidor del back las dos contraseñas para comprobar y cambiar\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/cambiarContrasena`, { contraVieja, contraNueva, idUsuario });\r\n  }\r\n\r\n  // Funcion para cambiar contraseña\r\n  modificarDatosUsuario(user: Usuario): Observable<any> {\r\n    // mandamos en un post a la url del servidor del back las dos contraseñas para comprobar y cambiar\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/modificarDatosUsuario`,  user );\r\n  }\r\n\r\n  //#endregion\r\n\r\n\r\n  //#region FUNCIONES INTERNAS\r\n\r\n  // Funcion que nos guardara el token en el localStorage del navegador\r\n  private guardarToken(token: string): void {\r\n    localStorage.setItem('TokenDeAcceso', token);\r\n  }\r\n\r\n  //#endregion\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}