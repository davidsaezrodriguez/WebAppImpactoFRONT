{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/componentes/adicionales/buscador/buscador.component.ts","webpack:///src/app/componentes/adicionales/buscador/buscador.component.html","webpack:///src/app/componentes/clases/clases.component.ts","webpack:///src/app/componentes/clases/clases.component.html","webpack:///src/app/componentes/dietas/dietas.component.ts","webpack:///src/app/componentes/dietas/dietas.component.html","webpack:///src/app/componentes/ejercicios/crear-ejercicios/crear-ejercicios.component.ts","webpack:///src/app/componentes/ejercicios/crear-ejercicios/crear-ejercicios.component.html","webpack:///src/app/componentes/ejercicios/ejercicios.component.ts","webpack:///src/app/componentes/ejercicios/ejercicios.component.html","webpack:///src/app/componentes/ejercicios/visualizar-ejercicios/detalles-ejercicio/detalles-ejercicio.component.ts","webpack:///src/app/componentes/ejercicios/visualizar-ejercicios/detalles-ejercicio/detalles-ejercicio.component.html","webpack:///src/app/componentes/ejercicios/visualizar-ejercicios/visualizar-ejercicios.component.ts","webpack:///src/app/componentes/ejercicios/visualizar-ejercicios/visualizar-ejercicios.component.html","webpack:///src/app/componentes/footer/footer.component.ts","webpack:///src/app/componentes/footer/footer.component.html","webpack:///src/app/componentes/login/login.component.ts","webpack:///src/app/componentes/login/login.component.html","webpack:///src/app/componentes/menu/menu.component.ts","webpack:///src/app/componentes/menu/menu.component.html","webpack:///src/app/componentes/navbar/navbar.component.ts","webpack:///src/app/componentes/navbar/navbar.component.html","webpack:///src/app/componentes/seguimiento/seguimiento.component.ts","webpack:///src/app/componentes/seguimiento/seguimiento.component.html","webpack:///src/app/componentes/tablas/crear-tablas/crear-tablas.component.ts","webpack:///src/app/componentes/tablas/crear-tablas/crear-tablas.component.html","webpack:///src/app/componentes/tablas/tablas.component.ts","webpack:///src/app/componentes/tablas/tablas.component.html","webpack:///src/app/componentes/tablas/visualizar-tablas/visualizar-tablas.component.ts","webpack:///src/app/componentes/tablas/visualizar-tablas/visualizar-tablas.component.html","webpack:///src/app/componentes/usuarios/crear-usuario/crear-usuario.component.ts","webpack:///src/app/componentes/usuarios/crear-usuario/crear-usuario.component.html","webpack:///src/app/componentes/usuarios/datos-usuario/datos-usuario.component.ts","webpack:///src/app/componentes/usuarios/datos-usuario/datos-usuario.component.html","webpack:///src/app/componentes/usuarios/usuarios.component.ts","webpack:///src/app/componentes/usuarios/usuarios.component.html","webpack:///src/app/servicios/AuthInteceptor.ts","webpack:///src/app/servicios/ejerciciosService.ts","webpack:///src/app/servicios/localService.ts","webpack:///src/app/servicios/tablasService.ts","webpack:///src/app/servicios/usuariosService.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","localService","comprobarAutentificacion","cerrarSesion","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","BuscadorComponent","fb","zone","selected","openModal","dirtyInput","inputLoader","listLoader","listObjects","setForm","config","form","controls","input","setValue","getFilterValue","setFormListeners","group","valueChanges","subscribe","data","filterObjects","item","property","filter","call","search","values","object","name","toLowerCase","replace","includes","toLocaleLowerCase","length","autocompleteList","nativeElement","style","height","value","emitEvent","markAsDirty","emit","clearInput","isNew","markAsPristine","showAutocomplete","selectObject","ClasesComponent","DietasComponent","CrearEjerciciosComponent","formBuilder","httpClient","router","toastr","ejerciciosService","setformNuevaTabla","formNuevoEjercicio","nombre","required","zona","explicacion","consejos","imagen","video","element","nombreImagen","target","files","console","log","formData","FormData","append","guardarImagen","res","ejercicio","crearEjercicio","success","timeOut","navigate","err","error","fileChange","guardarEjercicio","EjerciciosComponent","tablasUsuario","acceso","getAccesoUsuario","idUsuario","DetallesEjercicioComponent","rutaActiva","_sanitizer","params","idEjercicio","buscarEjercicio","url","results","match","bypassSecurityTrustResourceUrl","VisualizarEjerciciosComponent","ejerciciosZona","listarEjerciciosZona","FooterComponent","LoginComponent","usuariosService","usuarioLogeado","setFormLogin","formLogin","dni","password","loginUsuario","updateUserStatus","next","accederApp","MenuComponent","nivelAcceso","NavbarComponent","navExpandida","getTokenData","actualizarUsuarioLogeado","screen","width","removeClass","addClass","attr","expandirNav","SeguimientoComponent","CrearTablasComponent","tablasService","ejerciciosDia1","ejerciciosDia2","ejerciciosDia3","ejerciciosDia4","ejerciciosDia5","dias","formNuevaTabla","nombreTabla","ejercicioDia1","repeticionesDia1","ejercicioDia2","repeticionesDia2","ejercicioDia3","repeticionesDia3","ejercicioDia4","repeticionesDia4","ejercicioDia5","repeticionesDia5","dia","inputEjer","inputRep","get","repeticiones","pesoMax","push","i","splice","tabla","usuario","crearTabla","warning","anadirEjercicio","guardarTabla","TablasComponent","configBuscador","placeholder","empty","fontSize","fontColor","render","getIdUsuario","cargarTablasUsuario","usuariosNivelAcceso","usuarios","$event","_id","listarTablasUsuario","tablas","VisualizarTablasComponent","cambiosPesoMax","setformPesoMax","idTabla","buscarTabla","formPesoMax","idDia","pesoMaxActualizado","actualizarPesoMax","CrearUsuarioComponent","setformNuevoUsuario","formNuevoUsuario","dniUsuario","nombreUsuario","accesoUsuario","domicilioUsuario","telefonoUsuario","nuevoUsuario","domicilio","telefono","registrarUsuario","crearUsuario","DatosUsuarioComponent","actualizandoDatos","cambiosFormDatosComp","buscarUsuario","datosDeUsuarioAlFormulario","setformActualizarDatosUsuario","setformCambiarContrasena","formActualizarDatosUsuario","formCambiarContrasena","passwordVieja","passwordNueva","passwordNuevaConfirmacion","usuarioActualizado","modificarDatosUsuario","contraVieja","contraNueva","contranNuevaConf","cambiarContrase√±a","cambiarContrasena","UsuariosComponent","usuariosRegistrados","find","x","selectUsuario","refrescarUsuarios","AuthInterceptor","token","localStorage","getItem","handle","req1","clone","headers","set","pipe","status","EjerciciosService","local","heroku","ServidorBACKEND","authSubject","post","LocalService","jwtHelper","removeItem","t","getToken","decodeToken","TablasService","UsuariosService","guardarToken","accessToken","user","setItem","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './componentes/login/login.component';\r\nimport { MenuComponent } from './componentes/menu/menu.component';\r\nimport { TablasComponent } from './componentes/tablas/tablas.component';\r\nimport { CrearTablasComponent } from './componentes/tablas/crear-tablas/crear-tablas.component';\r\nimport { VisualizarTablasComponent } from './componentes/tablas/visualizar-tablas/visualizar-tablas.component';\r\nimport { UsuariosComponent } from './componentes/usuarios/usuarios.component';\r\nimport { CrearUsuarioComponent } from './componentes/usuarios/crear-usuario/crear-usuario.component';\r\nimport { DatosUsuarioComponent } from './componentes/usuarios/datos-usuario/datos-usuario.component';\r\nimport { EjerciciosComponent } from './componentes/ejercicios/ejercicios.component';\r\nimport { DietasComponent } from './componentes/dietas/dietas.component';\r\nimport { SeguimientoComponent } from './componentes/seguimiento/seguimiento.component';\r\nimport { ClasesComponent } from './componentes/clases/clases.component';\r\nimport { VisualizarEjerciciosComponent } from './componentes/ejercicios/visualizar-ejercicios/visualizar-ejercicios.component';\r\nimport { DetallesEjercicioComponent } from './componentes/ejercicios/visualizar-ejercicios/detalles-ejercicio/detalles-ejercicio.component';\r\nimport { CrearEjerciciosComponent } from './componentes/ejercicios/crear-ejercicios/crear-ejercicios.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'menu',\r\n    component: MenuComponent,\r\n  },\r\n  {\r\n    path: 'tablas',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: TablasComponent,\r\n      },\r\n      {\r\n        path: 'crear/:idUsuario',\r\n        component: CrearTablasComponent,\r\n      },\r\n      {\r\n        path: 'visualizar/:idTabla',\r\n        component: VisualizarTablasComponent,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'ejercicios',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: EjerciciosComponent,\r\n      },\r\n      {\r\n        path: 'crear',\r\n        component: CrearEjerciciosComponent,\r\n      },\r\n      {\r\n        path: 'visualizar-ejercicios/:zona',\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: VisualizarEjerciciosComponent,\r\n          },\r\n          {\r\n            path: 'detalles-ejercicio/:idEjercicio',\r\n            component: DetallesEjercicioComponent,\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'dietas',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: DietasComponent,\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'seguimiento',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: SeguimientoComponent,\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'clases',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ClasesComponent,\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'usuarios',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: UsuariosComponent,\r\n      },\r\n      {\r\n        path: 'crearUsuario',\r\n        component: CrearUsuarioComponent,\r\n      },\r\n      {\r\n        path: 'datosUsuario/:idUsuario',\r\n        component: DatosUsuarioComponent,\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { LocalService } from './servicios/localService';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(\r\n    private localService: LocalService // Servicio para recuperar datos del localstorage\r\n  ) {\r\n\r\n  }\r\n\r\n  // tslint:disable-next-line: use-lifecycle-interface\r\n  ngOnInit(): void {\r\n    if (!this.localService.comprobarAutentificacion()) {\r\n      this.localService.cerrarSesion();\r\n    }\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"content\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './componentes/login/login.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UsuariosService } from './servicios/usuariosService';\r\nimport { MenuComponent } from './componentes/menu/menu.component';\r\nimport { FooterComponent } from './componentes/footer/footer.component';\r\nimport { NavbarComponent } from './componentes/navbar/navbar.component';\r\nimport { TablasComponent } from './componentes/tablas/tablas.component';\r\nimport { BuscadorComponent } from './componentes/adicionales/buscador/buscador.component';\r\nimport { CrearTablasComponent } from './componentes/tablas/crear-tablas/crear-tablas.component';\r\nimport { VisualizarTablasComponent } from './componentes/tablas/visualizar-tablas/visualizar-tablas.component';\r\nimport { LocalService } from './servicios/localService';\r\nimport { TablasService } from './servicios/tablasService';\r\nimport { AuthInterceptor } from './servicios/AuthInteceptor';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { UsuariosComponent } from './componentes/usuarios/usuarios.component';\r\nimport { CrearUsuarioComponent } from './componentes/usuarios/crear-usuario/crear-usuario.component';\r\nimport { DatosUsuarioComponent } from './componentes/usuarios/datos-usuario/datos-usuario.component';\r\nimport { EjerciciosComponent } from './componentes/ejercicios/ejercicios.component';\r\nimport { DietasComponent } from './componentes/dietas/dietas.component';\r\nimport { SeguimientoComponent } from './componentes/seguimiento/seguimiento.component';\r\nimport { ClasesComponent } from './componentes/clases/clases.component';\r\nimport { VisualizarEjerciciosComponent } from './componentes/ejercicios/visualizar-ejercicios/visualizar-ejercicios.component';\r\nimport { DetallesEjercicioComponent } from './componentes/ejercicios/visualizar-ejercicios/detalles-ejercicio/detalles-ejercicio.component';\r\nimport { EjerciciosService } from './servicios/ejerciciosService';\nimport { CrearEjerciciosComponent } from './componentes/ejercicios/crear-ejercicios/crear-ejercicios.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    MenuComponent,\r\n    FooterComponent,\r\n    NavbarComponent,\r\n    TablasComponent,\r\n    BuscadorComponent,\r\n    CrearTablasComponent,\r\n    VisualizarTablasComponent,\r\n    UsuariosComponent,\r\n    CrearUsuarioComponent,\r\n    DatosUsuarioComponent,\r\n    EjerciciosComponent,\r\n    DietasComponent,\r\n    SeguimientoComponent,\r\n    ClasesComponent,\r\n    VisualizarEjerciciosComponent,\r\n    DetallesEjercicioComponent,\r\n    CrearEjerciciosComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot()\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    UsuariosService,\r\n    LocalService,\r\n    TablasService,\r\n    EjerciciosService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","\nimport { Component, OnInit, EventEmitter, ElementRef, ViewChild, Output, Input, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\nexport interface ConfiguracionBuscador {\n  values: any[];\n  selected: any;\n  filter: string;\n  placeholder: string;\n  empty: string;\n  fontSize: string;\n  fontColor: string;\n  inputClass?: string;\n  render: (object) => string;\n}\n\n// tslint:disable no-input-rename no-output-rename component-selector\n\n@Component({\n\n  selector: 'buscador-component',\n  templateUrl: './buscador.component.html',\n  styleUrls: ['./buscador.component.scss']\n})\nexport class BuscadorComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Config que recibimos del padre para la configuracion del componente\n  @Input('config') config: ConfiguracionBuscador;\n\n  // Valor que emitimos al padre (objeto seleccionado de la lista)\n  @Output('selected') selected: EventEmitter<object> = new EventEmitter();\n\n  // Modal en el que mostramos la lista\n  @ViewChild('autocompleteList') autocompleteList: ElementRef;\n\n  // openModal = controla el abrir y cerrar el modal\n  openModal = false;\n\n  // dirtyInput = controla si escribo en el input (si escribo y al seleccionar selecciono fuera borro el input y emito un null)\n  dirtyInput = false;\n\n  // inputLoader = no se esta usando, era para mostrar simbolo de \"cargando\" en input, se a√±ade al listado, con la variable listLoader\n  inputLoader = false;\n\n  // listLoader = muestra el simbolo de \"cargando\" en el listado\n  listLoader = false;\n\n  form: FormGroup;\n  listObjects: any[] = [];\n\n  //#endregion\n\n  constructor(\n    private fb: FormBuilder,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n    this.setForm();\n\n    if (this.config.selected) {\n      this.form.controls.input.setValue(this.getFilterValue(this.config.selected));\n    }\n    this.setFormListeners();\n  }\n  private setForm() {\n    this.form = this.fb.group({\n      input: new FormControl(''),\n    });\n\n  }\n\n  //#region FUNCIONES\n  private setFormListeners() {\n    if (this.form) {\n      this.form.controls.input.valueChanges.subscribe(() => {\n        this.listLoader = true;\n        this.dirtyInput = true;\n        this.openModal = true;\n      });\n      this.form.controls.input.valueChanges.subscribe(data => {\n        this.filterObjects(data);\n      });\n    }\n  }\n\n\n  // Metodos para filtrar las palabras y que no haya problemas al realizar la busqueda\n  private getFilterValue(item: object): string {\n    const property = item[this.config.filter];\n    if (typeof (property) === 'function') {\n      return property.call(item);\n    }\n    return property;\n  }\n\n  private filterObjects(search: string) {\n    this.listObjects = this.config.values.filter(object => {\n      if (this.getFilterValue(object) && typeof search === 'string') {\n        const name = this.getFilterValue(object)\n          .toLowerCase()\n          .replace('√°', 'a').replace('√©', 'e')\n          .replace('√¨', 'i').replace('√≥', 'o')\n          .replace('√∫', 'u');\n        return name.includes(\n          search.toLocaleLowerCase()\n            .replace('√°', 'a').replace('√©', 'e')\n            .replace('√¨', 'i').replace('√≥', 'o')\n            .replace('√∫', 'u')\n        );\n      }\n    });\n\n    this.listLoader = false;\n    if (this.listObjects.length > 10) {\n      this.autocompleteList.nativeElement.style.height = '200px';\n    } else if (this.listObjects.length === 0) {\n      this.autocompleteList.nativeElement.style.height = '28px';\n    } else {\n      this.autocompleteList.nativeElement.style.height = (this.listObjects.length * 28) + 'px';\n    }\n  }\n\n  showAutocomplete() {\n    this.filterObjects(this.form.controls.input.value);\n    this.openModal = true;\n  }\n\n  // Este metodo cierra el modal\n  // Si selecciono un elemento (evento click): relleno el valor y lo emito\n  // Si no selecciono un elemento (evento blur, hago click fuera de la lista) y el input ha sido editado: limpio el campo y emito un null\n  selectObject(object) {\n    if (this.openModal) {\n      if (object) {\n        this.form.controls.input.setValue(this.getFilterValue(object), { emitEvent: false });\n        this.form.controls.input.markAsDirty();\n        this.dirtyInput = false;\n        this.selected.emit(object);\n      } else if (this.dirtyInput) {\n        this.clearInput(false);\n        this.dirtyInput = false;\n        this.selected.emit(object);\n      }\n      this.openModal = false;\n    }\n  }\n\n  // Limpiamos el input\n  clearInput(isNew) {\n    this.form.controls.input.setValue('', { emitEvent: false });\n    if (isNew) {\n      this.form.controls.input.markAsPristine();\n    }\n  }\n  //#endregion\n}\n","<div [formGroup]=\"form\" [class.has-error]=\"form.controls['input'].invalid && form.controls['input'].dirty\"\n    [class.has-success]=\"form.controls['input'].valid && form.controls['input'].dirty\">\n    <label class=\"formBuscar col-md-12\">\n        <span class=\"icon\"><i class=\"fa fa-search\"></i></span>\n        <input class=\"form-control col-md-11\" type=\"search\" placeholder=\"Buscar usuario\" id=\"buscarUsuario\" autocomplete=\"off\"\n            formControlName=\"input\" (mousedown)=\"showAutocomplete()\" (blur)=\"selectObject(null)\" type=\"text\"\n            [attr.placeholder]=\"inputLoader ? '' : config.placeholder\" class=\"form-control {{config.inputClass}}\">\n    </label>\n    <div #autocompleteList class=\"form-control autocomplete \" [class.hide]=\"!openModal\">\n        <ng-container *ngIf=\"!listLoader\">\n            <p *ngFor=\"let object of listObjects\" (mousedown)=\"selectObject(object)\">\n                {{config.render(object)}}\n            </p>\n            <p *ngIf=\"listObjects.length == 0\"><strong>{{config.empty}}</strong></p>\n        </ng-container>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-clases',\n  templateUrl: './clases.component.html',\n  styleUrls: ['./clases.component.scss']\n})\nexport class ClasesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>clases works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dietas',\n  templateUrl: './dietas.component.html',\n  styleUrls: ['./dietas.component.scss']\n})\nexport class DietasComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dietas works!</p>\n","import {HttpClient} from '@angular/common/http';\nimport { FormControl, Validators } from '@angular/forms/';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { EjercicioEjemplo } from 'src/app/modelos/ejercicioEjemplo';\nimport { EjerciciosService } from 'src/app/servicios/ejerciciosService';\n\n@Component({\n  selector: 'app-crear-ejercicios',\n  templateUrl: './crear-ejercicios.component.html',\n  styleUrls: ['./crear-ejercicios.component.scss']\n})\nexport class CrearEjerciciosComponent implements OnInit {\n  //#region VARIABLES\n\n  // Formulario\n  formNuevoEjercicio: FormGroup;\n\n  // Ejercicio nuevo que mandaremos a guardar con api\n  ejercicio: EjercicioEjemplo;\n\n  // Variable donde guardamos URL de la imagen que subimos\n  nombreImagen;\n\n  // Variable donde guardamos imagen que subimos\n  imagen: File;\n  //#endregion\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private httpClient: HttpClient,\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private ejerciciosService: EjerciciosService // Servicio con el que mandamos a api el ejercicio nuevo\n  ) {\n    this.setformNuevaTabla();\n  }\n\n\n  ngOnInit(): void {\n  }\n\n  //#region FUNCIONES\n\n  private setformNuevaTabla() {\n    this.formNuevoEjercicio = this.formBuilder.group({\n      nombre: new FormControl(null, Validators.required),\n      zona: new FormControl(null, Validators.required),\n      explicacion: new FormControl(null, Validators.required),\n      consejos: new FormControl(null, Validators.required),\n      imagen: new FormControl(null, Validators.required),\n      video: new FormControl(null, Validators.required),\n    });\n  }\n\n  // Funcion con la que cogemos nombre de imagen del file y a√±adimos la ruta donde la guardaremos para mandar a api\n  fileChange(element) {\n    this.nombreImagen = element.target.files[0].name;\n    this.imagen = element.target.files[0];\n  }\n\n  guardarImagen(imagen) {\n\n    console.log(imagen.name);\n\n    const formData = new FormData();\n    formData.append('file', imagen);\n\n    console.log(formData)\n    this.ejerciciosService.guardarImagen(formData).subscribe(res => {\n      console.log(res);\n    });\n\n\n  }\n\n  // Funcion guardamos ejercicio y mandamos con servicio a la api para guardar en BBDD\n  guardarEjercicio() {\n    this.guardarImagen(this.imagen);\n    this.ejercicio = ({\n      nombre: this.formNuevoEjercicio.controls.nombre.value,\n      zona: this.formNuevoEjercicio.controls.zona.value,\n      explicacion: this.formNuevoEjercicio.controls.explicacion.value,\n      consejos: this.formNuevoEjercicio.controls.consejos.value,\n      imagen: this.nombreImagen,\n      video: this.formNuevoEjercicio.controls.video.value,\n    });\n\n    console.log(this.ejercicio);\n    // Mandamos tabla con api a la bbdd\n    this.ejerciciosService.crearEjercicio(this.ejercicio).subscribe(res => {\n      // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n      this.toastr.success('', 'Ejercicio creado correctamente', {\n        timeOut: 3000,\n      });\n      this.router.navigate(['/ejercicios']);\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al crear ejercicio');\n    });\n  }\n\n  //#endregion\n\n}\n","<section class=\"container pt-4\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12 \">\n            <h2 class=\"text-center\"> Creacion de nuevo ejercicio</h2>\n        </div>\n        <div class=\"col-sm-10 pt-4\" [formGroup]=\"formNuevoEjercicio\" enctype=\"multipart/form-data\">\n            <label class=\"col-sm-12 col-md-6 control-label text-left \">\n                Nombre del ejercicio\n                <input type=\"text\" class=\"form-control\" formControlName=\"nombre\">\n            </label>\n            <label class=\"col-sm-12 col-md-6 control-label text-left \">\n                Zona del cuerpo al que pertenece\n                <select class=\"form-control\" formControlName=\"zona\">\n                    <option value=\"1\">Pecho</option>\n                    <option value=\"2\">Espalda</option>\n                    <option value=\"3\">Pierna</option>\n                    <option value=\"4\">Hombro</option>\n                    <option value=\"5\">Brazo</option>\n                    <option value=\"6\">Abdomen</option>\n                  </select>\n            </label>\n            <label class=\"col-sm-12 col-md-6 control-label text-left \">\n                Imagen ejemplo del ejercicio\n                <input type=\"file\" class=\"custom-file-input\" id=\"inputImagen\"  lang=\"es\" formControlName=\"imagen\" (change)=\"fileChange($event)\">\n                <label class=\"custom-file-label subirImagen\" >Seleccionar Archivo</label>\n            </label>\n            <label class=\"col-sm-12 col-md-6 control-label text-left video\">\n                URL Video Youtube \n                <input type=\"text\" class=\"form-control\" formControlName=\"video\">\n            </label>\n            <label class=\"col-sm-12 ontrol-label text-left \">\n                Explicacion\n                <textarea class=\"form-control\" formControlName=\"explicacion\" rows=\"3\"></textarea>\n            </label>\n            <label class=\"col-sm-12  control-label text-left \">\n                Consejos\n                <textarea class=\"form-control\" formControlName=\"consejos\" rows=\"3\"></textarea>\n            </label>\n\n            <div class=\"d-flex justify-content-center p-3\">\n                <button type=\"submit\" class=\"btn botonGuardarEjercicio col-sm-12\" (click)=\"guardarEjercicio()\">\n                    <i class=\"fas fa-save\"></i>Guardar ejercicio\n                </button>\n            </div>\n\n        </div>\n    </div>\n\n\n\n</section>","import { Component, OnInit } from '@angular/core';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-ejercicios',\n  templateUrl: './ejercicios.component.html',\n  styleUrls: ['./ejercicios.component.scss']\n})\nexport class EjerciciosComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Array donde almacenamos las tablas que nos devuelve la api para el usuario seleccionado o logeado\n  tablasUsuario: [] = [];\n\n  // Nivel de acceso de usuario logeado\n  acceso = this.localService.getAccesoUsuario();\n\n  // Id de usuario logeado\n  idUsuario = null;\n\n  //#endregion\n\n  constructor(\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"col-sm-12 pt-4\">\n    <div class=\"row\" *ngIf=\"acceso == '1'\">  \n        <div class=\"col-sm-12 d-flex justify-content-center\">\n            <div class=\"col-md-4 pt-5\">\n               \n            </div>\n        </div>\n    </div>\n    <div class=\"row d-flex justify-content-center \">\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','1']\">\n            <i class=\"fas fa-calendar-alt fa-4x\"></i>\n            <h4 class=\"col-sm-12\"> Pecho</h4>\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','2']\">\n            <i class=\"fas fa-calendar-alt fa-4x\"></i>\n            <h4 class=\"col-sm-12\"> Espalda</h4>\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','3']\">\n            <i class=\"fas fa-calendar-alt fa-4x\"></i>\n            <h4 class=\"col-sm-12\"> Pierna</h4>\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','4']\">\n            <i class=\"fas fa-calendar-alt fa-4x\"></i>\n            <h4 class=\"col-sm-12\"> Hombro</h4>\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','5']\">\n            <i class=\"fas fa-calendar-alt fa-4x\"></i>\n            <h4 class=\"col-sm-12\"> Brazo</h4>\n        </div>\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"['visualizar-ejercicios','6']\">\n            <i class=\"fas fa-calendar-alt fa-4x\"></i>\n            <h4 class=\"col-sm-12\"> Abdomen</h4>\n        </div>\n        <div class=\"col-sm-12 col-md-6 tarjeta row \"  [routerLink]=\"['/ejercicios/crear']\"  *ngIf=\"acceso == '1'\">\n            <i class=\"fas fa-plus-square fa-4x\"></i>\n            <h4 class=\"col-sm-12\">A√±adir ejercicio</h4>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { EjercicioEjemplo } from 'src/app/modelos/ejercicioEjemplo';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { EjerciciosService } from 'src/app/servicios/ejerciciosService';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'app-detalles-ejercicio',\n  templateUrl: './detalles-ejercicio.component.html',\n  styleUrls: ['./detalles-ejercicio.component.scss']\n})\nexport class DetallesEjercicioComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Variable donde guardamos idEjercicio que nos mandamos por url \n  idEjercicio;\n\n  // Objeto ejercicio donde guardamos ejercicio a mostrar que nos devolvera la api\n  ejercicio: EjercicioEjemplo;\n\n  //#endregion\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor zona que nos manda el componente ejercicios\n    private ejerciciosService: EjerciciosService, // Servicio para gestionar ejercicios con api\n    private _sanitizer: DomSanitizer // Utilizaremos este servicio para a√±adir video si el ejemplo lo tuviera\n\n  ) { }\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idEjercicio = params.idEjercicio;\n      }\n    );\n    this.ejerciciosService.buscarEjercicio(this.idEjercicio).subscribe(data => {\n      // Cogemos el unico valor que nos devuelven en data ya que al buscar 1 ejercicio por id solo hay uno\n      this.ejercicio = data[0];\n\n    });\n  }\n\n  //#region FUNCIONES\n  \n  getVideoIframe(url) {\n    let video;\n    let results;\n    if (url === null) {\n      return '';\n    }\n    results = url.match('[\\\\?&]v=([^&#]*)');\n    video = (results === null) ? url : results[1];\n    return this._sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + video);\n  }\n\n\n  //#endregion\n\n}\n","<section class=\"col-sm-12 pt-4\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12 col-md-8 tarjeta row \" *ngIf=\"ejercicio\">\n            <h2 class=\"col-sm-12 text-center\"> {{ejercicio.nombre}}</h2>\n            <div class=\"col-sm-12 col-md-6 informacion\">\n                <h4>Explicaci√≥n:</h4>\n                <p> {{ejercicio.explicacion}}</p>\n                <h4>Observaciones:</h4>\n                <p>{{ejercicio.consejos}}</p>\n            </div>\n            <div class=\"col-sm-12 col-md-6 imagen\">\n                <img src=\"assets/imagenes/ejercicios/{{ejercicio.imagen}}\" class=\"img-fluid\">\n            </div>\n            <div class=\"col-sm-12 video\" *ngIf=\"ejercicio.video\">\n                <iframe width=\"560\" height=\"315\" [src]=\"getVideoIframe(ejercicio.video)\" frameborder=\"0\"\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    allowfullscreen></iframe>\n\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { EjerciciosService } from 'src/app/servicios/ejerciciosService';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { EjercicioEjemplo } from 'src/app/modelos/ejercicioEjemplo';\n\n@Component({\n  selector: 'app-visualizar-ejercicios',\n  templateUrl: './visualizar-ejercicios.component.html',\n  styleUrls: ['./visualizar-ejercicios.component.scss']\n})\nexport class VisualizarEjerciciosComponent implements OnInit {\n\n  //#region \n\n  // Variable de la zona que corresponden ejercicios, recogida de url\n  zona;\n\n  // Array donde almacenamos ejercicios de la zona correspondiente\n  ejerciciosZona: EjercicioEjemplo[] = [];\n\n  //#endregion\n\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor zona que nos manda el componente ejercicios\n    private ejerciciosService: EjerciciosService, // Servicio para gestionar ejercicios con api\n  ) { }\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.zona = params.zona;\n      }\n    );\n    this.ejerciciosService.listarEjerciciosZona(this.zona).subscribe(data => {\n      this.ejerciciosZona = data;\n    });\n  }\n\n  //#region FUNCIONES\n\n\n\n\n  //#endregion\n\n\n}\n","<section class=\"col-sm-12 pt-4\">\n    <div class=\"row d-flex justify-content-center\" >\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" *ngFor=\"let ejercicio of ejerciciosZona\" [routerLink]=\"['detalles-ejercicio',ejercicio._id]\">\n            <h4 class=\"col-sm-12\"> {{ejercicio.nombre}}</h4>\n            <img src=\"assets/imagenes/ejercicios/{{ejercicio.imagen}}\" class=\"img-fluid p-4\">\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"navbar navbar-fixed-bottom\">\n      <div class=\"row col-12 iconos\">\n            <!-- Facebook -->\n            <a class=\"fb-ic\" href=\"https://www.facebook.com/GimansioImpactoLaguna\">\n              <i class=\"fab fa-facebook m-2 fa-2x\"> </i>\n            </a>\n            <!--Instagram-->\n            <a class=\"ins-ic\" href=\"https://www.instagram.com/impactolaguna\">\n              <i class=\"fab fa-instagram  m-2 fa-2x\"> </i>\n            </a>\n      </div>\n    <div class=\"footer-copyright text-center py-1 col-12\">¬© 2020 Impacto Laguna</div>\n</footer>\n","import { Component, OnInit, …µConsole } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { FormBuilder, Validators, FormControl, FormGroup } from '@angular/forms';\nimport { NavbarComponent } from '../navbar/navbar.component';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Formulario\n  public formLogin: FormGroup;\n\n  //#endregion\n\n\n  constructor(\n    private usuariosService: UsuariosService,\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService // Servicio que nos creara notificaciones\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogeado();\n    this.setFormLogin();\n  }\n\n  //#region FUNCIONES\n\n  // FORMULARIOS\n  private setFormLogin() {\n    this.formLogin = this.formBuilder.group({\n      dni: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n    });\n  }\n\n  // Funcion donde mandamos usuario logeado en el formulario al servicio que nos autentifica al usuario y mandamos a menus si es valido\n  accederApp(): void {\n    const dni = this.formLogin.controls.dni.value;\n    const password = this.formLogin.controls.password.value;\n\n    this.usuariosService.loginUsuario(dni, password).subscribe(res => {\n      // Si se el login es correcto\n      NavbarComponent.updateUserStatus.next(true); // here!\n      this.router.navigate(['/menu']);\n    }, err => {\n      this.toastr.error('Contrase√±a incorrecta');\n    });\n  }\n\n  // Comprobamos hay algun usuario ya logeado y si es que si mandamos a menu directamente\n  usuarioLogeado() {\n    if (this.localService.comprobarAutentificacion()) {\n      this.router.navigate(['/menu']);\n    }\n  }\n\n  //#endregion\n\n\n}\n","<section class=\"d-flex justify-content-center align-items-center h-100\">\n\t<div class=\"card\">\n\t\t<div class=\"card-header\">\n\t\t\t<h3>Login</h3>\n\t\t\t<div class=\"d-flex justify-content-end social_icon\">\n\t\t\t\t<span> <a class=\"fb-ic\" href=\"https://www.facebook.com/GimansioImpactoLaguna\"><i\n\t\t\t\t\t\t\tclass=\"fab fa-facebook-square\"></i></a></span>\n\t\t\t\t<span><a class=\"ins-ic\" href=\"https://www.instagram.com/impactolaguna\"><i\n\t\t\t\t\t\t\tclass=\"fab fa-instagram-square\"></i></a></span>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"card-body\">\n\t\t\t<div class=\"col-xs-12 col-sm-12\" [formGroup]=\"formLogin\" class=\"login-container\">\n\t\t\t\t<div class=\"input-group form-group\">\n\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input type=\"text\" class=\"form-control input-sm\" formControlName=\"dni\" placeholder=\"DNI\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"input-group form-group\">\n\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input type=\"password\" class=\"form-control input-sm\" formControlName=\"password\"\n\t\t\t\t\t\tplaceholder=\"Contrase√±a\">\n\t\t\t\t</div>\n\t\t\t\t<button (click)=\"accederApp()\" type=\"button\" class=\"btn float-right login_btn\">\n\t\t\t\t\tACCEDER\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  //#region VARIABLES\n\n  public nivelAcceso = this.localService.getAccesoUsuario();\n\n  //#endregion\n\n  constructor(\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n\n  ) { }\n\n\n  ngOnInit(): void {\n  }\n}\n","<section>\n    <div class=\"col-sm-7\">\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-md tarjeta row \"  [routerLink]=\"['/tablas']\"  *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '2') || (nivelAcceso == '5')  || (nivelAcceso == '6')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/tablas.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Tablas</h3>\n            </div>\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/ejercicios']\" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '2') || (nivelAcceso == '5')  || (nivelAcceso == '6')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/ejercicios.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Ejercicios</h3>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/dietas']\" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '3') || (nivelAcceso == '5')  || (nivelAcceso == '7')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/dietas.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Dietas</h3>\n            </div>\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/seguimiento']\" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '3') || (nivelAcceso == '5')  || (nivelAcceso == '7')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/seguimiento.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Seguimiento</h3>\n            </div>\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/clases']\" *ngIf=\"(nivelAcceso == '1') || (nivelAcceso == '4') || (nivelAcceso == '6')  || (nivelAcceso == '7')  || (nivelAcceso == '8')\">\n                <img src=\"/assets/imagenes/clases.png\" alt=\"Acceso a tablas\">\n                <h3 class=\"col-sm-12\">Clases</h3>\n            </div>\n            <div class=\"col-sm-12 col-md tarjeta row \" [routerLink]=\"['/usuarios']\"  *ngIf=\"nivelAcceso == ('1')\">\n                <img src=\"/assets/imagenes/usuarios.png\" alt=\"Acceso a usuarios\">\n                <h3 class=\"col-sm-12\">Usuarios</h3>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n\n\n  // #region VARIABLES\n\n  // Utiliaremos para actualizar nombre de usuario al logear\n  public static updateUserStatus: Subject<boolean> = new Subject();\n\n  // Var para comprobar si la nav esta expandida o no\n  navExpandida = false;\n\n  // Datos de usuario logeado\n  usuarioLogeado;\n\n  //#endregion\n\n  constructor(\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private router: Router,\n  ) {\n    // Hacemos que se actualize cuando usuario se logee\n    NavbarComponent.updateUserStatus.subscribe(res => {\n      this.usuarioLogeado = this.localService.getTokenData();\n    });\n  }\n\n  ngOnInit(): void {\n    this.actualizarUsuarioLogeado();\n  }\n\n  //#region FUNCIONES\n\n  // Funcion con la que expandimos y cerramos el navbar para desplegar las opciones en la version movil\n  expandirNav() {\n    if (screen.width < 768) {\n      if (!this.navExpandida) {\n        $('#navbar').height(370);\n\n        $('.navbarDiv').removeClass('collapse');\n        $('.navbarDiv').addClass('show');\n\n        $('.botoncolapsar').attr('aria-expanded', 'true');\n        $('.botoncolapsar').removeClass('collapsed');\n        this.navExpandida = true;\n      } else {\n        $('#navbar').height(90);\n\n        $('.navbarDiv').addClass('collapse');\n        $('.navbarDiv').removeClass('show');\n\n        $('.botoncolapsar').attr('aria-expanded', 'false');\n        $('.botoncolapsar').addClass('collapsed');\n\n        this.navExpandida = false;\n      }\n    }\n\n  }\n\n  // Funcion con la que eliminamos el token generado y cerramos sesion\n  cerrarSesion(): void {\n    this.localService.cerrarSesion();\n  }\n\n  // Comporbamos si el usuario esta logeado para mostrar menus de navbar o no\n  comprobarAutentificacion() {\n    return this.localService.comprobarAutentificacion();\n  }\n\n  // Actualizamos usuario logeado al acceder\n  actualizarUsuarioLogeado() {\n    this.usuarioLogeado = this.localService.getTokenData();\n  }\n\n  //#endregion\n}\n","<nav class=\"navbar navbar-expand-sm navbar-light\" id=\"navbar\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\" (click)=\"expandirNav()\">\n        <img src=\"/assets/imagenes/logoImpacto.png\">\n    </a>\n    <button class=\"navbar-toggler botoncolapsar collapsed\" type=\"button\" \n        (click)=\"expandirNav()\" *ngIf=\"comprobarAutentificacion()\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse navbarDiv\" id=\"navbarSupportedContent\" *ngIf=\"comprobarAutentificacion()\" >\n        <ul class=\"navbar-nav mr-auto\" (click)=\"expandirNav()\" >\n            <li class=\"nav-item \"  [routerLink]=\"['/tablas']\" [routerLinkActive]=\"'activado'\" \n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '2') || (usuarioLogeado.acceso == '5')  || (usuarioLogeado.acceso == '6')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\" >Tablas </a>\n            </li>\n            <li class=\"nav-item \" [routerLink]=\"['/ejercicios']\" [routerLinkActive]=\"'activado'\"\n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '2') || (usuarioLogeado.acceso == '5')  || (usuarioLogeado.acceso == '6')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\">Ejercicios</a>\n            </li>\n            <li class=\"nav-item \" [routerLink]=\"['/dietas']\" [routerLinkActive]=\"'activado'\"\n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '3') || (usuarioLogeado.acceso == '5')  || (usuarioLogeado.acceso == '7')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\">Dietas</a>\n            </li>\n            <li class=\"nav-item \" [routerLink]=\"['/seguimiento']\" [routerLinkActive]=\"'activado'\"\n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '3') || (usuarioLogeado.acceso == '5')  || (usuarioLogeado.acceso == '7')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\">Seguimiento</a>\n            </li>\n            <li class=\"nav-item \" [routerLink]=\"['/clases']\" [routerLinkActive]=\"'activado'\"\n                *ngIf=\"(usuarioLogeado.acceso == '1') || (usuarioLogeado.acceso == '4') || (usuarioLogeado.acceso == '6')  || (usuarioLogeado.acceso == '7')  || (usuarioLogeado.acceso == '8')\">\n                <a class=\"nav-link\">Clases</a>\n            </li>\n            <li class=\"nab-item \" [routerLink]=\"['/usuarios']\" [routerLinkActive]=\"'activado'\" *ngIf=\"usuarioLogeado.acceso == '1'\">\n                <a class=\"nav-link\"  >Usuarios</a>\n            </li>\n            \n        </ul>\n        <ul class=\"navbar-nav \">\n            <li class=\"nav-item dropdown \">\n                <a class=\"nav-link dropleft-toggle \" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                    <i class=\"fas fa-user fa-2x ml-2\"></i>\n                    {{usuarioLogeado.nombre}}\n\n                </a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\"  (click)=\"expandirNav()\">\n                    <a class=\"dropdown-item\" [routerLink]=\"['/usuarios/datosUsuario',usuarioLogeado.id]\">Cambiar contrase√±a</a>\n                    <a class=\"dropdown-item\" href=\"/\" (click)=\"cerrarSesion()\">Cerrar sesion</a>\n                </div>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-seguimiento',\n  templateUrl: './seguimiento.component.html',\n  styleUrls: ['./seguimiento.component.scss']\n})\nexport class SeguimientoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>seguimiento works!</p>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { Tabla, Ejercicio, Dia } from 'src/app/modelos/tabla';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { TablasService } from 'src/app/servicios/tablasService';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-crear-tablas',\n  templateUrl: './crear-tablas.component.html',\n  styleUrls: ['./crear-tablas.component.scss']\n})\n\nexport class CrearTablasComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Formulario\n  formNuevaTabla: FormGroup;\n\n  // idUsuario que nos mandamos desde tablas para crear la tabla al usuario\n  idUsuario;\n\n  // Arrays donde guardaremos los ejercicios de cada dia\n  ejerciciosDia1: Array<Ejercicio> = [];\n  ejerciciosDia2: Array<Ejercicio> = [];\n  ejerciciosDia3: Array<Ejercicio> = [];\n  ejerciciosDia4: Array<Ejercicio> = [];\n  ejerciciosDia5: Array<Ejercicio> = [];\n\n  // Array donde guardaremos los dias de la tabla con sus ejercicios\n  dias: Array<Dia> = [];\n\n  // Tabla que mandaremos con la api a la bbdd\n  tabla: Tabla;\n\n  //#endregion\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor idUsuario que nos manda el componente tablas\n    private tablasService: TablasService, // Servicio para interactuar con API con TABLAS\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService // Servicio que nos creara notificaciones\n  ) {\n    this.setformNuevaTabla();\n  }\n\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idUsuario = params.idUsuario;\n      }\n    );\n  }\n\n  //#region FUNCIONES\n\n  private setformNuevaTabla() {\n    this.formNuevaTabla = this.formBuilder.group({\n      nombreTabla: new FormControl(null, Validators.required),\n      ejercicioDia1: new FormControl(null, Validators.required),\n      repeticionesDia1: new FormControl(null, Validators.required),\n      ejercicioDia2: new FormControl(null, Validators.required),\n      repeticionesDia2: new FormControl(null, Validators.required),\n      ejercicioDia3: new FormControl(null, Validators.required),\n      repeticionesDia3: new FormControl(null, Validators.required),\n      ejercicioDia4: new FormControl(null, Validators.required),\n      repeticionesDia4: new FormControl(null, Validators.required),\n      ejercicioDia5: new FormControl(null, Validators.required),\n      repeticionesDia5: new FormControl(null, Validators.required),\n    });\n  }\n\n  // Funcion que usamos para a√±adir los ejercicios a cada dia en su correspondiente array\n  anadirEjercicio(dia, inputEjer, inputRep) {\n    const ejercicio = ({\n      nombre: this.formNuevaTabla.get(inputEjer).value,\n      repeticiones: this.formNuevaTabla.get(inputRep).value,\n      pesoMax: ''\n    });\n    dia.push(ejercicio);\n    // Borramos inputs para a√±adir otro ejercicio\n    this.formNuevaTabla.get(inputEjer).setValue(null);\n    this.formNuevaTabla.get(inputRep).setValue(null);\n  }\n\n  // Funcion para borrar ejercicio del array si se quiere al dar al boton\n  borrarEjercicio(dia, i) {\n    dia.splice(i, 1);\n  }\n\n  // Funcion guardamos tabla y mandamos con servicio a la api para guardar en BBDD\n  guardarTabla() {\n    // Comporbamos si el dia tiene ejercicios y si es asi lo a√±adimos a los dias\n    if (this.ejerciciosDia1.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia1\n      }));\n    }\n    if (this.ejerciciosDia2.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia2\n      }));\n    }\n    if (this.ejerciciosDia3.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia3\n      }));\n    }\n    if (this.ejerciciosDia4.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia4\n      }));\n    }\n    if (this.ejerciciosDia5.length > 0) {\n      this.dias.push(({\n        ejercicio: this.ejerciciosDia5\n      }));\n    }\n    // Si hay dias rellenados creamos la tabla y la mandamos a la api\n    if (this.dias.length > 0) {\n      this.tabla = ({\n        usuario: this.idUsuario,\n        nombre: this.formNuevaTabla.controls.nombreTabla.value,\n        dia: this.dias\n      });\n\n      // Mandamos tabla con api a la bbdd\n      this.tablasService.crearTabla(this.tabla).subscribe(res => {\n        // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n        this.toastr.success('', 'Tabla creada correctamente', {\n          timeOut: 3000,\n        });\n        this.router.navigate(['/tablas']);\n      }, err => {\n        // Si da error lo mostramos\n        this.toastr.error('Error al crear tabla');\n      });\n    } else {\n      // Si no hay ejercicio en tabla mostramos notificacion\n      this.toastr.warning('', 'No hay ningun ejercicio en la tabla', {\n        timeOut: 3000,\n      });\n    }\n  }\n\n  //#endregion\n\n}\n","<section class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12\">\n            <h2 class=\"\"> Creacion de nueva tabla</h2>\n        </div>\n\n\n        <div class=\"col-sm-12 \" [formGroup]=\"formNuevaTabla\">\n            <label class=\"col-sm-12 control-label text-left labelNombreTabla\">\n                Nombre de la tabla\n                <input type=\"text\" class=\"form-control\" formControlName=\"nombreTabla\">\n            </label>\n            <div class=\"dia \">\n                <h3 class=\"col-sm-12 pl-0\">Dia 1</h3>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0  pl-0  \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia1\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia1\">\n                </label>\n                <button type=\"submit\" class=\"btn botonA√±adirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia1,'ejercicioDia1','repeticionesDia1')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia1.valid || !formNuevaTabla.controls.repeticionesDia1.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> A√±adir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia1; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\">\n                                    <button class=\"btn botonBorrarEjer mx-auto\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia1,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i>\n                                    </button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n\n            <div class=\"dia\">\n                <h3 class=\"col-sm-12 pl-0\">Dia 2</h3>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0 \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia2\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia2\">\n                </label>\n                <button type=\"submit\" class=\"btn botonA√±adirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia2,'ejercicioDia2','repeticionesDia2')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia2.valid || !formNuevaTabla.controls.repeticionesDia2.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> A√±adir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia2; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\"><button class=\"btn botonBorrarEjer\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia2,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i></button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n            <div class=\"dia\">\n                <h3 class=\"col-sm-12 pl-0\">Dia 3</h3>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0 \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia3\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia3\">\n                </label>\n                <button type=\"submit\" class=\"btn botonA√±adirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia3,'ejercicioDia3','repeticionesDia3')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia3.valid || !formNuevaTabla.controls.repeticionesDia3.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> A√±adir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia3; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\"><button class=\"btn botonBorrarEjer\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia3,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i></button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n            <div class=\"dia\">\n                <h3 class=\"col-sm-12 pl-0\">Dia 4</h3>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0 \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia4\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia4\">\n                </label>\n                <button type=\"submit\" class=\"btn botonA√±adirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia4,'ejercicioDia4','repeticionesDia4')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia4.valid || !formNuevaTabla.controls.repeticionesDia4.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> A√±adir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia4; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\"><button class=\"btn botonBorrarEjer\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia4,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i></button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n            <div class=\"dia\">\n                <h3 class=\"col-sm-12 pl-0\">Dia 5</h3>\n                <label class=\"control-label text-left col-md-7 col-sm-12 pl-0  pl-0 \"> Ejercicio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"ejercicioDia5\">\n                </label>\n                <label class=\"control-label text-left col-md-3 col-sm-12 pl-0\"> Repeticiones\n                    <input type=\"text\" class=\"form-control\" formControlName=\"repeticionesDia5\">\n                </label>\n                <button type=\"submit\" class=\"btn botonA√±adirEjer col-md-2 mx-auto\"\n                    (click)=\"anadirEjercicio(ejerciciosDia5,'ejercicioDia5','repeticionesDia5')\"\n                    [disabled]=\"(!formNuevaTabla.controls.ejercicioDia5.valid || !formNuevaTabla.controls.repeticionesDia5.valid)\">\n                    <i class=\"fas fa-plus-circle\"></i> A√±adir ejercicio\n                </button>\n                <div class=\"table-responsive tablaEjercicios col-sm-12 \">\n                    <table class=\"table table-dark   \">\n                        <thead class=\"thead-dark\">\n                            <tr class=\"d-flex\">\n                                <th class=\"col-4 col-md-7\">Ejercicio</th>\n                                <th class=\"col-5 col-md-3\">Repeticiones</th>\n                                <th class=\"col-3 col-md-2\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let ejercicio of ejerciciosDia5; let i = index\" class=\"d-flex\">\n                                <td class=\"col-4 col-md-7\"> {{ejercicio.nombre}}</td>\n                                <td class=\"col-5 col-md-3\"> {{ejercicio.repeticiones}}</td>\n                                <td class=\"col-3 col-md-2 text-center\"><button class=\"btn botonBorrarEjer\"\n                                        (click)=\"borrarEjercicio(ejerciciosDia5,i)\">\n                                        <i class=\"fas fa-trash-alt\"></i></button>\n                                </td>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-center p-3\">\n                <button type=\"submit\" class=\"btn botonGuardarTabla col-sm-12\" (click)=\"guardarTabla()\">\n                    <i class=\"fas fa-save\"></i>Guardar tabla\n                </button>\n            </div>\n\n        </div>\n\n    </div>\n\n\n</section>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { ConfiguracionBuscador } from '../adicionales/buscador/buscador.component';\nimport { Tabla } from 'src/app/modelos/tabla';\nimport { LocalService } from 'src/app/servicios/localService';\nimport { TablasService } from 'src/app/servicios/tablasService';\n\n// tslint:disable: member-ordering\n@Component({\n  selector: 'app-tablas',\n  templateUrl: './tablas.component.html',\n  styleUrls: ['./tablas.component.scss']\n})\nexport class TablasComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Array donde almacenamos las tablas que nos devuelve la api para el usuario seleccionado o logeado\n  tablasUsuario: Tabla[] = [];\n\n  // Nivel de acceso de usuario logeado\n  acceso = this.localService.getAccesoUsuario();\n\n  // Id de usuario logeado\n  idUsuario = null;\n\n  //#endregion\n\n  constructor(\n    private usuariosService: UsuariosService, // Servicio para interactuar con API\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private tablasService: TablasService // Servicio para interactuar con API con TABLAS\n  ) {\n  }\n\n  ngOnInit(): void {\n    // Si accceso es 1 seria admin por lo que usaria el buscador para cargar tablas de usuario\n    // si es otro nivel es un usuario, cargamos sus tablas\n    if (this.acceso !== '1') {\n      this.idUsuario = this.localService.getIdUsuario();\n      this.cargarTablasUsuario(this.idUsuario);\n    } else {\n      // Cargamos los nombres de usuarios de BD en el componente de buscador\n      this.usuariosService.usuariosNivelAcceso([2, 5, 6, 8]).subscribe(data => (\n        this.configBuscador.values = data.usuarios\n      ));\n    }\n  }\n\n  //#region COMPONENTES\n\n  // Buscador de usuarios\n  configBuscador: ConfiguracionBuscador = {\n    values: [],\n    selected: null,\n    filter: 'nombre',\n    placeholder: 'Seleccione un Usuario',\n    empty: 'No hay usuarios con ese nombre',\n    fontSize: '14px',\n    fontColor: '#000000',\n    render: (value) => value.nombre\n  };\n\n  // Funcion utilizada pada cuando se selecciona usuario del autocomplete en la version admin\n  selectUsuario($event) {\n    if ($event != null) {\n      this.idUsuario = $event._id;\n      this.cargarTablasUsuario(this.idUsuario);\n    } else {\n      this.tablasUsuario = []; // Si selecciona fuera vaciamos las tablas por si se cargaron antes\n      this.idUsuario = null; // Tambien vaciamos el usuario ya que no habria ninguno seleccionado\n    }\n  }\n\n  // Buscamos con api las tablas del usuario seleccionado y las cargamos\n  cargarTablasUsuario(idUsuario) {\n    this.tablasService.listarTablasUsuario(idUsuario).subscribe(data => {\n      this.tablasUsuario = data.tablas;\n    });\n  }\n  //#endregion\n}\n","<section class=\"col-sm-12 pt-4\">\n        <div class=\"row\" *ngIf=\"acceso == '1'\">  \n            <div class=\"col-sm-12 d-flex justify-content-center\">\n                <div class=\"col-md-4 pt-5\">\n                    <buscador-component (selected)=\"selectUsuario($event)\" [config]=\"configBuscador\">\n                    </buscador-component>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row d-flex justify-content-center \">\n            <div class=\"col-sm-12 col-md-2 tarjeta row \"  [routerLink]=\"['/tablas/crear',idUsuario]\" *ngIf=\"(acceso !='1') || (acceso == '1' && idUsuario != null)\">\n                <i class=\"fas fa-plus-square fa-4x\"></i>\n                <!-- <img src=\"/assets/imagenes/prueba/image.png\" alt=\"Acceso a tablas\"> -->\n                <h4 class=\"col-sm-12\">A√±adir tabla</h4>\n            </div>\n            <div class=\"col-sm-12 col-md-2 tarjeta row \" *ngFor=\"let tabla of tablasUsuario\"   [routerLink]=\"['/tablas/visualizar',tabla._id]\">\n                <i class=\"fas fa-calendar-alt fa-4x\"></i>\n                \n                <h4 class=\"col-sm-12\">{{tabla.nombre}}</h4>\n            </div>\n        </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Tabla, Tablas, CambiosPeso } from 'src/app/modelos/tabla';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { TablasService } from 'src/app/servicios/tablasService';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-visualizar-tablas',\n  templateUrl: './visualizar-tablas.component.html',\n  styleUrls: ['./visualizar-tablas.component.scss']\n})\nexport class VisualizarTablasComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // id de la tabla seleccionada que nos mandamos desde el menu de tablas\n  idTabla;\n\n  // tabla correspondiente al idTabla que nos devuelve la API\n  tabla: Tabla;\n\n  // Formulario para guardar peso maximo de ejercicio\n  formPesoMax: FormGroup;\n\n  // Array donde guardaremos los pesos maximos guardados para despues mandarlos con api a BBDD\n  cambiosPesoMax: Array<CambiosPeso> = [];\n\n  //#endregion\n\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor idTabla que nos manda el componente tablas\n    private usuariosService: UsuariosService, // Servicio para interactuar con API\n    private tablasService: TablasService, // Servicio para interactuar con API con TABLAS\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService // Servicio que nos creara notificaciones\n  ) {\n    this.setformPesoMax();\n  }\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idTabla = params.idTabla;\n      }\n    );\n\n    this.tablasService.buscarTabla(this.idTabla).subscribe(data => (\n      // La api nos devuelve array de tablas por lo que cogemos el primero ya que solo hay 1\n      this.tabla = ({\n        _id: data.tabla[0]._id,\n        usuario: data.tabla[0].usuario,\n        nombre: data.tabla[0].nombre,\n        dia: data.tabla[0].dia,\n      })\n    ));\n  }\n\n\n  //#region FUNCIONES\n\n  private setformPesoMax() {\n    this.formPesoMax = this.formBuilder.group({\n      pesoMax: new FormControl(null)\n    });\n  }\n\n  // Funcioon que guardara el nuevo peso al notar un cambio en el input correspondiente\n  actualizarPeso(idEjercicio, idDia) {\n    const pesoMaxActualizado = {\n      idTabla: this.idTabla,\n      idDia,\n      idEjercicio,\n      pesoMax: this.formPesoMax.controls.pesoMax.value\n    };\n    // Por cada peso guardamos un objeto en el array de cambios que luego mandaremos a la api\n    this.cambiosPesoMax.push(pesoMaxActualizado);\n  }\n\n  // Funcion con la que mandamos un array con todos los pesos cambiados a la bbdd con la api\n  actualizarPesosTabla() {\n    this.tablasService.actualizarPesoMax(this.cambiosPesoMax).subscribe(res => {\n      // Si se actualizan sin problema mandamos mensaje de todo OK\n      this.toastr.success('', 'Pesos actualizados', {\n        timeOut: 3000,\n      });\n    }, err => {\n      // Si da error lo mostramos\n        this.toastr.error('Error al actualziar pesos');\n    });\n\n    this.toastr.success('', 'Pesos actualizados', {\n      timeOut: 3000,\n    });\n    this.cambiosPesoMax = [];\n  }\n  //#endregion\n}\n\n","<section class=\"col-sm-12 \">\n    <div class=\"row d-flex justify-content-center\" *ngIf=\"tabla\">\n        <h2 class=\"col-sm-12 text-center\"> {{tabla.nombre}}</h2>\n        <div class=\"col-md-8 dia\" *ngFor=\"let dia of tabla.dia;index as i\">\n            <h3>Dia {{i+1}}</h3>\n            <div class=\"table-responsive\">\n                <table class=\"table table-dark  \">\n                    <thead class=\"thead-dark\">\n                        <tr class=\"d-flex\">\n                            <th class=\"col-4 col-md-7\">Ejercicio</th>\n                            <th class=\"col-5 col-md-3\">Repeticiones</th>\n                            <th class=\"col-3 col-md-2\">Peso Max</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let ejercicio of dia.ejercicio\" class=\"d-flex\">\n                            <td class=\"col-4 col-md-7\">{{ejercicio.nombre}}</td>\n                            <td class=\"col-5 col-md-3\">{{ejercicio.repeticiones}}</td>\n                            <td class=\"col-3 col-md-2\">\n                                <div [formGroup]=\"formPesoMax\">\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"pesoMax\"\n                                        (change)=\"actualizarPeso(ejercicio._id,dia._id)\" placeholder=\"{{ejercicio.pesoMax}}\">\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"col-sm-12 d-flex justify-content-center\">\n                <button type=\"submit\" class=\"btn botonGuardarPesos col-md-8 mx-auto\" (click)=\"actualizarPesosTabla()\"\n                    [disabled]=\"cambiosPesoMax.length==0\">\n                    <i class=\"fas fa-plus-circle\"></i> Guardar pesos nuevos\n                </button>\n            </div>\n\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { FormBuilder, Form, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Usuario } from 'src/app/modelos/usuario';\n\n@Component({\n  selector: 'app-crear-usuario',\n  templateUrl: './crear-usuario.component.html',\n  styleUrls: ['./crear-usuario.component.scss']\n})\nexport class CrearUsuarioComponent implements OnInit {\n\n  //#region VARIABLES\n\n  // Formulario del componente\n  formNuevoUsuario: FormGroup;\n\n  // Variable donde guardaremos al nuevo usuario\n  nuevoUsuario: Usuario;\n\n  //#endregion\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private usuariosService: UsuariosService // Servicio para crear el usuario\n  ) { }\n\n  ngOnInit(): void {\n    this.setformNuevoUsuario();\n  }\n\n\n  //#region FUNCIONES\n  private setformNuevoUsuario() {\n    this.formNuevoUsuario = this.formBuilder.group({\n      dniUsuario: new FormControl(null, Validators.required),\n      nombreUsuario: new FormControl(null, Validators.required),\n      accesoUsuario: new FormControl(null, Validators.required),\n      domicilioUsuario: new FormControl(null),\n      telefonoUsuario: new FormControl(null),\n    });\n  }\n\n  crearUsuario() {\n    this.nuevoUsuario = ({\n      dni: this.formNuevoUsuario.controls.dniUsuario.value,\n      nombre: this.formNuevoUsuario.controls.nombreUsuario.value,\n      password: '123456',\n      acceso: this.formNuevoUsuario.controls.accesoUsuario.value,\n      domicilio: this.formNuevoUsuario.controls.domicilioUsuario.value,\n      telefono: this.formNuevoUsuario.controls.telefonoUsuario.value,\n    });\n\n    // Mandamos tabla con api a la bbdd\n    this.usuariosService.registrarUsuario(this.nuevoUsuario).subscribe(res => {\n      // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n      this.toastr.success('', 'Usuario creado correctamente correctamente', {\n        timeOut: 3000,\n      });\n      this.router.navigate(['/usuarios']);\n    }, err => {\n      // Si da error lo mostramos\n        this.toastr.error('DNI ya registrado');\n    });\n  }\n\n  nivelAcceso() {\n    const acceso = this.formNuevoUsuario.controls.accesoUsuario.value;\n    if (acceso === '1') {\n      return 'Administrador';\n    }\n    if (acceso === '2') {\n      return 'Ejercicio';\n    }\n    if (acceso === '3') {\n      return 'Nutricion';\n    }\n    if (acceso === '4') {\n      return 'Clases';\n    }\n    if (acceso === '5') {\n      return 'Ejercicio + Nutricion';\n    }\n    if (acceso === '6') {\n      return 'Ejercicio + Clases';\n    }\n    if (acceso === '7') {\n      return 'Nutricion + Clases';\n    }\n    if (acceso === '8') {\n      return 'Ejercicio + Nutricion + Clases';\n    }\n  }\n  //#endregion\n}\n","<section class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12 text-center\">\n            <h2 class=\"\"> Creacion de nuevo usuario </h2>\n        </div>\n\n        <div class=\"col-sm-6 \" [formGroup]=\"formNuevoUsuario\">\n            <label class=\"col-sm-12 col-md-12 control-label text-left labelNombreTabla\">\n                DNI\n                <input type=\"text\" class=\"form-control\" formControlName=\"dniUsuario\">\n            </label>\n            <label class=\"control-label text-left col-sm-12 col-md-12 \"> Nombre\n                <input type=\"text\" class=\"form-control\" formControlName=\"nombreUsuario\">\n            </label>\n            <label class=\"control-label text-left col-sm-12 col-md-12\"> Domicilio\n                <input type=\"text\" class=\"form-control\" formControlName=\"domicilioUsuario\">\n            </label>\n            <label class=\"control-label text-left col-sm-12 col-md-12\"> Telefono\n                <input type=\"text\" class=\"form-control\" formControlName=\"telefonoUsuario\">\n            </label>\n            <label class=\"control-label text-left col-sm-12 col-md-12\">Nivel de acceso del usuario\n                <select class=\"form-control\" formControlName=\"accesoUsuario\">\n                    <option value=\"2\" selected >Ejercicio</option>\n                    <option value=\"3\">Nutricion</option>\n                    <option value=\"4\">Clases</option>\n                    <option value=\"5\">Ejercicio + Nutricion</option>\n                    <option value=\"6\">Ejercicio + Clases</option>\n                    <option value=\"7\">Nutricion + Clases</option>\n                    <option value=\"8\">Ejercicio + Nutricion + Clases</option>\n                    <option value=\"1\">Administrador</option>\n                </select>\n            </label>\n\n        </div>\n\n        <div class=\"row d-flex justify-content-center col-sm-12 col-md-6\">\n            <div class=\"col-sm-10 tarjeta row \">\n                <i class=\"fas fa-user fa-4x col-sm-2 text-center\"></i>\n                <div class=\"col-sm-10\">\n                    <h5 class=\"col-sm-12\">DNI: {{formNuevoUsuario.controls.dniUsuario.value}}</h5>\n                    <h5 class=\"col-sm-12\">Nombre: {{formNuevoUsuario.controls.nombreUsuario.value}}</h5>\n                    <h5 class=\"col-sm-12\">Domicilio: {{formNuevoUsuario.controls.domicilioUsuario.value}}</h5>\n                    <h5 class=\"col-sm-12\">Telefono: {{formNuevoUsuario.controls.telefonoUsuario.value}}</h5>\n                    <h5 class=\"col-sm-12\">Acceso: {{nivelAcceso()}}</h5>\n                </div>\n            </div>\n            <button type=\"submit\" class=\"btn botonCrearUsuario col-sm-6 mx-auto\" (click)=\"crearUsuario()\"\n                [disabled]=\"(!formNuevoUsuario.valid)\">\n                <i class=\"fas fa-save\"></i> Guardar usuario\n            </button>\n\n        </div>\n        <div class=\"col-sm-12 col-md-9 pt-4\">\n            <div class=\"alert alert-dark\" role=\"alert\">\n                El nuevo usuario tendra de contrase√±a <strong>'123456'</strong>, tendra que cambiarla cuando entre en la aplicacion\n              </div>\n        </div>\n\n\n    </div>\n</section>","import { FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { Usuario } from 'src/app/modelos/usuario';\nimport { LocalService } from 'src/app/servicios/localService';\n\n@Component({\n  selector: 'app-datos-usuario',\n  templateUrl: './datos-usuario.component.html',\n  styleUrls: ['./datos-usuario.component.scss']\n})\nexport class DatosUsuarioComponent implements OnInit {\n\n\n  //#region VARIABLES\n\n  // idUsuario del que mostramos datos\n  idUsuario;\n\n  // Variable donde guardaremos el usuario\n  usuario: Usuario;\n\n  // Formulario del componente actualizar datos\n  formActualizarDatosUsuario: FormGroup;\n\n  // Formulario del componente cambiar contrase√±a\n  formCambiarContrasena: FormGroup;\n\n  // Actualizando datos\n  actualizandoDatos = false;\n\n  // Acceso usuario logeado\n  usuarioLogeado = this.localService.getTokenData();\n\n  // Variable true si hay cambios en formulario datos\n  cambiosFormDatosComp = false;\n\n  //#endregion\n  constructor(\n    private rutaActiva: ActivatedRoute, // Clase con la que cogemos de URL el valor idUsuario que nos manda el componente tablas\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService, // Servicio que nos creara notificaciones\n    private usuariosService: UsuariosService, // Servicio para crear el usuario\n    private localService: LocalService // Servicio para crear el usuario\n  ) { }\n\n  ngOnInit(): void {\n    // Cogemos el valor que nos manda la URL para idTabla\n    this.rutaActiva.params.subscribe(\n      (params: Params) => {\n        this.idUsuario = params.idUsuario;\n      }\n    );\n    this.usuariosService.buscarUsuario(this.idUsuario).subscribe(res => {\n      this.usuario = res.usuario;\n      this.datosDeUsuarioAlFormulario();\n    });\n    this.setformActualizarDatosUsuario();\n    this.setformCambiarContrasena();\n  }\n\n  //#region FUNCIONES\n  setformActualizarDatosUsuario() {\n    this.formActualizarDatosUsuario = this.formBuilder.group({\n      dniUsuario: new FormControl(null, Validators.required),\n      nombreUsuario: new FormControl(null, Validators.required),\n      accesoUsuario: new FormControl(null, Validators.required),\n      domicilioUsuario: new FormControl(null),\n      telefonoUsuario: new FormControl(null)\n    });\n  }\n  datosDeUsuarioAlFormulario() {\n    this.formActualizarDatosUsuario.controls.dniUsuario.setValue(this.usuario.dni);\n    this.formActualizarDatosUsuario.controls.nombreUsuario.setValue(this.usuario.nombre);\n    this.formActualizarDatosUsuario.controls.accesoUsuario.setValue(this.usuario.acceso);\n    this.formActualizarDatosUsuario.controls.domicilioUsuario.setValue(this.usuario.domicilio);\n    this.formActualizarDatosUsuario.controls.telefonoUsuario.setValue(this.usuario.telefono);\n\n  }\n\n  // Funcion al detectar cambios en el formulario\n  cambiosFormDatos() {\n    this.cambiosFormDatosComp = true;\n\n  }\n  setformCambiarContrasena() {\n    this.formCambiarContrasena = this.formBuilder.group({\n      passwordVieja: new FormControl(null, Validators.required),\n      passwordNueva: new FormControl(null, Validators.required),\n      passwordNuevaConfirmacion: new FormControl(null, Validators.required),\n    });\n  }\n  modificarDatos() {\n    const usuarioActualizado = ({\n      id: this.usuario._id,\n      dni: this.formActualizarDatosUsuario.controls.dniUsuario.value,\n      nombre: this.formActualizarDatosUsuario.controls.nombreUsuario.value,\n      acceso: this.formActualizarDatosUsuario.controls.accesoUsuario.value,\n      domicilio: this.formActualizarDatosUsuario.controls.domicilioUsuario.value,\n      telefono: this.formActualizarDatosUsuario.controls.telefonoUsuario.value,\n    });\n\n    // Mandamos usuario a la api para modificar sus datos\n    this.usuariosService.modificarDatosUsuario(usuarioActualizado).subscribe(res => {\n      // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n      this.toastr.success('', 'Usuario modificado correctamente', {\n        timeOut: 3000,\n      });\n      this.cambiosFormDatosComp = false;\n    }, err => {\n      // Si da error lo mostramos\n      this.toastr.error('Error al modificar datos');\n    });\n  }\n\n  nivelAcceso() {\n    const acceso = this.usuario.acceso;\n    if (acceso === '1') {\n      return 'Administrador';\n    }\n    if (acceso === '2') {\n      return 'Ejercicio';\n    }\n    if (acceso === '3') {\n      return 'Nutricion';\n    }\n    if (acceso === '4') {\n      return 'Clases';\n    }\n    if (acceso === '5') {\n      return 'Ejercicio + Nutricion';\n    }\n    if (acceso === '6') {\n      return 'Ejercicio + Clases';\n    }\n    if (acceso === '7') {\n      return 'Nutricion + Clases';\n    }\n    if (acceso === '8') {\n      return 'Ejercicio + Nutricion + Clases';\n    }\n  }\n  cambiarContrasena() {\n    const contraVieja = this.formCambiarContrasena.controls.passwordVieja.value;\n    const contraNueva = this.formCambiarContrasena.controls.passwordNueva.value;\n    const contranNuevaConf = this.formCambiarContrasena.controls.passwordNuevaConfirmacion.value;\n    const idUsuario = this.usuario._id;\n\n    if (contraNueva === contranNuevaConf) {\n      this.usuariosService.cambiarContrase√±a(contraVieja, contraNueva, idUsuario).subscribe(res => {\n        // Si se crea correctamente mandamos mensaje y redirigimos a tablas\n        this.toastr.success('', 'Contrase√±a cambiada con exito', {\n          timeOut: 3000,\n        });\n        this.router.navigate(['/menu']);\n      }, err => {\n        // Si da error lo mostramos\n        this.toastr.error('Contrase√±a incorrecta');\n      });\n    }\n  }\n  //#endregion\n}\n","<section class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-sm-12 text-center\">\n            <h2 class=\"\"> Datos de usuario </h2>\n        </div>\n\n\n        <div class=\"row d-flex justify-content-center col-sm-12 col-md-9\" *ngIf=\"usuario\">\n            <div class=\"col-sm-10 tarjeta row \">\n                <i class=\"fas fa-user fa-4x col-sm-2 text-center\"></i>\n                <div class=\"col-sm-10\">\n                    <h5 class=\"col-sm-12\">DNI: {{usuario.dni}}</h5>\n                    <h5 class=\"col-sm-12\">Nombre: {{usuario.nombre}}</h5>\n                    <h5 class=\"col-sm-12\">Domicilio: {{usuario.domicilio}}</h5>\n                    <h5 class=\"col-sm-12\">Telefono: {{usuario.telefono}}</h5>\n                    <h5 class=\"col-sm-12\">Acceso: {{nivelAcceso()}}</h5>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"usuarioLogeado.acceso === '1'\" class=\"row d-flex justify-content-center col-sm-12 col-md-9 m-0\">\n            <div class=\"col-sm-10 \" [formGroup]=\"formActualizarDatosUsuario\" (change)=\"cambiosFormDatos()\">\n                <label class=\"col-sm-12 col-md-6 control-label text-left labelNombreTabla\">\n                    DNI\n                    <input type=\"text\" class=\"form-control\" formControlName=\"dniUsuario\"  >\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6 \"> Nombre\n                    <input type=\"text\" class=\"form-control\" formControlName=\"nombreUsuario\" >\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6\"> Domicilio\n                    <input type=\"text\" class=\"form-control\" formControlName=\"domicilioUsuario\" >\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6\"> Telefono\n                    <input type=\"text\" class=\"form-control\" formControlName=\"telefonoUsuario\" >\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-12\">Nivel de acceso del usuario\n                    <select class=\"form-control\" formControlName=\"accesoUsuario\" >\n                        <option value=\"2\" selected>Ejercicio</option>\n                        <option value=\"3\">Nutricion</option>\n                        <option value=\"4\">Clases</option>\n                        <option value=\"5\">Ejercicio + Nutricion</option>\n                        <option value=\"6\">Ejercicio + Clases</option>\n                        <option value=\"7\">Nutricion + Clases</option>\n                        <option value=\"8\">Ejercicio + Nutricion + Clases</option>\n                        <option value=\"1\">Administrador</option>\n                    </select>\n                </label>\n            </div>\n            <div class=\"row d-flex justify-content-center col-sm-12 col-md-12 pt-4 m-0\">\n                <button type=\"submit\" class=\"btn botonCrearUsuario col-sm-6 mx-auto \"  [disabled]=\"!cambiosFormDatosComp\" (click)=\"modificarDatos()\">\n                    <i class=\"fas fa-save\"></i> Modificar datos del usuario\n                </button>\n            </div>\n        </div>\n\n        <div  class=\"row d-flex justify-content-center col-sm-12 col-md-9 m-0 mb-3\">\n            <div class=\"col-sm-10 \" [formGroup]=\"formCambiarContrasena\">\n                <label class=\"control-label text-left col-sm-12 col-md-12\"> Contrase√±a antigua\n                    <input type=\"password\" class=\"form-control\" formControlName=\"passwordVieja\">\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6\"> Contrase√±a nueva\n                    <input type=\"password\" class=\"form-control\" formControlName=\"passwordNueva\">\n                </label>\n                <label class=\"control-label text-left col-sm-12 col-md-6\"> Repetir contrase√±a nueva\n                    <input type=\"password\" class=\"form-control\" formControlName=\"passwordNuevaConfirmacion\">\n                </label>\n                <div class=\"row d-flex justify-content-center col-sm-12 col-md-12 pt-4 m-0\">\n                    <button type=\"submit\" class=\"btn botonCrearUsuario col-sm-6 mx-auto \" [disabled]=\"!formCambiarContrasena.valid\" (click)=\"cambiarContrasena()\">\n                        <i class=\"fas fa-save\"></i> Cambiar contrase√±a\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { LocalService } from '../../servicios/localService';\nimport { Component, OnInit } from '@angular/core';\nimport { UsuariosService } from 'src/app/servicios/usuariosService';\nimport { Usuario } from 'src/app/modelos/usuario';\nimport { Router } from '@angular/router';\nimport { ConfiguracionBuscador } from '../adicionales/buscador/buscador.component';\n\n// tslint:disable: member-ordering\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.scss']\n})\nexport class UsuariosComponent implements OnInit {\n\n  //#endregion\n  constructor(\n    private usuariosService: UsuariosService, // Servicio para interactuar con API\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\n    private router: Router\n  ) { }\n\n  //#region VARIABLES\n\n  // Array donde almacenamos las tablas que nos devuelve la api para el usuario seleccionado o logeado\n  usuarios: Usuario[] = [];\n\n  // Nivel de acceso de usuario logeado\n  acceso = this.localService.getAccesoUsuario();\n\n  //#region COMPONENTES\n\n  ngOnInit(): void {\n    if (this.acceso !== '1') {\n      this.router.navigate(['/tablas']);\n    }\n    this.usuariosService.usuariosRegistrados().subscribe(data => (\n      this.configBuscador.values = data.usuarios,\n      this.usuarios = data.usuarios\n    ));\n  }\n\n  // Buscador de usuarios\n  configBuscador: ConfiguracionBuscador = {\n    values: [],\n    selected: null,\n    filter: 'nombre',\n    placeholder: 'Seleccione un Usuario',\n    empty: 'No hay usuarios con ese nombre',\n    fontSize: '14px',\n    fontColor: '#000000',\n    render: (value) => value.nombre\n  };\n\n  // Funcion utilizada pada cuando se selecciona usuario del autocomplete \n  selectUsuario($event) {\n    if ($event != null) {\n      // Si seleccionamos uno cargamos el array de usuarios solo con ese para mostrar su tarjeta\n      this.usuarios = [this.usuarios.find(x => x._id === $event._id)];\n    } else {\n      // Si no se selecciona se recargan los usuarios\n      this.usuariosService.usuariosRegistrados().subscribe(data => (\n        this.usuarios = data.usuarios\n      ));\n\n    }\n  }\n\n  // Recargamos usuarios siempre que se vaya a usar el buscador\n  refrescarUsuarios() {\n    this.usuariosService.usuariosRegistrados().subscribe(data => (\n      this.usuarios = data.usuarios\n    ));\n  }\n  //#endregion\n}\n","<section class=\"col-sm-12\">\n    <div class=\"row\" >  \n        <div class=\"col-sm-12 d-flex justify-content-center\">\n            <div class=\"col-md-4 pt-5\">\n                <buscador-component (selected)=\"selectUsuario($event)\" [config]=\"configBuscador\" (click)=\"refrescarUsuarios()\">\n                </buscador-component>\n            </div>\n        </div>\n    </div>\n    <div class=\"row d-flex justify-content-center \">\n        <div class=\"col-sm-12 col-md-3 tarjeta row \" [routerLink]=\"'/usuarios/crearUsuario'\" >\n            <i class=\"fas fa-plus-square fa-4x\"></i>\n            <h4 class=\"col-sm-12\">A√±adir usuario</h4>\n        </div>\n    </div>\n    <div class=\"row d-flex justify-content-center \">\n       \n        <div class=\"col-sm-12 col-md-2 tarjeta row \" *ngFor=\"let usuario of usuarios\"   [routerLink]=\"['/usuarios/datosUsuario',usuario._id]\" >\n            <i class=\"fas fa-user fa-4x\"></i>\n            <h4 class=\"col-sm-12\">{{usuario.nombre}}</h4>\n        </div>\n    </div>\n</section>","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { LocalService } from './localService';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private localService: LocalService, // Servicio para recuperar datos del localstorage\r\n    private toastr: ToastrService // Servicio que nos creara notificaciones\r\n  ) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // Cogemos el token del usuario de localstorage\r\n    const token = localStorage.getItem('TokenDeAcceso');\r\n\r\n    if (!token) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    // A√±adimos el token al header Authorization de todas las solicitudes http\r\n    const req1 = req.clone({\r\n      headers: req.headers.set('Authorization', `Bearer ${token}`),\r\n    });\r\n\r\n    // Mandamos siempre la peticion con el Authorization y si diera error 401 (Token no valido) cerramos sesion\r\n    return next.handle(req1).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n\r\n        if (err.status === 401) {\r\n          this.localService.cerrarSesion();\r\n          this.toastr.error('', 'Sesion caducada', {\r\n            timeOut: 3000,\r\n          });\r\n        }\r\n\r\n        return throwError(err);\r\n\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Tabla, Tablas, CambiosPeso } from '../modelos/tabla';\r\nimport { EjercicioEjemplo } from '../modelos/ejercicioEjemplo';\r\n\r\n@Injectable()\r\nexport class EjerciciosService {\r\n\r\n  // Direccones de servidor de back\r\n  local = 'http://localhost:3000';\r\n  heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n  ServidorBACKEND = this.local;\r\n  authSubject = new BehaviorSubject(false);\r\n\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  //#region FUNCIONES INTERACTUAR CON API\r\n\r\n  // Funcion guardar ejercicio\r\n  crearEjercicio(ejercicio: EjercicioEjemplo): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/crearEjercicio`, { ejercicio });\r\n  }\r\n\r\n  // Buscamos las tablas del usuario que mandamos a la api\r\n  listarEjerciciosZona(zona): Observable<EjercicioEjemplo[]> {\r\n    return this.httpClient.post<EjercicioEjemplo[]>(`${this.ServidorBACKEND}/listarEjerciciosZona`, { zona });\r\n  }\r\n\r\n  // Buscamos la tabla con la api en la base de datos\r\n  buscarEjercicio(idEjercicio): Observable<EjercicioEjemplo> {\r\n    return this.httpClient.post<EjercicioEjemplo>(`${this.ServidorBACKEND}/buscarEjercicio`, { idEjercicio });\r\n  }\r\n\r\n  // Guardar imagen\r\n  guardarImagen(imagen) {\r\n    return this.httpClient.post('http://localhost:4200/guardarImagen', imagen);\r\n  }\r\n\r\n  //#endregion\r\n\r\n\r\n\r\n}\r\n","import { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Injectable } from '@angular/core';\r\nimport { JsonWebToken } from '../modelos/jsonWebToken';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class LocalService {\r\n\r\n    // Variable para descifrar token\r\n    jwtHelper: JwtHelperService = new JwtHelperService();\r\n\r\n    // Creamos token\r\n    private token: string;\r\n\r\n    constructor(\r\n        private router: Router,\r\n    ) {\r\n\r\n    }\r\n\r\n    //#region FUNCIONES\r\n\r\n    // Funcion que nos eliminara el token del localStorage del navegador\r\n    cerrarSesion(): void {\r\n        this.token = '';\r\n        localStorage.removeItem('TokenDeAcceso');\r\n        localStorage.removeItem('ExpiracionToken');\r\n        this.router.navigate(['/']);\r\n    }\r\n\r\n    // Comprobamos si el usuario esta autentificado si esta el token el el storage\r\n    comprobarAutentificacion(): boolean {\r\n        // tslint:disable-next-line: semicolon\r\n        return localStorage.getItem('TokenDeAcceso') !== null;\r\n    }\r\n\r\n    // Nos devolvera el token guardado en localstorage\r\n    getToken(): string {\r\n        return localStorage.getItem('TokenDeAcceso');\r\n    }\r\n\r\n    // Nos devolvera la expiracion del token guardado en localstorage\r\n    getExpiracionToken(): string {\r\n        return localStorage.getItem('ExpiracionToken');\r\n    }\r\n\r\n    // Desciframos los datos del token\r\n    getTokenData(): JsonWebToken {\r\n        const t = this.getToken();\r\n        if (t) {\r\n            const token = this.jwtHelper.decodeToken(t);\r\n            return {\r\n                id: token.id,\r\n                nombre: token.nombre,\r\n                dni: token.dni,\r\n                acceso: token.acceso\r\n            };\r\n        } else {\r\n            return {} as JsonWebToken;\r\n        }\r\n    }\r\n\r\n    // Devolvemos acceso del usuario\r\n    getAccesoUsuario(): string {\r\n        const token = this.getTokenData();\r\n        return token.acceso;\r\n    }\r\n    // Devolvemos acceso del usuario\r\n    getIdUsuario(): string {\r\n        const token = this.getTokenData();\r\n        return token.id;\r\n    }\r\n\r\n    //#endregion\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Tabla, Tablas, CambiosPeso } from '../modelos/tabla';\r\n\r\n@Injectable()\r\nexport class TablasService {\r\n\r\n  // Direccones de servidor de back\r\n  local = 'http://localhost:3000';\r\n  heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n  ServidorBACKEND = this.local;\r\n  authSubject = new BehaviorSubject(false);\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  //#region FUNCIONES INTERACTUAR CON API\r\n\r\n  // Funcion para guardar en base de datos nueva tabla\r\n  crearTabla(tabla: Tabla): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/crearTabla`, { tabla });\r\n  }\r\n\r\n  // Buscamos las tablas del usuario que mandamos a la api\r\n  listarTablasUsuario(idUsuario): Observable<Tablas> {\r\n    return this.httpClient.post<Tablas>(`${this.ServidorBACKEND}/listarTablasUsuario`, { idUsuario });\r\n  }\r\n\r\n  // Buscamos la tabla con la api en la base de datos\r\n  buscarTabla(idTabla): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/buscarTabla`, { idTabla });\r\n  }\r\n\r\n  // Actualizamos pesosMax de tabla\r\n  actualizarPesoMax(cambiosPesoMax: Array<CambiosPeso>) {\r\n    return this.httpClient.post(`${this.ServidorBACKEND}/actualizarPeso`, cambiosPesoMax);\r\n  }\r\n\r\n  //#endregion\r\n\r\n\r\n\r\n}\r\n","import { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Usuario } from '../modelos/usuario';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UsuariosService {\r\n\r\n  // Direccones de servidor de back\r\n  local = 'http://localhost:3000';\r\n  heroku = 'https://webappimpactoback.herokuapp.com';\r\n\r\n  ServidorBACKEND = this.local;\r\n  authSubject = new BehaviorSubject(false);\r\n\r\n  // Variable para descifrar token\r\n  jwtHelper: JwtHelperService = new JwtHelperService();\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  //#region FUNCIONES INTERACTUAR CON API\r\n\r\n  // Funcion para logear usuario\r\n  loginUsuario(dni: string, password: string): Observable<any> {\r\n    // mandamos en un post a la url del servidor del back, el dni y password que queremos comprobar que esta en bbdd\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/loginUsuario`,\r\n      { dni, password }).pipe(tap(\r\n        (res: any) => {\r\n          if (res) {\r\n            // Si el back funciona correctamente la respuesta sera un token que guardamos en la siguiente funcion\r\n            this.guardarToken(res.accessToken);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  // Funcion para registrar nuevos usuarios\r\n  registrarUsuario(user: Usuario): Observable<any> {\r\n    // mandamos en un post a la url del servidor del back, el usuario que queremos guardar en bbdd\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/registrarUsuario`,\r\n      user).pipe(tap(\r\n        (res) => {\r\n          if (res) {\r\n            // Si el back funciona correctamente la respuesta sera un token que guardamos en la siguiente funcion\r\n            console.log('Usuario registrado');\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  // Buscamos los usuarios registrados en la base de datos y devolvemos nombre y id\r\n  usuariosRegistrados() {\r\n    return this.httpClient.get<any>(`${this.ServidorBACKEND}/listarUsuarios`);\r\n  }\r\n\r\n  // Buscamos usuarios con el nivel acceso indicado. El nivel habra que mandarle en formato { \"acceso\" : [1,3,4] }\r\n  usuariosNivelAcceso(acceso) {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/listarUsuariosFiltrarNivel`, { acceso });\r\n  }\r\n\r\n  // Buscamos usuario con api en bbdd para usar sus datos\r\n  buscarUsuario(idUsuario) {\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/buscarUsuario`, { idUsuario });\r\n  }\r\n\r\n  // Funcion para cambiar contrase√±a\r\n  cambiarContrase√±a(contraVieja, contraNueva, idUsuario): Observable<any> {\r\n    // mandamos en un post a la url del servidor del back las dos contrase√±as para comprobar y cambiar\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/cambiarContrasena`, { contraVieja, contraNueva, idUsuario });\r\n  }\r\n\r\n  // Funcion para cambiar contrase√±a\r\n  modificarDatosUsuario(user: Usuario): Observable<any> {\r\n    // mandamos en un post a la url del servidor del back las dos contrase√±as para comprobar y cambiar\r\n    return this.httpClient.post<any>(`${this.ServidorBACKEND}/modificarDatosUsuario`,  user );\r\n  }\r\n\r\n  //#endregion\r\n\r\n\r\n  //#region FUNCIONES INTERNAS\r\n\r\n  // Funcion que nos guardara el token en el localStorage del navegador\r\n  private guardarToken(token: string): void {\r\n    localStorage.setItem('TokenDeAcceso', token);\r\n  }\r\n\r\n  //#endregion\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}